{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\book-blog\\\\src\\\\APIComponentHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getBooks } from \"./api/books\";\nimport Books from \"./pages/Books/BookList/bookList\";\nimport \"./styles.scss\";\nimport Paginations from \"./pages/Books/BookList/Pagination\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport { getBooksAction } from \"./store/reducers/booksReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst APIComponentHook = ({\n  getData,\n  data,\n  loading\n}) => {\n  _s();\n\n  // const [ bookList, setBookList ] = useState([]);\n  // const [ loading, setLoading ] = useState(true);\n  // const [ error, setError ] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    bookList,\n    isLoading\n  } = useSelector(state => state.books); // const fetch = () => {\n  // }\n\n  useEffect(() => {\n    // console.log(loading);\n    dispatch(getBooks());\n  }, []); // const [currentPage, setCurrentPage] = useState(1);\n  // const [booksPerPage] = useState(15);\n  // const lastBookIndex = currentPage * booksPerPage\n  // const firstBookIndex = lastBookIndex - booksPerPage\n  // const currentBook = bookList.slice(firstBookIndex, lastBookIndex)\n  // const paginate = pageNumber => {\n  //     setCurrentPage(pageNumber)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: (bookList === null || bookList === void 0 ? void 0 : bookList.length) && /*#__PURE__*/_jsxDEV(Books, {\n      bookList: bookList,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}; // const mapStateToProps = (state) => {\n//   //console.log(state);\n//   return {\n//     data: state.books.bookList,\n//     loading: state.books.isLoading,\n//   };\n// };\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     getData: () => {\n//       dispatch(getBooks());\n//     },\n//   };\n// };\n//connect(mapStateToProps, mapDispatchToProps)\n\n\n_s(APIComponentHook, \"22aHOK245UHbC3BZ5iJzJT2K+ok=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = APIComponentHook;\nexport default APIComponentHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"APIComponentHook\");","map":{"version":3,"sources":["E:/React-apps/book-blog/src/APIComponentHook.js"],"names":["React","useEffect","useState","getBooks","Books","Paginations","connect","useDispatch","useSelector","getBooksAction","APIComponentHook","getData","data","loading","dispatch","bookList","isLoading","state","books","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,cAAT,QAA+B,+BAA/B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,IAAX;AAAiBC,EAAAA;AAAjB,CAAD,KAAgC;AAAA;;AACvD;AACA;AACA;AAEE,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAA3C,CANqD,CAQrD;AAEA;;AAEFjB,EAAAA,SAAS,CAAC,MAAM;AACb;AACCa,IAAAA,QAAQ,CAACX,QAAQ,EAAT,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT,CAZuD,CAiBvD;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,cACG,CAAAY,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEI,MAAV,kBAAoB,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEJ,QAAjB;AAA2B,MAAA,OAAO,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA;AADvB;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvCD,C,CAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxDMN,gB;UAKeH,W,EACeC,W;;;KAN9BE,gB;AAyDN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getBooks } from \"./api/books\";\r\nimport Books from \"./pages/Books/BookList/bookList\";\r\nimport \"./styles.scss\";\r\nimport Paginations from \"./pages/Books/BookList/Pagination\";\r\nimport { connect, useDispatch, useSelector } from \"react-redux\";\r\nimport { getBooksAction } from \"./store/reducers/booksReducer\";\r\n\r\nconst APIComponentHook = ({ getData, data, loading }) => {\r\n  // const [ bookList, setBookList ] = useState([]);\r\n  // const [ loading, setLoading ] = useState(true);\r\n  // const [ error, setError ] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    const { bookList, isLoading } = useSelector(state => state.books);\r\n\r\n    // const fetch = () => {\r\n        \r\n    // }\r\n\r\n  useEffect(() => {\r\n     // console.log(loading);\r\n      dispatch(getBooks());\r\n  }, []);\r\n\r\n  // const [currentPage, setCurrentPage] = useState(1);\r\n  // const [booksPerPage] = useState(15);\r\n\r\n  // const lastBookIndex = currentPage * booksPerPage\r\n  // const firstBookIndex = lastBookIndex - booksPerPage\r\n  // const currentBook = bookList.slice(firstBookIndex, lastBookIndex)\r\n\r\n  // const paginate = pageNumber => {\r\n  //     setCurrentPage(pageNumber)\r\n  // }\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      {bookList?.length && <Books bookList={bookList} loading={isLoading} />}\r\n      {/* <Paginations \r\n            booksPerPage={booksPerPage}\r\n            totalBooks={this.props.data.length}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n            /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// const mapStateToProps = (state) => {\r\n//   //console.log(state);\r\n//   return {\r\n//     data: state.books.bookList,\r\n//     loading: state.books.isLoading,\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     getData: () => {\r\n//       dispatch(getBooks());\r\n//     },\r\n//   };\r\n// };\r\n//connect(mapStateToProps, mapDispatchToProps)\r\nexport default APIComponentHook;\r\n"]},"metadata":{},"sourceType":"module"}