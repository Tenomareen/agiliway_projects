{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\book-blog\\\\src\\\\APIComponentHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getBooks } from \"./api/books\";\nimport Books from \"./pages/Books/BookList/bookList\";\nimport \"./styles.scss\";\nimport Paginations from \"./pages/Books/BookList/Pagination\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst APIComponentHook = () => {\n  _s();\n\n  const [bookList, setBookList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    this.props.getData();\n  }, []);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [booksPerPage] = useState(15);\n  const lastBookIndex = currentPage * booksPerPage;\n  const firstBookIndex = lastBookIndex - booksPerPage;\n  const currentBook = bookList.slice(firstBookIndex, lastBookIndex); // const paginate = pageNumber => {\n  //     setCurrentPage(pageNumber)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Books, {\n      bookList: this.props.data,\n      loading: this.props.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(APIComponentHook, \"HuMjuuwUTdcNbPyzeM7KAsfyIpE=\");\n\n_c = APIComponentHook;\n\nconst mapStateToProps = state => ({\n  data: state.books.bookList,\n  loading: state.books.isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getBooks());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(APIComponentHook);\n\nvar _c;\n\n$RefreshReg$(_c, \"APIComponentHook\");","map":{"version":3,"sources":["E:/React-apps/book-blog/src/APIComponentHook.js"],"names":["React","useEffect","useState","getBooks","Books","Paginations","connect","APIComponentHook","bookList","setBookList","loading","setLoading","error","setError","props","getData","currentPage","setCurrentPage","booksPerPage","lastBookIndex","firstBookIndex","currentBook","slice","data","mapStateToProps","state","books","isLoading","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAO,eAAP;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAAEQ,OAAF,EAAWC,UAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAEU,KAAF,EAASC,QAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACb,SAAKa,KAAL,CAAWC,OAAX;AACF,GAFQ,EAEP,EAFO,CAAT;AAIA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,IAAiBhB,QAAQ,CAAC,EAAD,CAA/B;AAEA,QAAMiB,aAAa,GAAGH,WAAW,GAAGE,YAApC;AACA,QAAME,cAAc,GAAGD,aAAa,GAAGD,YAAvC;AACA,QAAMG,WAAW,GAAGb,QAAQ,CAACc,KAAT,CAAeF,cAAf,EAA+BD,aAA/B,CAApB,CAd2B,CAgB3B;AACA;AACA;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,2BACI,QAAC,KAAD;AACA,MAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWS,IADrB;AAEA,MAAA,OAAO,EAAE,KAAKT,KAAL,CAAWJ;AAFpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlCD;;GAAMH,gB;;KAAAA,gB;;AAoCN,MAAMiB,eAAe,GAAIC,KAAD,KAAY;AAChCF,EAAAA,IAAI,EAAEE,KAAK,CAACC,KAAN,CAAYlB,QADc;AAEhCE,EAAAA,OAAO,EAAEe,KAAK,CAACC,KAAN,CAAYC;AAFW,CAAZ,CAAxB;;AAKE,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,OAAO,EAAE,MAAM;AACbc,MAAAA,QAAQ,CAAC1B,QAAQ,EAAT,CAAR;AACH;AAHM,GAAP;AAKD,CAND;;AAQF,eAAeG,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrB,gBAA7C,CAAf","sourcesContent":["import React,{ useEffect, useState } from \"react\";\r\nimport { getBooks } from \"./api/books\";\r\nimport Books from \"./pages/Books/BookList/bookList\";\r\nimport \"./styles.scss\";\r\nimport Paginations from \"./pages/Books/BookList/Pagination\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst APIComponentHook = () => {\r\n    const [ bookList, setBookList ] = useState([]);\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ error, setError ] = useState(false);\r\n\r\n    useEffect(() => {\r\n       this.props.getData();\r\n    },[])\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [booksPerPage] = useState(15);\r\n \r\n    const lastBookIndex = currentPage * booksPerPage\r\n    const firstBookIndex = lastBookIndex - booksPerPage\r\n    const currentBook = bookList.slice(firstBookIndex, lastBookIndex)\r\n\r\n    // const paginate = pageNumber => {\r\n    //     setCurrentPage(pageNumber)\r\n    // }\r\n\r\n    return (\r\n        <div className=\"center\">\r\n            <Books\r\n            bookList={this.props.data}\r\n            loading={this.props.loading}\r\n            />\r\n            {/* <Paginations \r\n            booksPerPage={booksPerPage}\r\n            totalBooks={this.props.data.length}\r\n            paginate={paginate}\r\n            currentPage={currentPage}\r\n            /> */}\r\n        </div>\r\n      );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.books.bookList,\r\n    loading: state.books.isLoading,\r\n  });\r\n\r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      getData: () => {\r\n        dispatch(getBooks());\r\n    }\r\n  }\r\n  }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(APIComponentHook);\r\n"]},"metadata":{},"sourceType":"module"}