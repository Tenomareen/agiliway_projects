{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\book-blog\\\\src\\\\pages\\\\Books\\\\BookList\\\\bookList.js\";\nimport React from \"react\";\nimport { Row, Spinner } from \"reactstrap\";\nimport Book from \"../BookItem/bookItem\";\nimport \"./styles.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getBooks } from \"../../../api/books\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Books = ({\n  bookList,\n  loading,\n  page,\n  handleRight,\n  handleLeft\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Books List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: !loading && bookList.map((book, index) => {\n            return /*#__PURE__*/_jsxDEV(Book, {\n              book: book\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Books;\n\nconst mapStateToProps = state => {\n  return {\n    data: state.books.bookList,\n    isLoading: state.books.isLoading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getBooks());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\n\nvar _c;\n\n$RefreshReg$(_c, \"Books\");","map":{"version":3,"sources":["E:/React-apps/book-blog/src/pages/Books/BookList/bookList.js"],"names":["React","Row","Spinner","Book","getBooks","connect","Books","bookList","loading","page","handleRight","handleLeft","map","book","index","mapStateToProps","state","data","books","isLoading","mapDispatchToProps","dispatch","getData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,OAAd,QAA6B,YAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,eAAP;AACA,OAAO,sCAAP;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,WAA3B;AAAwCC,EAAAA;AAAxC,CAAD,KAA0D;AAEtE,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE,QAAC,GAAD;AAAA,oBACG,CAACH,OAAD,IACCD,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5B,gCAAO,QAAC,IAAD;AAAM,cAAA,IAAI,EAAED;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EASGL,OAAO,iBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAgBD,CAlBD;;KAAMF,K;;AAoBN,MAAMS,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACE,KAAN,CAAYX,QADb;AAELY,IAAAA,SAAS,EAAEH,KAAK,CAACE,KAAN,CAAYC;AAFlB,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,QAAQ,CAACjB,QAAQ,EAAT,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeC,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Row, Spinner } from \"reactstrap\";\r\nimport Book from \"../BookItem/bookItem\";\r\nimport \"./styles.scss\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { getBooks } from \"../../../api/books\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Books = ({ bookList, loading, page, handleRight, handleLeft }) => {\r\n\r\n  return (\r\n    <>\r\n      <h1>Books List</h1>\r\n      <div>\r\n        <div>\r\n          <Row>\r\n            {!loading &&\r\n              bookList.map((book, index) => {\r\n                return <Book book={book} />;\r\n              })}\r\n          </Row>\r\n        </div>\r\n        {loading && <Spinner>Loading...</Spinner>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.books.bookList,\r\n    isLoading: state.books.isLoading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getBooks());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Books);\r\n"]},"metadata":{},"sourceType":"module"}