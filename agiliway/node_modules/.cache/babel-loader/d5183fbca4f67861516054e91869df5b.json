{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\agiliway\\\\src\\\\components\\\\Todo\\\\index.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class FirstComponent extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todoList: [],\n      fields: {\n        todoText: {\n          name: \"todoText\",\n          label: \"Todo text\",\n          value: \"\",\n          error: null,\n          validator: (value = \"\") => {\n            return value ? false : \"Required\";\n          }\n        }\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      const currentField = this.state.fields[name];\n      this.setState({\n        fields: { ...this.state.fields,\n          [name]: { ...currentField,\n            value\n          }\n        }\n      }); //  console.log(this.state.fields.todoText.value);\n    };\n\n    this.handleAdding = event => {\n      let todoItem = {\n        value: \"\"\n      };\n      const {\n        todoList,\n        value\n      } = this.state;\n      todoItem.value = this.state.fields.todoText.value;\n      event.preventDefault();\n      this.setState({\n        todoList: [...todoList, todoItem],\n        fields: {\n          todoText: {\n            name: \"todoText\",\n            label: \"Todo text\",\n            value: \"\"\n          }\n        }\n      });\n      console.log(value); // this.state.fields.todoText.value = \"\";\n    };\n\n    this.handleRemove = event => {\n      event.preventDefault();\n      const {\n        todoList\n      } = this.state;\n      this.setState({\n        todoList: [...todoList.splice(1, todoList.length)]\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const {\n      todoList,\n      fields: {\n        todoText\n      }\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), todoList.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: todo.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo Add Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              paddingRight: \"20px\"\n            },\n            htmlFor: todoText.name,\n            children: todoText.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleChange,\n            value: todoText.value,\n            name: todoText.name,\n            id: todoText.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), todoText.value.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 57\n          }, this), todoText.value.length > 15 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field contains too much symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: todoText.value.length === 0 || todoText.value.length > 15 || todoList.length === 9,\n            style: {\n              marginLeft: \"20px\"\n            },\n            onClick: this.handleAdding,\n            children: \"Add todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: this.state.todoList.length === 0,\n            onClick: this.handleRemove,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default FirstComponent;","map":{"version":3,"sources":["E:/React-apps/agiliway/src/components/Todo/index.js"],"names":["React","FirstComponent","Component","state","todoList","fields","todoText","name","label","value","error","validator","handleSubmit","event","preventDefault","handleChange","target","currentField","setState","handleAdding","todoItem","console","log","handleRemove","splice","length","render","props","map","todo","width","paddingRight","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nexport class FirstComponent extends React.Component {\r\n    state = {\r\n        todoList: [],\r\n        fields: {\r\n            todoText: {\r\n                name: \"todoText\",\r\n                label: \"Todo text\",\r\n                value: \"\",\r\n                error: null,\r\n                validator: (value = \"\") => {\r\n                    return value ? false : \"Required\";\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    handleSubmit = (event) => { \r\n        event.preventDefault();\r\n    };\r\n\r\n    handleChange = (event) => {\r\n        const { value, name } = event.target;\r\n        const currentField = this.state.fields[name];\r\n        this.setState({\r\n            fields: {\r\n                ...this.state.fields,\r\n                [name]: { ...currentField, value },\r\n            },\r\n        });\r\n      //  console.log(this.state.fields.todoText.value);\r\n    };\r\n\r\n    handleAdding = (event) => {\r\n        let todoItem = {\r\n            value : \"\"\r\n        }\r\n        const { todoList, value } = this.state;\r\n        todoItem.value = this.state.fields.todoText.value;\r\n        event.preventDefault();\r\n        this.setState({\r\n            todoList : [...todoList,todoItem],\r\n            fields: {\r\n                todoText: {\r\n                    name: \"todoText\",\r\n                    label: \"Todo text\",\r\n                    value: \"\",\r\n        }}});\r\n        console.log(value);\r\n       // this.state.fields.todoText.value = \"\";\r\n    }\r\n\r\n    handleRemove = (event) => {\r\n        event.preventDefault();\r\n        const { todoList } = this.state;\r\n        this.setState({todoList: [...todoList.splice(1, todoList.length)]})\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const {\r\n            todoList,\r\n            fields: { todoText },\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <div>Todo List</div>\r\n                    {todoList.map((todo) => (\r\n                        <div>{todo.value}</div>\r\n                    ))}\r\n                </div>\r\n                <hr style={{ width: \"100%\" }} />\r\n                <div>\r\n                    <div>Todo Add Form</div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <label style={{ paddingRight: \"20px\" }} htmlFor={todoText.name}>\r\n                            {todoText.label}\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            onChange={this.handleChange}\r\n                            value={todoText.value}\r\n                            name={todoText.name}\r\n                            id={todoText.name}\r\n                        />\r\n                        {todoText.value.length === 0 && <span>Field can't be empty</span>}\r\n                        {todoText.value.length > 15 && <span>Field contains too much symbols</span>}\r\n                        <button\r\n                            disabled={todoText.value.length === 0 || todoText.value.length > 15 || todoList.length === 9 }\r\n                            style={{ marginLeft: \"20px\" }} onClick={this.handleAdding}\r\n                        >\r\n                            Add todo\r\n                        </button>\r\n                        <button disabled={this.state.todoList.length === 0} onClick={this.handleRemove}>Remove</button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FirstComponent;"]},"metadata":{},"sourceType":"module"}