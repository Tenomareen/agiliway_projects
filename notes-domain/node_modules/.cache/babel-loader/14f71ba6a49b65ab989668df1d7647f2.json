{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport { getNotes } from \"../../api/notes\";\nimport Note from \"./NoteCard\";\nimport { connect } from \"react-redux\";\nimport { Row } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {\n      loading,\n      data\n    } = this.props.data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          children: !loading && data.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.notes.noteList,\n  loading: state.notes.isLoading\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNotes());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","getNotes","Note","connect","Row","NoteList","componentDidMount","props","getData","render","loading","data","map","note","index","mapStateToProps","state","notes","noteList","isLoading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,QAAoB,MAApB;;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAC/BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,OAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAoB,KAAKJ,KAAL,CAAWI,IAArC;AAEA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAE,EAAb;AAAA,oBACG,CAACD,OAAD,IACCC,IAAI,CAACC,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACxB,gCAAO,QAAC,IAAD;AAAM,cAAA,IAAI,EAAED;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAcD;;AAtB8B;;AAyBjC,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,IAAI,EAAEK,KAAK,CAACC,KAAN,CAAYC,QADgB;AAElCR,EAAAA,OAAO,EAAEM,KAAK,CAACC,KAAN,CAAYE;AAFa,CAAZ,CAAxB;;AAKA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLb,IAAAA,OAAO,EAAE,MAAM;AACba,MAAAA,QAAQ,CAACpB,QAAQ,EAAT,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeE,OAAO,CAACY,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getNotes } from \"../../api/notes\";\r\nimport Note from \"./NoteCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row } from \"antd\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    const { loading, data } = this.props.data;\r\n\r\n    return (\r\n      <>\r\n        <h1>Notes</h1>\r\n        <div className=\"site-card-wrapper\">\r\n          <Row gutter={16}>\r\n            {!loading &&\r\n              data.map((note, index) => {\r\n                return <Note note={note} />;\r\n              })}\r\n          </Row>\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  data: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNotes());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}