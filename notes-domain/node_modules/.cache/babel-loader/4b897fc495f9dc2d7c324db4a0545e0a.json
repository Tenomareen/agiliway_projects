{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport { getNotes } from \"../../api/notes\";\nimport Note from \"./Note\";\nimport { connect } from \"react-redux\";\nimport { Row, Button } from \"antd\";\nimport ModalAdd from \"../../components/Modals/modalCreate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loadingM: false,\n      visible: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        loadingM: true\n      });\n      setTimeout(() => {\n        this.setState({\n          loadingM: false,\n          visible: false\n        });\n      }, 3000);\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {\n      loading,\n      notes\n    } = this.props; // console.log(notes);\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.showModal,\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [this.state.visible && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: this.state.visible,\n          loadingM: this.state.loadingM,\n          handleOk: this.handleOk,\n          handleCancel: this.handleCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: \"space-around\"\n          },\n          children: !loading && notes.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.noteList,\n  loading: state.notes.isLoading,\n  visible: state.modalCreate.visible,\n  loadingModal: state.modalCreate.loadingModal\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNotes());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","getNotes","Note","connect","Row","Button","ModalAdd","NoteList","state","loadingM","visible","showModal","setState","handleOk","setTimeout","handleCancel","componentDidMount","props","getData","render","loading","notes","display","justifyContent","map","note","index","mapStateToProps","noteList","isLoading","modalCreate","loadingModal","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getNotes } from \"../../api/notes\";\r\nimport Note from \"./Note\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button } from \"antd\";\r\nimport ModalAdd from \"../../components/Modals/modalCreate\";\r\n\r\nclass NoteList extends Component {\r\n  state = {\r\n    loadingM: false,\r\n    visible: false,\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ loadingM: true });\r\n    setTimeout(() => {\r\n      this.setState({ loadingM: false, visible: false });\r\n    }, 3000);\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    const { loading, notes } = this.props;\r\n    // console.log(notes);\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <h1>Notes</h1>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.showModal}\r\n          >\r\n            Add New Note\r\n          </Button>\r\n        </div>\r\n        <div className=\"site-card-wrapper\">\r\n        {this.state.visible && <ModalAdd\r\n                visible={this.state.visible}\r\n                loadingM={this.state.loadingM}\r\n                handleOk={this.handleOk}\r\n                handleCancel={this.handleCancel}\r\n\r\n              />}\r\n          <Row gutter={16} style={{ justifyContent: \"space-around\" }}>\r\n            {!loading &&\r\n              notes.map((note, index) => {\r\n                return <Note note={note} />;\r\n              })}\r\n          </Row>\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notes: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n  visible: state.modalCreate.visible,\r\n  loadingModal: state.modalCreate.loadingModal,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNotes());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}