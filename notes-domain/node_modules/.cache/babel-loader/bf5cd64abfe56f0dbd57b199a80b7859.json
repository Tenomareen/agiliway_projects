{"ast":null,"code":"import createSagaMiddleware from 'redux-saga';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport modalReducer from '../pages/Notes/reducers/modalReducer';\nimport noteDetailsReducer from '../pages/Notes/reducers/noteDetailsReducer';\nimport notesReducer from '../pages/Notes/reducers/notesReducer';\nimport rootSaga from '../pages/sagas/rootSaga';\nconst rootReducer = combineReducers({\n  notes: notesReducer,\n  noteDetails: noteDetailsReducer,\n  modal: modalReducer\n});\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware, thunk];\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middleware)) // was thunk\n);\nsagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/store/store.js"],"names":["createSagaMiddleware","createStore","combineReducers","applyMiddleware","composeWithDevTools","thunk","modalReducer","noteDetailsReducer","notesReducer","rootSaga","rootReducer","notes","noteDetails","modal","sagaMiddleware","middleware","store","run"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,kBAAP,MAA+B,4CAA/B;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCS,EAAAA,KAAK,EAAEH,YAD2B;AAElCI,EAAAA,WAAW,EAAEL,kBAFqB;AAGlCM,EAAAA,KAAK,EAAEP;AAH2B,CAAD,CAAnC;AAMA,MAAMQ,cAAc,GAAGd,oBAAoB,EAA3C;AACA,MAAMe,UAAU,GAAG,CAACD,cAAD,EAAiBT,KAAjB,CAAnB;AAEA,MAAMW,KAAK,GAAGf,WAAW,CACvBS,WADuB,EAEvBN,mBAAmB,CAACD,eAAe,CAAC,GAAGY,UAAJ,CAAhB,CAFI,CAE8B;AAF9B,CAAzB;AAKAD,cAAc,CAACG,GAAf,CAAmBR,QAAnB;AAEA,eAAeO,KAAf","sourcesContent":["import createSagaMiddleware from 'redux-saga';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport modalReducer from '../pages/Notes/reducers/modalReducer';\nimport noteDetailsReducer from '../pages/Notes/reducers/noteDetailsReducer';\nimport notesReducer from '../pages/Notes/reducers/notesReducer';\nimport rootSaga from '../pages/sagas/rootSaga';\n\nconst rootReducer = combineReducers({\n  notes: notesReducer,\n  noteDetails: noteDetailsReducer,\n  modal: modalReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware, thunk]\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware)), // was thunk\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}