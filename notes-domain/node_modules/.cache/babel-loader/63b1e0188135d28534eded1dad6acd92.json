{"ast":null,"code":"'use strict';\n\nconst JSON5 = require('json5');\n\nconst specialValues = {\n  null: null,\n  true: true,\n  false: false\n};\n\nfunction parseQuery(query) {\n  if (query.substr(0, 1) !== '?') {\n    throw new Error(\"A valid query string passed to parseQuery should begin with '?'\");\n  }\n\n  query = query.substr(1);\n\n  if (!query) {\n    return {};\n  }\n\n  if (query.substr(0, 1) === '{' && query.substr(-1) === '}') {\n    return JSON5.parse(query);\n  }\n\n  const queryArgs = query.split(/[,&]/g);\n  const result = {};\n  queryArgs.forEach(arg => {\n    const idx = arg.indexOf('=');\n\n    if (idx >= 0) {\n      let name = arg.substr(0, idx);\n      let value = decodeURIComponent(arg.substr(idx + 1)); // eslint-disable-next-line no-prototype-builtins\n\n      if (specialValues.hasOwnProperty(value)) {\n        value = specialValues[value];\n      }\n\n      if (name.substr(-2) === '[]') {\n        name = decodeURIComponent(name.substr(0, name.length - 2));\n\n        if (!Array.isArray(result[name])) {\n          result[name] = [];\n        }\n\n        result[name].push(value);\n      } else {\n        name = decodeURIComponent(name);\n        result[name] = value;\n      }\n    } else {\n      if (arg.substr(0, 1) === '-') {\n        result[decodeURIComponent(arg.substr(1))] = false;\n      } else if (arg.substr(0, 1) === '+') {\n        result[decodeURIComponent(arg.substr(1))] = true;\n      } else {\n        result[decodeURIComponent(arg)] = true;\n      }\n    }\n  });\n  return result;\n}\n\nmodule.exports = parseQuery;","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/node_modules/loader-utils/lib/parseQuery.js"],"names":["JSON5","require","specialValues","null","true","false","parseQuery","query","substr","Error","parse","queryArgs","split","result","forEach","arg","idx","indexOf","name","value","decodeURIComponent","hasOwnProperty","length","Array","isArray","push","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,IADc;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,KAAK,EAAE;AAHa,CAAtB;;AAMA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,MAAuB,GAA3B,EAAgC;AAC9B,UAAM,IAAIC,KAAJ,CACJ,iEADI,CAAN;AAGD;;AAEDF,EAAAA,KAAK,GAAGA,KAAK,CAACC,MAAN,CAAa,CAAb,CAAR;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,WAAO,EAAP;AACD;;AAED,MAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgB,CAAhB,MAAuB,GAAvB,IAA8BD,KAAK,CAACC,MAAN,CAAa,CAAC,CAAd,MAAqB,GAAvD,EAA4D;AAC1D,WAAOR,KAAK,CAACU,KAAN,CAAYH,KAAZ,CAAP;AACD;;AAED,QAAMI,SAAS,GAAGJ,KAAK,CAACK,KAAN,CAAY,OAAZ,CAAlB;AACA,QAAMC,MAAM,GAAG,EAAf;AAEAF,EAAAA,SAAS,CAACG,OAAV,CAAmBC,GAAD,IAAS;AACzB,UAAMC,GAAG,GAAGD,GAAG,CAACE,OAAJ,CAAY,GAAZ,CAAZ;;AAEA,QAAID,GAAG,IAAI,CAAX,EAAc;AACZ,UAAIE,IAAI,GAAGH,GAAG,CAACP,MAAJ,CAAW,CAAX,EAAcQ,GAAd,CAAX;AACA,UAAIG,KAAK,GAAGC,kBAAkB,CAACL,GAAG,CAACP,MAAJ,CAAWQ,GAAG,GAAG,CAAjB,CAAD,CAA9B,CAFY,CAIZ;;AACA,UAAId,aAAa,CAACmB,cAAd,CAA6BF,KAA7B,CAAJ,EAAyC;AACvCA,QAAAA,KAAK,GAAGjB,aAAa,CAACiB,KAAD,CAArB;AACD;;AAED,UAAID,IAAI,CAACV,MAAL,CAAY,CAAC,CAAb,MAAoB,IAAxB,EAA8B;AAC5BU,QAAAA,IAAI,GAAGE,kBAAkB,CAACF,IAAI,CAACV,MAAL,CAAY,CAAZ,EAAeU,IAAI,CAACI,MAAL,GAAc,CAA7B,CAAD,CAAzB;;AAEA,YAAI,CAACC,KAAK,CAACC,OAAN,CAAcX,MAAM,CAACK,IAAD,CAApB,CAAL,EAAkC;AAChCL,UAAAA,MAAM,CAACK,IAAD,CAAN,GAAe,EAAf;AACD;;AAEDL,QAAAA,MAAM,CAACK,IAAD,CAAN,CAAaO,IAAb,CAAkBN,KAAlB;AACD,OARD,MAQO;AACLD,QAAAA,IAAI,GAAGE,kBAAkB,CAACF,IAAD,CAAzB;AACAL,QAAAA,MAAM,CAACK,IAAD,CAAN,GAAeC,KAAf;AACD;AACF,KArBD,MAqBO;AACL,UAAIJ,GAAG,CAACP,MAAJ,CAAW,CAAX,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AAC5BK,QAAAA,MAAM,CAACO,kBAAkB,CAACL,GAAG,CAACP,MAAJ,CAAW,CAAX,CAAD,CAAnB,CAAN,GAA4C,KAA5C;AACD,OAFD,MAEO,IAAIO,GAAG,CAACP,MAAJ,CAAW,CAAX,EAAc,CAAd,MAAqB,GAAzB,EAA8B;AACnCK,QAAAA,MAAM,CAACO,kBAAkB,CAACL,GAAG,CAACP,MAAJ,CAAW,CAAX,CAAD,CAAnB,CAAN,GAA4C,IAA5C;AACD,OAFM,MAEA;AACLK,QAAAA,MAAM,CAACO,kBAAkB,CAACL,GAAD,CAAnB,CAAN,GAAkC,IAAlC;AACD;AACF;AACF,GAjCD;AAmCA,SAAOF,MAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiBrB,UAAjB","sourcesContent":["'use strict';\r\n\r\nconst JSON5 = require('json5');\r\n\r\nconst specialValues = {\r\n  null: null,\r\n  true: true,\r\n  false: false,\r\n};\r\n\r\nfunction parseQuery(query) {\r\n  if (query.substr(0, 1) !== '?') {\r\n    throw new Error(\r\n      \"A valid query string passed to parseQuery should begin with '?'\"\r\n    );\r\n  }\r\n\r\n  query = query.substr(1);\r\n\r\n  if (!query) {\r\n    return {};\r\n  }\r\n\r\n  if (query.substr(0, 1) === '{' && query.substr(-1) === '}') {\r\n    return JSON5.parse(query);\r\n  }\r\n\r\n  const queryArgs = query.split(/[,&]/g);\r\n  const result = {};\r\n\r\n  queryArgs.forEach((arg) => {\r\n    const idx = arg.indexOf('=');\r\n\r\n    if (idx >= 0) {\r\n      let name = arg.substr(0, idx);\r\n      let value = decodeURIComponent(arg.substr(idx + 1));\r\n\r\n      // eslint-disable-next-line no-prototype-builtins\r\n      if (specialValues.hasOwnProperty(value)) {\r\n        value = specialValues[value];\r\n      }\r\n\r\n      if (name.substr(-2) === '[]') {\r\n        name = decodeURIComponent(name.substr(0, name.length - 2));\r\n\r\n        if (!Array.isArray(result[name])) {\r\n          result[name] = [];\r\n        }\r\n\r\n        result[name].push(value);\r\n      } else {\r\n        name = decodeURIComponent(name);\r\n        result[name] = value;\r\n      }\r\n    } else {\r\n      if (arg.substr(0, 1) === '-') {\r\n        result[decodeURIComponent(arg.substr(1))] = false;\r\n      } else if (arg.substr(0, 1) === '+') {\r\n        result[decodeURIComponent(arg.substr(1))] = true;\r\n      } else {\r\n        result[decodeURIComponent(arg)] = true;\r\n      }\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports = parseQuery;\r\n"]},"metadata":{},"sourceType":"script"}