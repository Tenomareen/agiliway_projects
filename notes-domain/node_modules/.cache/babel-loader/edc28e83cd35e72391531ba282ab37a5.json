{"ast":null,"code":"var _jsxFileName = \"E:\\\\agiliway_projects\\\\agiliway_projects\\\\notes-domain\\\\src\\\\pages\\\\Statistics\\\\Statistics.js\";\nimport { Table, Button, Space, Spin } from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { closeNotes } from '../Notes/actions/actions';\nimport { loadingSelector, notesSelector } from '../Notes/selectors/notesSelectors';\nimport { getNoteList } from '../Notes/thunks/notesThunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Statistics extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getData\n    } = this.props;\n    getData();\n  }\n\n  componentWillUnmount() {\n    const {\n      closeNotes\n    } = this.props;\n    closeNotes();\n  }\n\n  handleChange(filters, sorter) {\n    // console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter\n    });\n  }\n\n  setAgeSort() {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age'\n      }\n    });\n  }\n\n  clearAll() {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null\n    });\n  }\n\n  clearFilters() {\n    this.setState({\n      filteredInfo: null\n    });\n  }\n\n  render() {\n    const {\n      data,\n      loading\n    } = this.props;\n    let {\n      sortedInfo,\n      filteredInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Author',\n      dataIndex: 'author',\n      key: 'author',\n      sorter: (a, b) => a.author - b.author,\n      sortOrder: sortedInfo.columnKey === 'author' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.description || null,\n      onFilter: (value, record) => record.description.includes(value),\n      sorter: (a, b) => a.description.length - b.description.length,\n      sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Creation Date',\n      dataIndex: 'createDate',\n      key: 'createDate',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.createDate || null,\n      onFilter: (value, record) => record.createDate.includes(value),\n      render: text => moment(text).format('MMMM Do YYYY'),\n      sorter: (a, b) => a.createDate.length - b.createDate.length,\n      sortOrder: sortedInfo.columnKey === 'createDate' && sortedInfo.order,\n      ellipsis: true\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), ' ', \"Loading Statistics...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setAgeSort,\n          children: \"Sort age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.clearFilters,\n          children: \"Clear filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.clearAll,\n          children: \"Clear filters and sorters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: notesSelector(state),\n  loading: loadingSelector(state)\n});\n\nconst mapDispatchToProps = {\n  getData: getNoteList,\n  closeNotes\n};\nStatistics.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.array,\n  loading: PropTypes.bool,\n  getData: PropTypes.func,\n  closeNotes: PropTypes.func\n};\nStatistics.defaultProps = {\n  data: [],\n  loading: true,\n  getData: () => {},\n  closeNotes: () => {}\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/pages/Statistics/Statistics.js"],"names":["Table","Button","Space","Spin","React","connect","PropTypes","moment","closeNotes","loadingSelector","notesSelector","getNoteList","Statistics","Component","state","filteredInfo","sortedInfo","componentDidMount","getData","props","componentWillUnmount","handleChange","filters","sorter","setState","setAgeSort","order","columnKey","clearAll","clearFilters","render","data","loading","columns","title","dataIndex","key","text","value","filteredValue","name","onFilter","record","includes","a","b","length","sortOrder","ellipsis","author","description","createDate","format","marginBottom","mapStateToProps","mapDispatchToProps","propTypes","array","bool","func","defaultProps"],"mappings":"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","sourcesContent":["import {\n  Table, Button, Space, Spin,\n} from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { closeNotes } from '../Notes/actions/actions';\nimport { loadingSelector, notesSelector } from '../Notes/selectors/notesSelectors';\nimport { getNoteList } from '../Notes/thunks/notesThunk';\n\nclass Statistics extends React.Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n  };\n\n  componentDidMount() {\n    const { getData } = this.props;\n    getData();\n  }\n\n  componentWillUnmount() {\n    const { closeNotes } = this.props;\n    closeNotes();\n  }\n\n  handleChange(filters, sorter) {\n    // console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  }\n\n  setAgeSort() {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  };\n\n  clearAll() {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  }\n\n  clearFilters() {\n    this.setState({ filteredInfo: null });\n  }\n\n  render() {\n    const { data, loading } = this.props;\n    let { sortedInfo, filteredInfo } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [\n          { text: 'Joe', value: 'Joe' },\n          { text: 'Jim', value: 'Jim' },\n        ],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Author',\n        dataIndex: 'author',\n        key: 'author',\n        sorter: (a, b) => a.author - b.author,\n        sortOrder: sortedInfo.columnKey === 'author' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n        filters: [\n          { text: 'London', value: 'London' },\n          { text: 'New York', value: 'New York' },\n        ],\n        filteredValue: filteredInfo.description || null,\n        onFilter: (value, record) => record.description.includes(value),\n        sorter: (a, b) => a.description.length - b.description.length,\n        sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Creation Date',\n        dataIndex: 'createDate',\n        key: 'createDate',\n        filters: [\n          { text: 'London', value: 'London' },\n          { text: 'New York', value: 'New York' },\n        ],\n        filteredValue: filteredInfo.createDate || null,\n        onFilter: (value, record) => record.createDate.includes(value),\n        render: (text) => moment(text).format('MMMM Do YYYY'),\n        sorter: (a, b) => a.createDate.length - b.createDate.length,\n        sortOrder: sortedInfo.columnKey === 'createDate' && sortedInfo.order,\n        ellipsis: true,\n      },\n    ];\n    return (\n      <>\n        {loading && (\n          <div>\n            <Spin />\n            {' '}\n            Loading Statistics...\n          </div>\n        )}\n        <Space style={{ marginBottom: 16 }}>\n          <Button onClick={this.setAgeSort}>Sort age</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </Space>\n        <Table\n          columns={columns}\n          dataSource={data}\n          onChange={this.handleChange}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: notesSelector(state),\n  loading: loadingSelector(state),\n});\n\nconst mapDispatchToProps = {\n  getData: getNoteList,\n  closeNotes,\n};\n\nStatistics.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.array,\n  loading: PropTypes.bool,\n  getData: PropTypes.func,\n  closeNotes: PropTypes.func,\n};\n\nStatistics.defaultProps = {\n  data: [],\n  loading: true,\n  getData: () => {},\n  closeNotes: () => {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\n"]},"metadata":{},"sourceType":"module"}