{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport { deleteNote, getNoteById, getNoteEdit, getNotes, postNote, putNote } from \"../../api/notes\";\nimport Note from \"./Note\";\nimport { connect } from \"react-redux\";\nimport { Row, Button } from \"antd\";\nimport ModalAdd from \"../../components/Modals/modalCreate\";\nimport { postNoteCloseAction, postNoteShowAction } from \"../../store/reducers/modalCreateReducer\";\nimport ModalDelete from \"../../components/Modals/modalDelete\";\nimport { deleteNoteCloseAction, deleteNoteShowAction } from \"../../store/reducers/modalDeleteReducer\";\nimport ModalEdit from \"../../components/Modals/modalEdit\";\nimport { editNoteCloseAction, editNoteShowAction } from \"../../store/reducers/modalEditReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {\n      loading,\n      notes,\n      visibleAdd,\n      visibleDelete,\n      id,\n      visibleEdit,\n      noteEdit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => this.props.showModalAdd(),\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [visibleAdd && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: visibleAdd,\n          closeModal: this.props.closeModalAdd,\n          handleSubmitCreate: this.props.handleSubmitCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), visibleDelete && /*#__PURE__*/_jsxDEV(ModalDelete, {\n          id: id,\n          visible: visibleDelete,\n          handleDelete: this.props.handleDelete,\n          closeModal: this.props.closeModalDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), visibleEdit && /*#__PURE__*/_jsxDEV(ModalEdit, {\n          visible: visibleEdit,\n          closeModal: this.props.closeModalEdit,\n          noteEdit: noteEdit,\n          handleSubmitEdit: this.props.handleSubmitEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: \"space-around\"\n          },\n          children: !loading && notes.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note,\n              showModalDelete: this.props.showModalDelete,\n              showModalEdit: this.props.showModalEdit,\n              getNoteById: this.props.getNoteById\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.noteList,\n  loading: state.notes.isLoading,\n  visibleAdd: state.modalCreate.visible,\n  visibleDelete: state.modalDelete.visible,\n  id: state.modalDelete.id,\n  visibleEdit: state.modalEdit.visible,\n  noteEdit: state.modalEdit.note\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNotes());\n    },\n    showModalAdd: () => {\n      dispatch(postNoteShowAction());\n    },\n    handleDelete: id => {\n      dispatch(deleteNote(id));\n    },\n    closeModalDelete: () => {\n      dispatch(deleteNoteCloseAction());\n    },\n    closeModalAdd: () => {\n      dispatch(postNoteCloseAction());\n    },\n    showModalDelete: id => {\n      dispatch(deleteNoteShowAction(id));\n    },\n    showModalEdit: id => {\n      dispatch(editNoteShowAction(id));\n      dispatch(getNoteEdit(id));\n    },\n    closeModalEdit: () => {\n      dispatch(editNoteCloseAction());\n    },\n    handleSubmitEdit: editValues => {\n      const note = {\n        name: editValues.name,\n        author: editValues.author,\n        description: editValues.description\n      };\n      dispatch(putNote(note, editValues.uuid));\n    },\n    handleSubmitCreate: values => {\n      dispatch(postNote(values));\n    },\n    getNoteById: id => {\n      dispatch(getNoteById(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","deleteNote","getNoteById","getNoteEdit","getNotes","postNote","putNote","Note","connect","Row","Button","ModalAdd","postNoteCloseAction","postNoteShowAction","ModalDelete","deleteNoteCloseAction","deleteNoteShowAction","ModalEdit","editNoteCloseAction","editNoteShowAction","NoteList","componentDidMount","props","getData","render","loading","notes","visibleAdd","visibleDelete","id","visibleEdit","noteEdit","display","justifyContent","showModalAdd","closeModalAdd","handleSubmitCreate","handleDelete","closeModalDelete","closeModalEdit","handleSubmitEdit","map","note","index","showModalDelete","showModalEdit","mapStateToProps","state","noteList","isLoading","modalCreate","visible","modalDelete","modalEdit","mapDispatchToProps","dispatch","editValues","name","author","description","uuid","values"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  deleteNote,\r\n  getNoteById,\r\n  getNoteEdit,\r\n  getNotes,\r\n  postNote,\r\n  putNote,\r\n} from \"../../api/notes\";\r\nimport Note from \"./Note\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button } from \"antd\";\r\nimport ModalAdd from \"../../components/Modals/modalCreate\";\r\nimport {\r\n  postNoteCloseAction,\r\n  postNoteShowAction,\r\n} from \"../../store/reducers/modalCreateReducer\";\r\nimport ModalDelete from \"../../components/Modals/modalDelete\";\r\nimport {\r\n  deleteNoteCloseAction,\r\n  deleteNoteShowAction,\r\n} from \"../../store/reducers/modalDeleteReducer\";\r\nimport ModalEdit from \"../../components/Modals/modalEdit\";\r\nimport {\r\n  editNoteCloseAction,\r\n  editNoteShowAction,\r\n} from \"../../store/reducers/modalEditReducer\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      loading,\r\n      notes,\r\n      visibleAdd,\r\n      visibleDelete,\r\n      id,\r\n      visibleEdit,\r\n      noteEdit,\r\n    } = this.props;\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <h1>Notes</h1>\r\n          <Button type=\"primary\" onClick={() => this.props.showModalAdd()}>\r\n            Add New Note\r\n          </Button>\r\n        </div>\r\n        <div className=\"site-card-wrapper\">\r\n          {visibleAdd && (\r\n            <ModalAdd\r\n              visible={visibleAdd}\r\n              closeModal={this.props.closeModalAdd}\r\n              handleSubmitCreate={this.props.handleSubmitCreate}\r\n            />\r\n          )}\r\n          {visibleDelete && (\r\n            <ModalDelete\r\n              id={id}\r\n              visible={visibleDelete}\r\n              handleDelete={this.props.handleDelete}\r\n              closeModal={this.props.closeModalDelete}\r\n            />\r\n          )}\r\n          {visibleEdit && (\r\n            <ModalEdit\r\n              visible={visibleEdit}\r\n              closeModal={this.props.closeModalEdit}\r\n              noteEdit={noteEdit}\r\n              handleSubmitEdit={this.props.handleSubmitEdit}\r\n            />\r\n          )}\r\n          <Row gutter={16} style={{ justifyContent: \"space-around\" }}>\r\n            {!loading &&\r\n              notes.map((note, index) => {\r\n                return (\r\n                  <Note\r\n                    key={index}\r\n                    note={note}\r\n                    showModalDelete={this.props.showModalDelete}\r\n                    showModalEdit={this.props.showModalEdit}\r\n                    getNoteById={this.props.getNoteById}\r\n                  />\r\n                );\r\n              })}\r\n          </Row>\r\n          <Empty />\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notes: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n  visibleAdd: state.modalCreate.visible,\r\n  visibleDelete: state.modalDelete.visible,\r\n  id: state.modalDelete.id,\r\n  visibleEdit: state.modalEdit.visible,\r\n  noteEdit: state.modalEdit.note,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNotes());\r\n    },\r\n    showModalAdd: () => {\r\n      dispatch(postNoteShowAction());\r\n    },\r\n    handleDelete: (id) => {\r\n      dispatch(deleteNote(id));\r\n    },\r\n    closeModalDelete: () => {\r\n      dispatch(deleteNoteCloseAction());\r\n    },\r\n    closeModalAdd: () => {\r\n      dispatch(postNoteCloseAction());\r\n    },\r\n    showModalDelete: (id) => {\r\n      dispatch(deleteNoteShowAction(id));\r\n    },\r\n    showModalEdit: (id) => {\r\n      dispatch(editNoteShowAction(id));\r\n      dispatch(getNoteEdit(id));\r\n    },\r\n    closeModalEdit: () => {\r\n      dispatch(editNoteCloseAction());\r\n    },\r\n    handleSubmitEdit: (editValues) => {\r\n      const note = {\r\n        name: editValues.name,\r\n        author: editValues.author,\r\n        description: editValues.description,\r\n      };\r\n      dispatch(putNote(note, editValues.uuid));\r\n    },\r\n    handleSubmitCreate: (values) => {\r\n      dispatch(postNote(values));\r\n    },\r\n    getNoteById: (id) => {\r\n      dispatch(getNoteById(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}