{"ast":null,"code":"var _jsxFileName = \"E:\\\\agiliway_projects\\\\agiliway_projects\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Button, Empty, Spin } from 'antd';\nimport PropTypes from 'prop-types';\nimport Note from './Note';\nimport ModalAdd from './ModalAdd/ModalCreate';\nimport ModalDelete from './ModalDelete/ModalDelete';\nimport ModalEdit from './ModalEdit/ModalEdit';\nimport { closeNotes, deleteNoteStartAction, getNotesStartAction, modalNoteCloseAction, modalNoteShowAction } from './actions/actions';\nimport { createNote, deleteNoteById, editNote, getNoteForEdit, getNoteList } from './thunks/notesThunk';\nimport { loadingSelector, notesSelector } from './selectors/notesSelectors';\nimport { idSelector, modalLoadingSelector, noteEditSelector, typeSelector } from './selectors/modalSelectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleSubmit = editValues => {\n      const {\n        handleSubmitEdit\n      } = this.props;\n      const note = {\n        name: editValues.name,\n        author: editValues.author,\n        description: editValues.description\n      };\n      handleSubmitEdit(note, editValues.uuid);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      getNotesStart\n    } = this.props;\n    getNotesStart();\n  }\n\n  componentWillUnmount() {\n    const {\n      closeNotes\n    } = this.props;\n    closeNotes();\n  }\n\n  render() {\n    const {\n      type,\n      loading,\n      notes,\n      noteEdit,\n      id,\n      loadingModal,\n      showModal,\n      getNote,\n      closeModal,\n      handleSubmitCreate,\n      deleteNoteStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-around'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => showModal('create'),\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: 'space-around'\n          },\n          children: [!notes.length && !loading && /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }, this), !loading && notes.map((note, index) => /*#__PURE__*/_jsxDEV(Note, {\n            note: note,\n            showModalDelete: showModal,\n            getNote: getNote\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), ' ', \"Loading Note List...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), type === 'create' && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: true,\n          closeModal: closeModal,\n          handleSubmitCreate: handleSubmitCreate,\n          loading: loadingModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), type === 'delete' && /*#__PURE__*/_jsxDEV(ModalDelete, {\n          id: id,\n          visible: true,\n          handleDelete: deleteNoteStart,\n          closeModal: closeModal,\n          loading: loadingModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), type === 'edit' && /*#__PURE__*/_jsxDEV(ModalEdit, {\n          visible: true,\n          closeModal: closeModal,\n          noteEdit: noteEdit,\n          handleSubmitEdit: this.handleSubmit,\n          loading: loadingModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  type: typeSelector(state),\n  notes: notesSelector(state),\n  loading: loadingSelector(state),\n  noteEdit: noteEditSelector(state),\n  id: idSelector(state),\n  loadingModal: modalLoadingSelector(state)\n});\n\nconst mapDispatchToProps = {\n  createNoteStart: createNoteStartAction,\n  getNotesStart: getNotesStartAction,\n  getData: getNoteList,\n  showModal: modalNoteShowAction,\n  handleDelete: deleteNoteById,\n  closeModal: modalNoteCloseAction,\n  handleSubmitEdit: editNote,\n  handleSubmitCreate: createNote,\n  getNote: getNoteForEdit,\n  closeNotes: closeNotes,\n  deleteNoteStart: deleteNoteStartAction\n};\nNoteList.propTypes = {\n  createNoteStart: PropTypes.func,\n  type: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  notes: PropTypes.array,\n  loading: PropTypes.bool,\n  noteEdit: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string\n  }),\n  id: PropTypes.string,\n  loadingModal: PropTypes.bool,\n  getData: PropTypes.func,\n  showModal: PropTypes.func,\n  handleDelete: PropTypes.func,\n  closeModal: PropTypes.func,\n  handleSubmitEdit: PropTypes.func,\n  handleSubmitCreate: PropTypes.func,\n  getNote: PropTypes.func,\n  closeNotes: PropTypes.func,\n  getNotesStart: PropTypes.func,\n  deleteNoteStartAction: PropTypes.func\n};\nNoteList.defaultProps = {\n  type: '',\n  notes: [],\n  loading: true,\n  noteEdit: {},\n  id: '',\n  loadingModal: true,\n  getData: () => {},\n  showModal: () => {},\n  handleDelete: () => {},\n  closeModal: () => {},\n  handleSubmitEdit: () => {},\n  handleSubmitCreate: () => {},\n  getNote: () => {},\n  closeNotes: () => {},\n  getNotesStart: () => {},\n  deleteNoteStartAction: () => {},\n  createNoteStart: () => {}\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","connect","Row","Button","Empty","Spin","PropTypes","Note","ModalAdd","ModalDelete","ModalEdit","closeNotes","deleteNoteStartAction","getNotesStartAction","modalNoteCloseAction","modalNoteShowAction","createNote","deleteNoteById","editNote","getNoteForEdit","getNoteList","loadingSelector","notesSelector","idSelector","modalLoadingSelector","noteEditSelector","typeSelector","NoteList","handleSubmit","editValues","handleSubmitEdit","props","note","name","author","description","uuid","componentDidMount","getNotesStart","componentWillUnmount","render","type","loading","notes","noteEdit","id","loadingModal","showModal","getNote","closeModal","handleSubmitCreate","deleteNoteStart","display","justifyContent","length","map","index","mapStateToProps","state","mapDispatchToProps","createNoteStart","createNoteStartAction","getData","handleDelete","propTypes","func","string","array","bool","shape","createDate","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row, Button, Empty, Spin,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport Note from './Note';\nimport ModalAdd from './ModalAdd/ModalCreate';\nimport ModalDelete from './ModalDelete/ModalDelete';\nimport ModalEdit from './ModalEdit/ModalEdit';\nimport { closeNotes, deleteNoteStartAction, getNotesStartAction, modalNoteCloseAction, modalNoteShowAction } from './actions/actions';\nimport {\n  createNote,\n  deleteNoteById,\n  editNote,\n  getNoteForEdit,\n  getNoteList,\n} from './thunks/notesThunk';\nimport { loadingSelector, notesSelector } from './selectors/notesSelectors';\nimport {\n  idSelector, modalLoadingSelector, noteEditSelector, typeSelector,\n} from './selectors/modalSelectors';\n\nclass NoteList extends Component {\n  componentDidMount() {\n    const { getNotesStart } = this.props;\n    getNotesStart();\n  }\n\n  componentWillUnmount() {\n    const { closeNotes } = this.props;\n    closeNotes();\n  }\n\n  handleSubmit = (editValues) => {\n    const { handleSubmitEdit } = this.props;\n    const note = {\n      name: editValues.name,\n      author: editValues.author,\n      description: editValues.description,\n    };\n    handleSubmitEdit(note, editValues.uuid);\n  }\n\n  render() {\n    const {\n      type, loading, notes, noteEdit, id, loadingModal, showModal, getNote, closeModal, handleSubmitCreate, deleteNoteStart,\n    } = this.props;\n    return (\n      <>\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <h1>Notes</h1>\n          <Button type=\"primary\" onClick={() => showModal('create')}>\n            Add New Note\n          </Button>\n        </div>\n        <div className=\"site-card-wrapper\">\n          <Row gutter={16} style={{ justifyContent: 'space-around' }}>\n            {(!notes.length && !loading) && <Empty />}\n            {!loading\n              && notes.map((note, index) => (\n                <Note\n                  key={index}\n                  note={note}\n                  showModalDelete={showModal}\n                  getNote={getNote}\n                />\n              ))}\n          </Row>\n          {loading && (\n          <div>\n            <Spin />\n            {' '}\n            Loading Note List...\n          </div>\n          )}\n          {type === 'create' && (\n            <ModalAdd\n              visible\n              closeModal={closeModal}\n              handleSubmitCreate={handleSubmitCreate}\n              loading={loadingModal}\n            />\n          )}\n          {type === 'delete' && (\n            <ModalDelete\n              id={id}\n              visible\n              handleDelete={deleteNoteStart}\n              closeModal={closeModal}\n              loading={loadingModal}\n            />\n          )}\n          {type === 'edit' && (\n            <ModalEdit\n              visible\n              closeModal={closeModal}\n              noteEdit={noteEdit}\n              handleSubmitEdit={this.handleSubmit}\n              loading={loadingModal}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  type: typeSelector(state),\n  notes: notesSelector(state),\n  loading: loadingSelector(state),\n  noteEdit: noteEditSelector(state),\n  id: idSelector(state),\n  loadingModal: modalLoadingSelector(state),\n});\n\nconst mapDispatchToProps = {\n  createNoteStart: createNoteStartAction,\n  getNotesStart: getNotesStartAction,\n  getData: getNoteList,\n  showModal: modalNoteShowAction,\n  handleDelete: deleteNoteById,\n  closeModal: modalNoteCloseAction,\n  handleSubmitEdit: editNote,\n  handleSubmitCreate: createNote,\n  getNote: getNoteForEdit,\n  closeNotes: closeNotes,\n  deleteNoteStart: deleteNoteStartAction,\n};\n\nNoteList.propTypes = {\n  createNoteStart: PropTypes.func,\n  type: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  notes: PropTypes.array,\n  loading: PropTypes.bool,\n  noteEdit: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  id: PropTypes.string,\n  loadingModal: PropTypes.bool,\n  getData: PropTypes.func,\n  showModal: PropTypes.func,\n  handleDelete: PropTypes.func,\n  closeModal: PropTypes.func,\n  handleSubmitEdit: PropTypes.func,\n  handleSubmitCreate: PropTypes.func,\n  getNote: PropTypes.func,\n  closeNotes: PropTypes.func,\n  getNotesStart: PropTypes.func,\n  deleteNoteStartAction: PropTypes.func,\n};\n\nNoteList.defaultProps = {\n  type: '',\n  notes: [],\n  loading: true,\n  noteEdit: {},\n  id: '',\n  loadingModal: true,\n  getData: () => {},\n  showModal: () => {},\n  handleDelete: () => {},\n  closeModal: () => {},\n  handleSubmitEdit: () => {},\n  handleSubmitCreate: () => {},\n  getNote: () => {},\n  closeNotes: () => {},\n  getNotesStart: () => {},\n  deleteNoteStartAction: () => {},\n  createNoteStart: () => {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\n"]},"metadata":{},"sourceType":"module"}