{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport { deleteNote, getNoteById, getNotes, postNote, putNote } from '../../api/notes';\nimport { GET_ALL_NOTES_IN_PROGRESS, GET_NOTE_FOR_EDIT, MODAL_NOTE_CREATE_IN_PROGRESS, MODAL_NOTE_CREATE_START, MODAL_NOTE_DELETE_START, MODAL_NOTE_EDIT_START, MODAL_NOTE_IN_PROGRESS, NOTE_DETAIL_IN_PROGRESS } from '../Notes/action-types/note.action-types';\nimport { closeNotes, getNoteForEditSuccessAction, getNotesAction, getNotesInProgressAction, modalNoteCloseAction, modalNoteProgressAction, modalNoteSuccessAction } from '../Notes/actions/actions';\n\nfunction* getNotesSaga() {\n  try {\n    const data = yield call(getNotes);\n    yield put(getNotesAction(data));\n  } catch (error) {\n    yield put(closeNotes());\n  }\n}\n\nfunction* getNoteSaga(action) {\n  try {\n    const data = yield call(getNoteById, action.payload);\n    yield put({\n      type: 'NOTE_DETAIL_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: 'NOTE_DETAIL_CLOSE'\n    });\n  }\n}\n\nfunction* deleteNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n\n  try {\n    yield call(deleteNote, action.payload);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* createNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n\n  try {\n    yield call(postNote, action.payload);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* editNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n\n  try {\n    yield call(putNote, action.payload.data, action.payload.id);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* getNoteForEditNoteSaga(action) {\n  console.log(action.payload.id);\n\n  try {\n    const data = yield call(getNoteById, action.payload.id);\n    console.log(data);\n    yield put(getNoteForEditSuccessAction(data));\n  } catch (error) {\n    console.log('hello');\n  }\n}\n\nexport function* watcherGetNotesSaga() {\n  yield takeEvery(GET_ALL_NOTES_IN_PROGRESS, getNotesSaga);\n}\nexport function* watcherGetNoteByIdSaga() {\n  yield takeEvery(NOTE_DETAIL_IN_PROGRESS, getNoteSaga);\n}\nexport function* watcherDeleteNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_DELETE_START, deleteNoteSaga);\n}\nexport function* watcherCreateNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_CREATE_START, createNoteSaga);\n}\nexport function* watcherEditNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_EDIT_START, editNoteSaga);\n}\nexport function* watcherGetNoteForEditNoteByIdSaga() {\n  yield takeEvery(GET_NOTE_FOR_EDIT, getNoteForEditNoteSaga);\n}","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/pages/sagas/notesSagas.js"],"names":["put","takeEvery","call","deleteNote","getNoteById","getNotes","postNote","putNote","GET_ALL_NOTES_IN_PROGRESS","GET_NOTE_FOR_EDIT","MODAL_NOTE_CREATE_IN_PROGRESS","MODAL_NOTE_CREATE_START","MODAL_NOTE_DELETE_START","MODAL_NOTE_EDIT_START","MODAL_NOTE_IN_PROGRESS","NOTE_DETAIL_IN_PROGRESS","closeNotes","getNoteForEditSuccessAction","getNotesAction","getNotesInProgressAction","modalNoteCloseAction","modalNoteProgressAction","modalNoteSuccessAction","getNotesSaga","data","error","getNoteSaga","action","payload","type","deleteNoteSaga","createNoteSaga","editNoteSaga","id","getNoteForEditNoteSaga","console","log","watcherGetNotesSaga","watcherGetNoteByIdSaga","watcherDeleteNoteByIdSaga","watcherCreateNoteByIdSaga","watcherEditNoteByIdSaga","watcherGetNoteForEditNoteByIdSaga"],"mappings":"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","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects';\nimport {\n  deleteNote, getNoteById, getNotes, postNote, putNote,\n} from '../../api/notes';\nimport { GET_ALL_NOTES_IN_PROGRESS, GET_NOTE_FOR_EDIT, MODAL_NOTE_CREATE_IN_PROGRESS, MODAL_NOTE_CREATE_START, MODAL_NOTE_DELETE_START, MODAL_NOTE_EDIT_START, MODAL_NOTE_IN_PROGRESS, NOTE_DETAIL_IN_PROGRESS } from '../Notes/action-types/note.action-types';\nimport { closeNotes, getNoteForEditSuccessAction, getNotesAction, getNotesInProgressAction, modalNoteCloseAction, modalNoteProgressAction, modalNoteSuccessAction } from '../Notes/actions/actions';\n\nfunction* getNotesSaga() {\n  try {\n    const data = yield call(getNotes);\n    yield put(getNotesAction(data));\n  } catch (error) {\n    yield put(closeNotes());\n  }\n}\n\nfunction* getNoteSaga(action) {\n  try {\n    const data = yield call(getNoteById, action.payload);\n    yield put({\n      type: 'NOTE_DETAIL_SUCCESS', payload: data,\n    });\n  } catch (error) {\n    yield put({\n      type: 'NOTE_DETAIL_CLOSE',\n    });\n  }\n}\n\nfunction* deleteNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n  try {\n    yield call(deleteNote, action.payload);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* createNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n  try {\n    yield call(postNote, action.payload);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* editNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n  try {\n    yield call(putNote, action.payload.data, action.payload.id);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* getNoteForEditNoteSaga(action) {\n  console.log(action.payload.id);\n  try {\n    const data = yield call(getNoteById, action.payload.id);\n    console.log(data);\n    yield put(getNoteForEditSuccessAction(data));\n  } catch (error) {\n    console.log('hello');\n  }\n}\n\nexport function* watcherGetNotesSaga() {\n  yield takeEvery(GET_ALL_NOTES_IN_PROGRESS, getNotesSaga);\n}\n\nexport function* watcherGetNoteByIdSaga() {\n  yield takeEvery(NOTE_DETAIL_IN_PROGRESS, getNoteSaga);\n}\n\nexport function* watcherDeleteNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_DELETE_START, deleteNoteSaga);\n}\n\nexport function* watcherCreateNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_CREATE_START, createNoteSaga);\n}\n\nexport function* watcherEditNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_EDIT_START, editNoteSaga);\n}\n\nexport function* watcherGetNoteForEditNoteByIdSaga() {\n  yield takeEvery(GET_NOTE_FOR_EDIT, getNoteForEditNoteSaga);\n}\n"]},"metadata":{},"sourceType":"module"}