{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport { deleteNote, getNotes } from \"../../api/notes\";\nimport Note from \"./Note\";\nimport { connect } from \"react-redux\";\nimport { Row, Button } from \"antd\";\nimport ModalAdd from \"../../components/Modals/modalCreate\";\nimport { postNoteCloseAction, postNoteShowAction } from \"../../store/reducers/modalCreateReducer\";\nimport ModalDelete from \"../../components/Modals/modalDelete\";\nimport { deleteNoteCloseAction, deleteNoteShowAction } from \"../../store/reducers/modalDeleteReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {\n      loading,\n      notes,\n      visibleAdd,\n      visibleDelete,\n      id\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => this.props.showModalAdd(),\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [visibleAdd && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: visibleAdd,\n          closeModal: this.props.closeModalAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), visibleDelete && /*#__PURE__*/_jsxDEV(ModalDelete, {\n          id: id,\n          visible: visibleDelete,\n          handleDelete: this.props.handleDelete,\n          closeModal: this.props.closeModalDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: \"space-around\"\n          },\n          children: !loading && notes.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note,\n              showModalDelete: this.props.showModalDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.noteList,\n  loading: state.notes.isLoading,\n  visibleAdd: state.modalCreate.visible,\n  visibleDelete: state.modalDelete.visible,\n  id: state.modalDelete.id\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNotes());\n    },\n    showModalAdd: () => {\n      dispatch(postNoteShowAction());\n    },\n    handleDelete: id => {\n      dispatch(deleteNote(id));\n    },\n    closeModalDelete: () => {\n      dispatch(deleteNoteCloseAction());\n    },\n    closeModalAdd: () => {\n      dispatch(postNoteCloseAction());\n    },\n    showModalDelete: id => {\n      dispatch(deleteNoteShowAction(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","deleteNote","getNotes","Note","connect","Row","Button","ModalAdd","postNoteCloseAction","postNoteShowAction","ModalDelete","deleteNoteCloseAction","deleteNoteShowAction","NoteList","componentDidMount","props","getData","render","loading","notes","visibleAdd","visibleDelete","id","display","justifyContent","showModalAdd","closeModalAdd","handleDelete","closeModalDelete","map","note","index","showModalDelete","mapStateToProps","state","noteList","isLoading","modalCreate","visible","modalDelete","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { deleteNote, getNotes } from \"../../api/notes\";\r\nimport Note from \"./Note\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button } from \"antd\";\r\nimport ModalAdd from \"../../components/Modals/modalCreate\";\r\nimport {\r\n  postNoteCloseAction,\r\n  postNoteShowAction,\r\n} from \"../../store/reducers/modalCreateReducer\";\r\nimport ModalDelete from \"../../components/Modals/modalDelete\";\r\nimport {\r\n  deleteNoteCloseAction,\r\n  deleteNoteShowAction,\r\n} from \"../../store/reducers/modalDeleteReducer\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    const { loading, notes, visibleAdd, visibleDelete, id } = this.props;\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <h1>Notes</h1>\r\n          <Button type=\"primary\" onClick={() => this.props.showModalAdd()}>\r\n            Add New Note\r\n          </Button>\r\n        </div>\r\n        <div className=\"site-card-wrapper\">\r\n          {visibleAdd && (\r\n            <ModalAdd\r\n              visible={visibleAdd}\r\n              closeModal={this.props.closeModalAdd}\r\n            />\r\n          )}\r\n          {visibleDelete && (\r\n            <ModalDelete\r\n              id={id}\r\n              visible={visibleDelete}\r\n              handleDelete={this.props.handleDelete}\r\n              closeModal={this.props.closeModalDelete}\r\n            />\r\n          )}\r\n          <Row gutter={16} style={{ justifyContent: \"space-around\" }}>\r\n            {!loading &&\r\n              notes.map((note, index) => {\r\n                return (\r\n                  <Note\r\n                    note={note}\r\n                    showModalDelete={this.props.showModalDelete}\r\n                  />\r\n                );\r\n              })}\r\n          </Row>\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notes: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n  visibleAdd: state.modalCreate.visible,\r\n  visibleDelete: state.modalDelete.visible,\r\n  id: state.modalDelete.id,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNotes());\r\n    },\r\n    showModalAdd: () => {\r\n      dispatch(postNoteShowAction());\r\n    },\r\n    handleDelete: (id) => {\r\n      dispatch(deleteNote(id));\r\n    },\r\n    closeModalDelete: () => {\r\n      dispatch(deleteNoteCloseAction());\r\n    },\r\n    closeModalAdd: () => {\r\n      dispatch(postNoteCloseAction());\r\n    },\r\n    showModalDelete: (id) => {\r\n      dispatch(deleteNoteShowAction(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}