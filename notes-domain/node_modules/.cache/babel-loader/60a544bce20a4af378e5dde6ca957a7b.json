{"ast":null,"code":"import { GET_NOTE_FOR_EDIT, MODAL_NOTE_CLOSE, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS } from \"../action-types/domain.action-types\";\nconst initialState = {\n  loading: false,\n  data: {},\n  type: \"\"\n};\nexport const getNoteForEditAction = payload => ({\n  type: GET_NOTE_FOR_EDIT,\n  payload\n});\nexport const modalNoteShowAction = (type, id) => ({\n  type: MODAL_NOTE_SHOW,\n  payload: {\n    type,\n    id\n  }\n});\nexport const modalNoteCloseAction = () => ({\n  type: MODAL_NOTE_CLOSE\n});\nexport const modalNoteProgressAction = () => ({\n  type: MODAL_NOTE_IN_PROGRESS\n});\nexport const modalNoteSuccessAction = () => ({\n  type: MODAL_NOTE_SUCCESS\n});\nexport const editNoteSuccessAction = payload => ({\n  type: GET_NOTE_FOR_EDIT,\n  payload\n});\n\nconst modalReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MODAL_NOTE_SHOW:\n      return { ...state,\n        loading: false,\n        type: action.payload.type,\n        data: {\n          id: action.payload.id\n        }\n      };\n\n    case MODAL_NOTE_IN_PROGRESS:\n      return { ...state,\n        loading: true\n      };\n\n    case MODAL_NOTE_SUCCESS:\n      return initialState;\n\n    case MODAL_NOTE_CLOSE:\n      return initialState;\n\n    case GET_NOTE_FOR_EDIT:\n      return { ...state,\n        data: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/reducers/modalReducer.js"],"names":["GET_NOTE_FOR_EDIT","MODAL_NOTE_CLOSE","MODAL_NOTE_IN_PROGRESS","MODAL_NOTE_SHOW","MODAL_NOTE_SUCCESS","initialState","loading","data","type","getNoteForEditAction","payload","modalNoteShowAction","id","modalNoteCloseAction","modalNoteProgressAction","modalNoteSuccessAction","editNoteSuccessAction","modalReducer","state","action"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,sBAA9C,EAAsEC,eAAtE,EAAuFC,kBAAvF,QAAiH,qCAAjH;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,OAAO,MAAMC,oBAAoB,GAAIC,OAAD,KAAc;AAChDF,EAAAA,IAAI,EAAER,iBAD0C;AAEhDU,EAAAA;AAFgD,CAAd,CAA7B;AAKP,OAAO,MAAMC,mBAAmB,GAAG,CAACH,IAAD,EAAMI,EAAN,MAAc;AAC/CJ,EAAAA,IAAI,EAAEL,eADyC;AAE/CO,EAAAA,OAAO,EAAC;AAACF,IAAAA,IAAD;AAAMI,IAAAA;AAAN;AAFuC,CAAd,CAA5B;AAKP,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCL,EAAAA,IAAI,EAAEP;AADmC,CAAP,CAA7B;AAKP,OAAO,MAAMa,uBAAuB,GAAG,OAAO;AAC5CN,EAAAA,IAAI,EAAEN;AADsC,CAAP,CAAhC;AAIP,OAAO,MAAMa,sBAAsB,GAAG,OAAO;AAC3CP,EAAAA,IAAI,EAAEJ;AADqC,CAAP,CAA/B;AAIP,OAAO,MAAMY,qBAAqB,GAAIN,OAAD,KAAc;AACjDF,EAAAA,IAAI,EAAER,iBAD2C;AAEjDU,EAAAA;AAFiD,CAAd,CAA9B;;AAKP,MAAMO,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBb,YAAyB;AAAA,MAAXc,MAAW;;AACrD,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKL,eAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELZ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,IAAI,EAAEW,MAAM,CAACT,OAAP,CAAeF,IAHhB;AAILD,QAAAA,IAAI,EAAE;AAAEK,UAAAA,EAAE,EAAEO,MAAM,CAACT,OAAP,CAAeE;AAArB;AAJD,OAAP;;AAMF,SAAKV,sBAAL;AACE,aAAO,EAAE,GAAGgB,KAAL;AAAYZ,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKF,kBAAL;AACE,aAAOC,YAAP;;AACF,SAAKJ,gBAAL;AACE,aAAOI,YAAP;;AACF,SAAKL,iBAAL;AACE,aAAO,EAAE,GAAGkB,KAAL;AAAYX,QAAAA,IAAI,EAAEY,MAAM,CAACT;AAAzB,OAAP;;AACF;AACE,aAAOQ,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,YAAf","sourcesContent":["import { GET_NOTE_FOR_EDIT, MODAL_NOTE_CLOSE, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS } from \"../action-types/domain.action-types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: {},\r\n  type: \"\",\r\n};\r\n\r\nexport const getNoteForEditAction = (payload) => ({\r\n  type: GET_NOTE_FOR_EDIT,\r\n  payload,\r\n});\r\n\r\nexport const modalNoteShowAction = (type,id) => ({\r\n  type: MODAL_NOTE_SHOW,\r\n  payload:{type,id},\r\n});\r\n\r\nexport const modalNoteCloseAction = () => ({\r\n  type: MODAL_NOTE_CLOSE\r\n  ,\r\n});\r\n\r\nexport const modalNoteProgressAction = () => ({\r\n  type: MODAL_NOTE_IN_PROGRESS,\r\n});\r\n\r\nexport const modalNoteSuccessAction = () => ({\r\n  type: MODAL_NOTE_SUCCESS,\r\n});\r\n\r\nexport const editNoteSuccessAction = (payload) => ({\r\n  type: GET_NOTE_FOR_EDIT,\r\n  payload,\r\n});\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MODAL_NOTE_SHOW:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        type: action.payload.type,\r\n        data: { id: action.payload.id },\r\n      };\r\n    case MODAL_NOTE_IN_PROGRESS:\r\n      return { ...state, loading: true };\r\n    case MODAL_NOTE_SUCCESS:\r\n      return initialState;\r\n    case MODAL_NOTE_CLOSE:\r\n      return initialState;\r\n    case GET_NOTE_FOR_EDIT:\r\n      return { ...state, data: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n"]},"metadata":{},"sourceType":"module"}