{"ast":null,"code":"import { GET_NOTE_FOR_EDIT, MODAL_NOTE_CLOSE, MODAL_NOTE_CREATE_IN_PROGRESS, MODAL_NOTE_EDIT_IN_PROGRESS, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS } from '../action-types/note.action-types';\nconst initialState = {\n  loading: false,\n  data: {},\n  type: ''\n};\n\nconst modalReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MODAL_NOTE_SHOW:\n      return { ...state,\n        loading: false,\n        type: action.payload.type,\n        data: {\n          id: action.payload.id\n        }\n      };\n\n    case MODAL_NOTE_CREATE_IN_PROGRESS:\n      return { ...state,\n        loading: true\n      };\n\n    case MODAL_NOTE_EDIT_IN_PROGRESS:\n      return { ...state,\n        loading: true,\n        data: action.payload\n      };\n\n    case MODAL_NOTE_EDIT_START:\n      return { ...state,\n        loading: true,\n        data: {\n          id: action.payload.id\n        }\n      };\n\n    case MODAL_NOTE_IN_PROGRESS:\n      return { ...state,\n        loading: true\n      };\n\n    case MODAL_NOTE_SUCCESS:\n      return initialState;\n\n    case MODAL_NOTE_CLOSE:\n      return initialState;\n\n    case GET_NOTE_FOR_EDIT:\n      return { ...state,\n        data: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/pages/Notes/reducers/modalReducer.js"],"names":["GET_NOTE_FOR_EDIT","MODAL_NOTE_CLOSE","MODAL_NOTE_CREATE_IN_PROGRESS","MODAL_NOTE_EDIT_IN_PROGRESS","MODAL_NOTE_IN_PROGRESS","MODAL_NOTE_SHOW","MODAL_NOTE_SUCCESS","initialState","loading","data","type","modalReducer","state","action","payload","id","MODAL_NOTE_EDIT_START"],"mappings":"AAAA,SACEA,iBADF,EACqBC,gBADrB,EACuCC,6BADvC,EACsEC,2BADtE,EACmGC,sBADnG,EAC2HC,eAD3H,EAC4IC,kBAD5I,QAEO,mCAFP;AAIA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKL,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,IAAI,EAAEG,MAAM,CAACC,OAAP,CAAeJ,IAHhB;AAILD,QAAAA,IAAI,EAAE;AAAEM,UAAAA,EAAE,EAAEF,MAAM,CAACC,OAAP,CAAeC;AAArB;AAJD,OAAP;;AAMF,SAAKb,6BAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYJ,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKL,2BAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYJ,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,IAAI,EAAEI,MAAM,CAACC;AAAxC,OAAP;;AACF,SAAKE,qBAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYJ,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,IAAI,EAAE;AAAEM,UAAAA,EAAE,EAAEF,MAAM,CAACC,OAAP,CAAeC;AAArB;AAAjC,OAAP;;AACF,SAAKX,sBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYJ,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKF,kBAAL;AACE,aAAOC,YAAP;;AACF,SAAKN,gBAAL;AACE,aAAOM,YAAP;;AACF,SAAKP,iBAAL;AACE,aAAO,EAAE,GAAGY,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACC,OAAzB;AAAkCN,QAAAA,OAAO,EAAE;AAA3C,OAAP;;AACF;AACE,aAAOI,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,YAAf","sourcesContent":["import {\n  GET_NOTE_FOR_EDIT, MODAL_NOTE_CLOSE, MODAL_NOTE_CREATE_IN_PROGRESS, MODAL_NOTE_EDIT_IN_PROGRESS, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS,\n} from '../action-types/note.action-types';\n\nconst initialState = {\n  loading: false,\n  data: {},\n  type: '',\n};\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MODAL_NOTE_SHOW:\n      return {\n        ...state,\n        loading: false,\n        type: action.payload.type,\n        data: { id: action.payload.id },\n      };\n    case MODAL_NOTE_CREATE_IN_PROGRESS:\n      return { ...state, loading: true };\n    case MODAL_NOTE_EDIT_IN_PROGRESS:\n      return { ...state, loading: true, data: action.payload };\n    case MODAL_NOTE_EDIT_START:\n      return { ...state, loading: true, data: { id: action.payload.id } };\n    case MODAL_NOTE_IN_PROGRESS:\n      return { ...state, loading: true };\n    case MODAL_NOTE_SUCCESS:\n      return initialState;\n    case MODAL_NOTE_CLOSE:\n      return initialState;\n    case GET_NOTE_FOR_EDIT:\n      return { ...state, data: action.payload, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n"]},"metadata":{},"sourceType":"module"}