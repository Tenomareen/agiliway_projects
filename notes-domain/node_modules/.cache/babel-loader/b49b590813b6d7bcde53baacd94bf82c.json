{"ast":null,"code":"var _jsxFileName = \"E:\\\\agiliway_projects\\\\agiliway_projects\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\Note.js\";\nimport { Col, Card, Menu, Dropdown } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = _ref => {\n  let {\n    note,\n    showModal,\n    getNoteForEdit\n  } = _ref;\n\n  const menu = /*#__PURE__*/_jsxDEV(Menu, {\n    destroyPopupOnHide: true,\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      onClick: () => {\n        showModal('edit');\n        getNoteForEdit(note.uuid);\n      },\n      children: \"Edit\"\n    }, \"0\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: /*#__PURE__*/_jsxDEV(NavLink, {\n        to: `/note/${note.uuid}`,\n        children: \"Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, \"1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      onClick: () => showModal('delete', note.uuid),\n      children: \"Delete\"\n    }, \"3\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    span: 8,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: note.name,\n      bordered: true,\n      style: {\n        marginBottom: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: note.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: moment(note.createDate).format('MMMM Do YYYY')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        overlay: menu,\n        trigger: ['click'],\n        destroyPopupOnHide: true,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/\",\n          className: \"ant-dropdown-link\",\n          onClick: e => {\n            e.preventDefault();\n          },\n          children: [\"Click me\", ' ', /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Note;\nNote.propTypes = {\n  note: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string\n  }),\n  showModal: PropTypes.func,\n  getNoteForEdit: PropTypes.func\n};\nNote.defaultProps = {\n  note: {},\n  showModal: () => {},\n  getNoteForEdit: () => {}\n};\nexport default Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/pages/Notes/Note.js"],"names":["Col","Card","Menu","Dropdown","DownOutlined","NavLink","PropTypes","moment","Note","note","showModal","getNoteForEdit","menu","uuid","name","marginBottom","description","createDate","format","e","preventDefault","propTypes","shape","string","author","func","defaultProps"],"mappings":"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","sourcesContent":["import {\n  Col, Card, Menu, Dropdown,\n} from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst Note = ({ note, showModal, getNoteForEdit }) => {\n  const menu = (\n    <Menu destroyPopupOnHide>\n      <Menu.Item\n        key=\"0\"\n        onClick={() => {\n          showModal('edit')\n          getNoteForEdit(note.uuid);\n        }}\n      >\n        Edit\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <NavLink to={`/note/${note.uuid}`}>Details</NavLink>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        key=\"3\"\n        onClick={() => showModal('delete', note.uuid)}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Col span={8}>\n      <Card\n        title={note.name}\n        bordered\n        style={{ marginBottom: '5px' }}\n      >\n        <div>{note.description}</div>\n        <div>{moment(note.createDate).format('MMMM Do YYYY')}</div>\n        {/* <div> */}\n        <Dropdown overlay={menu} trigger={['click']} destroyPopupOnHide>\n          <a\n            href=\"#/\"\n            className=\"ant-dropdown-link\"\n            onClick={(e) => {\n              e.preventDefault();\n            }}\n          >\n            Click me\n            {' '}\n            <DownOutlined />\n          </a>\n        </Dropdown>\n        {/* </div> */}\n      </Card>\n    </Col>\n  );\n};\n\nNote.propTypes = {\n  note: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  showModal: PropTypes.func,\n  getNoteForEdit: PropTypes.func,\n};\n\nNote.defaultProps = {\n  note: {},\n  showModal: () => {},\n  getNoteForEdit: () => {},\n};\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}