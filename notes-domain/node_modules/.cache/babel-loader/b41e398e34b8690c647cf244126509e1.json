{"ast":null,"code":"import { postNoteProgressAction, postNoteSuccessAction } from \"../store/reducers/modalCreateReducer\";\nimport { deleteNoteProgressAction, deleteNoteSuccessAction } from \"../store/reducers/modalDeleteReducer\";\nimport { getNotesAction } from \"../store/reducers/notesReducer\";\nimport client from \"./client\"; // import { getBooksAction } from \"../store/reducers/booksReducer\";\n// import { getBookDetailAction, toggleLoading } from \"../store/reducers/bookDetailReducer\";\n// export const getBooks = () => {\n//   return (dispatch) => {\n//     client.get(\"/books\").then((response) => {\n//       dispatch(getBooksAction(response.data));\n//     });\n//   };\n// };\n// export const getDetails = (id) => {\n//   return (dispatch) => {\n//     dispatch(toggleLoading());\n//     client.get(`/books/${id}`).then((response) => {\n//       dispatch(getBookDetailAction(response.data));\n//     });\n//   };\n// };\n\nexport const getNotes = () => {\n  return dispatch => {\n    client.get(\"/notes\").then(response => {\n      dispatch(getNotesAction(response.data)); // console.log(response);\n    });\n  };\n};\nexport const postNote = note => {\n  return dispatch => {\n    dispatch(postNoteProgressAction());\n    client.post(\"/notes\", note).then(() => {\n      dispatch(postNoteSuccessAction());\n      dispatch(getNotes()); // console.log(response);\n    });\n  };\n};\nexport const deleteNote = id => {\n  return dispatch => {\n    dispatch(deleteNoteProgressAction());\n    client.delete(`/notes/${id}`, id).then(() => {\n      dispatch(deleteNoteSuccessAction());\n      dispatch(getNotes());\n    });\n  };\n};","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/api/notes.js"],"names":["postNoteProgressAction","postNoteSuccessAction","deleteNoteProgressAction","deleteNoteSuccessAction","getNotesAction","client","getNotes","dispatch","get","then","response","data","postNote","note","post","deleteNote","id","delete"],"mappings":"AAAA,SACEA,sBADF,EAEEC,qBAFF,QAGO,sCAHP;AAIA,SACEC,wBADF,EAEEC,uBAFF,QAGO,sCAHP;AAIA,SAASC,cAAT,QAA+B,gCAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC5B,SAAQC,QAAD,IAAc;AACnBF,IAAAA,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqBC,IAArB,CAA2BC,QAAD,IAAc;AACtCH,MAAAA,QAAQ,CAACH,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAf,CAAR,CADsC,CAEtC;AACD,KAHD;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAChC,SAAQN,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACP,sBAAsB,EAAvB,CAAR;AACAK,IAAAA,MAAM,CAACS,IAAP,CAAY,QAAZ,EAAsBD,IAAtB,EAA4BJ,IAA5B,CAAiC,MAAM;AACrCF,MAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR;AACAM,MAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR,CAFqC,CAGrC;AACD,KAJD;AAKD,GAPD;AAQD,CATM;AAWP,OAAO,MAAMS,UAAU,GAAIC,EAAD,IAAQ;AAChC,SAAQT,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACL,wBAAwB,EAAzB,CAAR;AACAG,IAAAA,MAAM,CAACY,MAAP,CAAe,UAASD,EAAG,EAA3B,EAA8BA,EAA9B,EAAkCP,IAAlC,CAAuC,MAAM;AAC3CF,MAAAA,QAAQ,CAACJ,uBAAuB,EAAxB,CAAR;AACAI,MAAAA,QAAQ,CAACD,QAAQ,EAAT,CAAR;AACD,KAHD;AAID,GAND;AAOD,CARM","sourcesContent":["import {\r\n  postNoteProgressAction,\r\n  postNoteSuccessAction,\r\n} from \"../store/reducers/modalCreateReducer\";\r\nimport {\r\n  deleteNoteProgressAction,\r\n  deleteNoteSuccessAction,\r\n} from \"../store/reducers/modalDeleteReducer\";\r\nimport { getNotesAction } from \"../store/reducers/notesReducer\";\r\nimport client from \"./client\";\r\n// import { getBooksAction } from \"../store/reducers/booksReducer\";\r\n// import { getBookDetailAction, toggleLoading } from \"../store/reducers/bookDetailReducer\";\r\n\r\n// export const getBooks = () => {\r\n//   return (dispatch) => {\r\n//     client.get(\"/books\").then((response) => {\r\n//       dispatch(getBooksAction(response.data));\r\n//     });\r\n//   };\r\n// };\r\n\r\n// export const getDetails = (id) => {\r\n//   return (dispatch) => {\r\n//     dispatch(toggleLoading());\r\n//     client.get(`/books/${id}`).then((response) => {\r\n//       dispatch(getBookDetailAction(response.data));\r\n//     });\r\n//   };\r\n// };\r\n\r\nexport const getNotes = () => {\r\n  return (dispatch) => {\r\n    client.get(\"/notes\").then((response) => {\r\n      dispatch(getNotesAction(response.data));\r\n      // console.log(response);\r\n    });\r\n  };\r\n};\r\n\r\nexport const postNote = (note) => {\r\n  return (dispatch) => {\r\n    dispatch(postNoteProgressAction());\r\n    client.post(\"/notes\", note).then(() => {\r\n      dispatch(postNoteSuccessAction());\r\n      dispatch(getNotes());\r\n      // console.log(response);\r\n    });\r\n  };\r\n};\r\n\r\nexport const deleteNote = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteNoteProgressAction());\r\n    client.delete(`/notes/${id}`, id).then(() => {\r\n      dispatch(deleteNoteSuccessAction());\r\n      dispatch(getNotes());\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}