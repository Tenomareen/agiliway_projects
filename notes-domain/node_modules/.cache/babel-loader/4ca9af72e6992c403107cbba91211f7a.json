{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Statistics\\\\Statistics.js\";\nimport { Table, Button, Space } from 'antd';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nclass Statistics extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n\n    this.handleChange = (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    };\n\n    this.clearFilters = () => {\n      this.setState({\n        filteredInfo: null\n      });\n    };\n\n    this.clearAll = () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    };\n\n    this.setAgeSort = () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'age'\n        }\n      });\n    };\n  }\n\n  render() {\n    let {\n      sortedInfo,\n      filteredInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      filters: [{\n        text: 'Joe',\n        value: 'Joe'\n      }, {\n        text: 'Jim',\n        value: 'Jim'\n      }],\n      filteredValue: filteredInfo.name || null,\n      onFilter: (value, record) => record.name.includes(value),\n      sorter: (a, b) => a.name.length - b.name.length,\n      sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\n      ellipsis: true\n    }, {\n      title: 'Address',\n      dataIndex: 'address',\n      key: 'address',\n      filters: [{\n        text: 'London',\n        value: 'London'\n      }, {\n        text: 'New York',\n        value: 'New York'\n      }],\n      filteredValue: filteredInfo.address || null,\n      onFilter: (value, record) => record.address.includes(value),\n      sorter: (a, b) => a.address.length - b.address.length,\n      sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\n      ellipsis: true\n    }];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Space, {\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.setAgeSort,\n          children: \"Sort age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.clearFilters,\n          children: \"Clear filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.clearAll,\n          children: \"Clear filters and sorters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Statistics;","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Statistics/Statistics.js"],"names":["Table","Button","Space","React","data","key","name","age","address","Statistics","Component","state","filteredInfo","sortedInfo","handleChange","pagination","filters","sorter","console","log","setState","clearFilters","clearAll","setAgeSort","order","columnKey","render","columns","title","dataIndex","text","value","filteredValue","onFilter","record","includes","a","b","length","sortOrder","ellipsis","marginBottom"],"mappings":"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","sourcesContent":["import { Table, Button, Space } from 'antd';\r\nimport React from 'react';\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sidney No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'Jim Red',\r\n    age: 32,\r\n    address: 'London No. 2 Lake Park',\r\n  },\r\n];\r\n\r\nclass Statistics extends React.Component {\r\n  state = {\r\n    filteredInfo: null,\r\n    sortedInfo: null,\r\n  };\r\n\r\n  handleChange = (pagination, filters, sorter) => {\r\n    console.log('Various parameters', pagination, filters, sorter);\r\n    this.setState({\r\n      filteredInfo: filters,\r\n      sortedInfo: sorter,\r\n    });\r\n  };\r\n\r\n  clearFilters = () => {\r\n    this.setState({ filteredInfo: null });\r\n  };\r\n\r\n  clearAll = () => {\r\n    this.setState({\r\n      filteredInfo: null,\r\n      sortedInfo: null,\r\n    });\r\n  };\r\n\r\n  setAgeSort = () => {\r\n    this.setState({\r\n      sortedInfo: {\r\n        order: 'descend',\r\n        columnKey: 'age',\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { sortedInfo, filteredInfo } = this.state;\r\n    sortedInfo = sortedInfo || {};\r\n    filteredInfo = filteredInfo || {};\r\n    const columns = [\r\n      {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        filters: [\r\n          { text: 'Joe', value: 'Joe' },\r\n          { text: 'Jim', value: 'Jim' },\r\n        ],\r\n        filteredValue: filteredInfo.name || null,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        sorter: (a, b) => a.name.length - b.name.length,\r\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        sorter: (a, b) => a.age - b.age,\r\n        sortOrder: sortedInfo.columnKey === 'age' && sortedInfo.order,\r\n        ellipsis: true,\r\n      },\r\n      {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n        filters: [\r\n          { text: 'London', value: 'London' },\r\n          { text: 'New York', value: 'New York' },\r\n        ],\r\n        filteredValue: filteredInfo.address || null,\r\n        onFilter: (value, record) => record.address.includes(value),\r\n        sorter: (a, b) => a.address.length - b.address.length,\r\n        sortOrder: sortedInfo.columnKey === 'address' && sortedInfo.order,\r\n        ellipsis: true,\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <Space style={{ marginBottom: 16 }}>\r\n          <Button onClick={this.setAgeSort}>Sort age</Button>\r\n          <Button onClick={this.clearFilters}>Clear filters</Button>\r\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\r\n        </Space>\r\n        <Table columns={columns} dataSource={data} onChange={this.handleChange} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Statistics;"]},"metadata":{},"sourceType":"module"}