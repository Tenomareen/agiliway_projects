{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport { deleteNote, getNoteEdit, getNotes, putNote } from \"../../api/notes\";\nimport Note from \"./Note\";\nimport { connect } from \"react-redux\";\nimport { Row, Button } from \"antd\";\nimport ModalAdd from \"../../components/Modals/modalCreate\";\nimport { postNoteCloseAction, postNoteShowAction } from \"../../store/reducers/modalCreateReducer\";\nimport ModalDelete from \"../../components/Modals/modalDelete\";\nimport { deleteNoteCloseAction, deleteNoteShowAction } from \"../../store/reducers/modalDeleteReducer\";\nimport ModalEdit from \"../../components/Modals/modalEdit\";\nimport { editNoteCloseAction, editNoteShowAction } from \"../../store/reducers/modalEditReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {\n      loading,\n      notes,\n      visibleAdd,\n      visibleDelete,\n      id,\n      visibleEdit,\n      noteEdit\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => this.props.showModalAdd(),\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [visibleAdd && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: visibleAdd,\n          closeModal: this.props.closeModalAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), visibleDelete && /*#__PURE__*/_jsxDEV(ModalDelete, {\n          id: id,\n          visible: visibleDelete,\n          handleDelete: this.props.handleDelete,\n          closeModal: this.props.closeModalDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), visibleEdit && /*#__PURE__*/_jsxDEV(ModalEdit, {\n          visible: visibleEdit,\n          closeModal: this.props.closeModalEdit,\n          noteEdit: noteEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: \"space-around\"\n          },\n          children: !loading && notes.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note,\n              showModalDelete: this.props.showModalDelete,\n              showModalEdit: this.props.showModalEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.noteList,\n  loading: state.notes.isLoading,\n  visibleAdd: state.modalCreate.visible,\n  visibleDelete: state.modalDelete.visible,\n  id: state.modalDelete.id,\n  visibleEdit: state.modalEdit.visible,\n  noteEdit: state.modalEdit.note\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNotes());\n    },\n    showModalAdd: () => {\n      dispatch(postNoteShowAction());\n    },\n    handleDelete: id => {\n      dispatch(deleteNote(id));\n    },\n    closeModalDelete: () => {\n      dispatch(deleteNoteCloseAction());\n    },\n    closeModalAdd: () => {\n      dispatch(postNoteCloseAction());\n    },\n    showModalDelete: id => {\n      dispatch(deleteNoteShowAction(id));\n    },\n    showModalEdit: id => {\n      dispatch(editNoteShowAction(id));\n      dispatch(getNoteEdit(id));\n    },\n    closeModalEdit: () => {\n      dispatch(editNoteCloseAction());\n    },\n    handleSubmitEdit: editValues => {\n      const note = {\n        name: editValues.name,\n        author: editValues.author,\n        description: editValues.description\n      };\n      dispatch(putNote(note, editValues.uuid));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","deleteNote","getNoteEdit","getNotes","putNote","Note","connect","Row","Button","ModalAdd","postNoteCloseAction","postNoteShowAction","ModalDelete","deleteNoteCloseAction","deleteNoteShowAction","ModalEdit","editNoteCloseAction","editNoteShowAction","NoteList","componentDidMount","props","getData","render","loading","notes","visibleAdd","visibleDelete","id","visibleEdit","noteEdit","display","justifyContent","showModalAdd","closeModalAdd","handleDelete","closeModalDelete","closeModalEdit","map","note","index","showModalDelete","showModalEdit","mapStateToProps","state","noteList","isLoading","modalCreate","visible","modalDelete","modalEdit","mapDispatchToProps","dispatch","handleSubmitEdit","editValues","name","author","description","uuid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,QAAlC,EAA4CC,OAA5C,QAA2D,iBAA3D;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,MAA5B;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SACEC,mBADF,EAEEC,kBAFF,QAGO,yCAHP;AAIA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,SACEC,qBADF,EAEEC,oBAFF,QAGO,yCAHP;AAIA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SACEC,mBADF,EAEEC,kBAFF,QAGO,uCAHP;;;;AAKA,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAC/BmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,OAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA,UAAlB;AAA8BC,MAAAA,aAA9B;AAA6CC,MAAAA,EAA7C;AAAiDC,MAAAA,WAAjD;AAA8DC,MAAAA;AAA9D,QACJ,KAAKT,KADP;AAEA,wBACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEU,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWY,YAAX,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,mBACGP,UAAU,iBACT,QAAC,QAAD;AACE,UAAA,OAAO,EAAEA,UADX;AAEE,UAAA,UAAU,EAAE,KAAKL,KAAL,CAAWa;AAFzB;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOGP,aAAa,iBACZ,QAAC,WAAD;AACE,UAAA,EAAE,EAAEC,EADN;AAEE,UAAA,OAAO,EAAED,aAFX;AAGE,UAAA,YAAY,EAAE,KAAKN,KAAL,CAAWc,YAH3B;AAIE,UAAA,UAAU,EAAE,KAAKd,KAAL,CAAWe;AAJzB;AAAA;AAAA;AAAA;AAAA,gBARJ,EAeGP,WAAW,iBACV,QAAC,SAAD;AACE,UAAA,OAAO,EAAEA,WADX;AAEE,UAAA,UAAU,EAAE,KAAKR,KAAL,CAAWgB,cAFzB;AAGE,UAAA,QAAQ,EAAEP;AAHZ;AAAA;AAAA;AAAA;AAAA,gBAhBJ,eAsBE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAE,EAAb;AAAiB,UAAA,KAAK,EAAE;AAAEE,YAAAA,cAAc,EAAE;AAAlB,WAAxB;AAAA,oBACG,CAACR,OAAD,IACCC,KAAK,CAACa,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,gCACE,QAAC,IAAD;AACE,cAAA,IAAI,EAAED,IADR;AAEE,cAAA,eAAe,EAAE,KAAKlB,KAAL,CAAWoB,eAF9B;AAGE,cAAA,aAAa,EAAE,KAAKpB,KAAL,CAAWqB;AAH5B;AAAA;AAAA;AAAA;AAAA,oBADF;AAOD,WARD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AA8CD;;AAtD8B;;AAyDjC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCnB,EAAAA,KAAK,EAAEmB,KAAK,CAACnB,KAAN,CAAYoB,QADe;AAElCrB,EAAAA,OAAO,EAAEoB,KAAK,CAACnB,KAAN,CAAYqB,SAFa;AAGlCpB,EAAAA,UAAU,EAAEkB,KAAK,CAACG,WAAN,CAAkBC,OAHI;AAIlCrB,EAAAA,aAAa,EAAEiB,KAAK,CAACK,WAAN,CAAkBD,OAJC;AAKlCpB,EAAAA,EAAE,EAAEgB,KAAK,CAACK,WAAN,CAAkBrB,EALY;AAMlCC,EAAAA,WAAW,EAAEe,KAAK,CAACM,SAAN,CAAgBF,OANK;AAOlClB,EAAAA,QAAQ,EAAEc,KAAK,CAACM,SAAN,CAAgBX;AAPQ,CAAZ,CAAxB;;AAUA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACL9B,IAAAA,OAAO,EAAE,MAAM;AACb8B,MAAAA,QAAQ,CAAChD,QAAQ,EAAT,CAAR;AACD,KAHI;AAIL6B,IAAAA,YAAY,EAAE,MAAM;AAClBmB,MAAAA,QAAQ,CAACxC,kBAAkB,EAAnB,CAAR;AACD,KANI;AAOLuB,IAAAA,YAAY,EAAGP,EAAD,IAAQ;AACpBwB,MAAAA,QAAQ,CAAClD,UAAU,CAAC0B,EAAD,CAAX,CAAR;AACD,KATI;AAULQ,IAAAA,gBAAgB,EAAE,MAAM;AACtBgB,MAAAA,QAAQ,CAACtC,qBAAqB,EAAtB,CAAR;AACD,KAZI;AAaLoB,IAAAA,aAAa,EAAE,MAAM;AACnBkB,MAAAA,QAAQ,CAACzC,mBAAmB,EAApB,CAAR;AACD,KAfI;AAgBL8B,IAAAA,eAAe,EAAGb,EAAD,IAAQ;AACvBwB,MAAAA,QAAQ,CAACrC,oBAAoB,CAACa,EAAD,CAArB,CAAR;AACD,KAlBI;AAmBLc,IAAAA,aAAa,EAAGd,EAAD,IAAQ;AACrBwB,MAAAA,QAAQ,CAAClC,kBAAkB,CAACU,EAAD,CAAnB,CAAR;AACAwB,MAAAA,QAAQ,CAACjD,WAAW,CAACyB,EAAD,CAAZ,CAAR;AACD,KAtBI;AAuBLS,IAAAA,cAAc,EAAE,MAAM;AACpBe,MAAAA,QAAQ,CAACnC,mBAAmB,EAApB,CAAR;AACD,KAzBI;AA0BLoC,IAAAA,gBAAgB,EAAGC,UAAD,IAAgB;AAChC,YAAMf,IAAI,GAAG;AACXgB,QAAAA,IAAI,EAAED,UAAU,CAACC,IADN;AAEXC,QAAAA,MAAM,EAAEF,UAAU,CAACE,MAFR;AAGXC,QAAAA,WAAW,EAAEH,UAAU,CAACG;AAHb,OAAb;AAKJL,MAAAA,QAAQ,CAAC/C,OAAO,CAACkC,IAAD,EAAMe,UAAU,CAACI,IAAjB,CAAR,CAAR;AACG;AAjCI,GAAP;AAmCD,CApCD;;AAsCA,eAAenD,OAAO,CAACoC,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6ChC,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { deleteNote, getNoteEdit, getNotes, putNote } from \"../../api/notes\";\r\nimport Note from \"./Note\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button } from \"antd\";\r\nimport ModalAdd from \"../../components/Modals/modalCreate\";\r\nimport {\r\n  postNoteCloseAction,\r\n  postNoteShowAction,\r\n} from \"../../store/reducers/modalCreateReducer\";\r\nimport ModalDelete from \"../../components/Modals/modalDelete\";\r\nimport {\r\n  deleteNoteCloseAction,\r\n  deleteNoteShowAction,\r\n} from \"../../store/reducers/modalDeleteReducer\";\r\nimport ModalEdit from \"../../components/Modals/modalEdit\";\r\nimport {\r\n  editNoteCloseAction,\r\n  editNoteShowAction,\r\n} from \"../../store/reducers/modalEditReducer\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    const { loading, notes, visibleAdd, visibleDelete, id, visibleEdit, noteEdit } =\r\n      this.props;\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <h1>Notes</h1>\r\n          <Button type=\"primary\" onClick={() => this.props.showModalAdd()}>\r\n            Add New Note\r\n          </Button>\r\n        </div>\r\n        <div className=\"site-card-wrapper\">\r\n          {visibleAdd && (\r\n            <ModalAdd\r\n              visible={visibleAdd}\r\n              closeModal={this.props.closeModalAdd}\r\n            />\r\n          )}\r\n          {visibleDelete && (\r\n            <ModalDelete\r\n              id={id}\r\n              visible={visibleDelete}\r\n              handleDelete={this.props.handleDelete}\r\n              closeModal={this.props.closeModalDelete}\r\n            />\r\n          )}\r\n          {visibleEdit && (\r\n            <ModalEdit\r\n              visible={visibleEdit}\r\n              closeModal={this.props.closeModalEdit}\r\n              noteEdit={noteEdit}\r\n            />\r\n          )}\r\n          <Row gutter={16} style={{ justifyContent: \"space-around\" }}>\r\n            {!loading &&\r\n              notes.map((note, index) => {\r\n                return (\r\n                  <Note\r\n                    note={note}\r\n                    showModalDelete={this.props.showModalDelete}\r\n                    showModalEdit={this.props.showModalEdit}\r\n                  />\r\n                );\r\n              })}\r\n          </Row>\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notes: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n  visibleAdd: state.modalCreate.visible,\r\n  visibleDelete: state.modalDelete.visible,\r\n  id: state.modalDelete.id,\r\n  visibleEdit: state.modalEdit.visible,\r\n  noteEdit: state.modalEdit.note,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNotes());\r\n    },\r\n    showModalAdd: () => {\r\n      dispatch(postNoteShowAction());\r\n    },\r\n    handleDelete: (id) => {\r\n      dispatch(deleteNote(id));\r\n    },\r\n    closeModalDelete: () => {\r\n      dispatch(deleteNoteCloseAction());\r\n    },\r\n    closeModalAdd: () => {\r\n      dispatch(postNoteCloseAction());\r\n    },\r\n    showModalDelete: (id) => {\r\n      dispatch(deleteNoteShowAction(id));\r\n    },\r\n    showModalEdit: (id) => {\r\n      dispatch(editNoteShowAction(id));\r\n      dispatch(getNoteEdit(id));\r\n    },\r\n    closeModalEdit: () => {\r\n      dispatch(editNoteCloseAction());\r\n    },\r\n    handleSubmitEdit: (editValues) => {\r\n      const note = {\r\n        name: editValues.name,\r\n        author: editValues.author,\r\n        description: editValues.description\r\n    }\r\n  dispatch(putNote(note,editValues.uuid));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}