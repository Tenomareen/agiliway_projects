{"ast":null,"code":"import { GET_NOTE_FOR_EDIT, MODAL_NOTE_CLOSE, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS } from \"../action-types/note.action-types\";\nconst initialState = {\n  loading: false,\n  data: {},\n  type: \"\"\n};\n\nconst modalReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MODAL_NOTE_SHOW:\n      return { ...state,\n        loading: false,\n        type: action.payload.type,\n        data: {\n          id: action.payload.id\n        }\n      };\n\n    case MODAL_NOTE_IN_PROGRESS:\n      return { ...state,\n        loading: true\n      };\n\n    case MODAL_NOTE_SUCCESS:\n      return initialState;\n\n    case MODAL_NOTE_CLOSE:\n      return initialState;\n\n    case GET_NOTE_FOR_EDIT:\n      return { ...state,\n        data: action.payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/reducers/modalReducer.js"],"names":["GET_NOTE_FOR_EDIT","MODAL_NOTE_CLOSE","MODAL_NOTE_IN_PROGRESS","MODAL_NOTE_SHOW","MODAL_NOTE_SUCCESS","initialState","loading","data","type","modalReducer","state","action","payload","id"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,sBAA9C,EAAsEC,eAAtE,EAAuFC,kBAAvF,QAAiH,mCAAjH;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACrD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKL,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,IAAI,EAAEG,MAAM,CAACC,OAAP,CAAeJ,IAHhB;AAILD,QAAAA,IAAI,EAAE;AAAEM,UAAAA,EAAE,EAAEF,MAAM,CAACC,OAAP,CAAeC;AAArB;AAJD,OAAP;;AAMF,SAAKX,sBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYJ,QAAAA,OAAO,EAAE;AAArB,OAAP;;AACF,SAAKF,kBAAL;AACE,aAAOC,YAAP;;AACF,SAAKJ,gBAAL;AACE,aAAOI,YAAP;;AACF,SAAKL,iBAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYH,QAAAA,IAAI,EAAEI,MAAM,CAACC,OAAzB;AAAkCN,QAAAA,OAAO,EAAE;AAA3C,OAAP;;AACF;AACE,aAAOI,KAAP;AAjBJ;AAmBD,CApBD;;AAsBA,eAAeD,YAAf","sourcesContent":["import { GET_NOTE_FOR_EDIT, MODAL_NOTE_CLOSE, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS } from \"../action-types/note.action-types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  data: {},\r\n  type: \"\",\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case MODAL_NOTE_SHOW:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        type: action.payload.type,\r\n        data: { id: action.payload.id },\r\n      };\r\n    case MODAL_NOTE_IN_PROGRESS:\r\n      return { ...state, loading: true };\r\n    case MODAL_NOTE_SUCCESS:\r\n      return initialState;\r\n    case MODAL_NOTE_CLOSE:\r\n      return initialState;\r\n    case GET_NOTE_FOR_EDIT:\r\n      return { ...state, data: action.payload, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default modalReducer;\r\n"]},"metadata":{},"sourceType":"module"}