{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport { deleteNote, getNotes } from \"../../api/notes\";\nimport Note from \"./Note\";\nimport { connect } from \"react-redux\";\nimport { Row, Button } from \"antd\";\nimport ModalAdd from \"../../components/Modals/modalCreate\";\nimport { postNoteShowAction } from \"../../store/reducers/modalCreateReducer\";\nimport ModalDelete from \"../../components/Modals/modalDelete\";\nimport { deleteNoteCloseAction } from \"../../store/reducers/modalDeleteReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  render() {\n    const {\n      loading,\n      notes,\n      visibleAdd,\n      visibleDelete,\n      id\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => this.props.show(),\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [visibleAdd && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: visibleAdd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 26\n        }, this), visibleDelete && /*#__PURE__*/_jsxDEV(ModalDelete, {\n          id: id,\n          visible: visibleDelete,\n          handleDelete: this.props.handleDelete,\n          closeModal: this.props.closeModalDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: \"space-around\"\n          },\n          children: !loading && notes.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  notes: state.notes.noteList,\n  loading: state.notes.isLoading,\n  visibleAdd: state.modalCreate.visible,\n  visibleDelete: state.modalDelete.visible,\n  id: state.modalDelete.id\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNotes());\n    },\n    show: () => {\n      dispatch(postNoteShowAction());\n    },\n    handleDelete: id => {\n      dispatch(deleteNote(id));\n    },\n    closeModalDelete: () => {\n      dispatch(deleteNoteCloseAction());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","deleteNote","getNotes","Note","connect","Row","Button","ModalAdd","postNoteShowAction","ModalDelete","deleteNoteCloseAction","NoteList","componentDidMount","props","getData","render","loading","notes","visibleAdd","visibleDelete","id","display","justifyContent","show","handleDelete","closeModalDelete","map","note","index","mapStateToProps","state","noteList","isLoading","modalCreate","visible","modalDelete","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { deleteNote, getNotes } from \"../../api/notes\";\r\nimport Note from \"./Note\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button } from \"antd\";\r\nimport ModalAdd from \"../../components/Modals/modalCreate\";\r\nimport { postNoteShowAction } from \"../../store/reducers/modalCreateReducer\";\r\nimport ModalDelete from \"../../components/Modals/modalDelete\";\r\nimport { deleteNoteCloseAction } from \"../../store/reducers/modalDeleteReducer\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  render() {\r\n    const { loading, notes, visibleAdd, visibleDelete, id } = this.props;\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <h1>Notes</h1>\r\n          <Button type=\"primary\" onClick={() => this.props.show()}>\r\n            Add New Note\r\n          </Button>\r\n        </div>\r\n        <div className=\"site-card-wrapper\">\r\n          {visibleAdd && <ModalAdd visible={visibleAdd} />}\r\n          {visibleDelete && (\r\n            <ModalDelete\r\n              id={id}\r\n              visible={visibleDelete}\r\n              handleDelete={this.props.handleDelete}\r\n              closeModal={this.props.closeModalDelete}\r\n            />\r\n          )}\r\n          <Row gutter={16} style={{ justifyContent: \"space-around\" }}>\r\n            {!loading &&\r\n              notes.map((note, index) => {\r\n                return <Note note={note} />;\r\n              })}\r\n          </Row>\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notes: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n  visibleAdd: state.modalCreate.visible,\r\n  visibleDelete: state.modalDelete.visible,\r\n  id: state.modalDelete.id,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNotes());\r\n    },\r\n    show: () => {\r\n      dispatch(postNoteShowAction());\r\n    },\r\n    handleDelete: (id) => {\r\n      dispatch(deleteNote(id));\r\n    },\r\n    closeModalDelete: () => {\r\n      dispatch(deleteNoteCloseAction());\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}