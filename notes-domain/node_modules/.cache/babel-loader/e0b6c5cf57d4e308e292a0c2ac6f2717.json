{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\notes-domain\\\\src\\\\pages\\\\Notes\\\\NoteList.js\";\nimport React, { Component } from \"react\";\nimport Note from \"./Note\";\nimport { connect } from \"react-redux\";\nimport { Row, Button, Empty } from \"antd\";\nimport ModalAdd from \"../../components/Modals/modalCreate\";\nimport ModalDelete from \"../../components/Modals/modalDelete\";\nimport ModalEdit from \"../../components/Modals/modalEdit\";\nimport { createModalNoteShowAction, deleteModalNoteShowAction, editModalNoteShowAction, modalNoteCloseAction } from \"../../store/reducers/modalReducer\";\nimport { createNote, deleteNoteById, editNote, getNoteForEdit, getNoteList } from \"../../store/notesThunk\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass NoteList extends Component {\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  handleSubmitEdit(editValues) {\n    const note = {\n      name: editValues.name,\n      author: editValues.author,\n      description: editValues.description\n    };\n    this.props.handleSubmitEdit(note, editValues.uuid);\n  }\n\n  render() {\n    const {\n      type,\n      loading,\n      notes,\n      noteEdit,\n      id\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => this.props.showModalAdd(),\n          children: \"Add New Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"site-card-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 16,\n          style: {\n            justifyContent: \"space-around\"\n          },\n          children: [!notes.length && /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 31\n          }, this), !loading && notes.map((note, index) => {\n            return /*#__PURE__*/_jsxDEV(Note, {\n              note: note,\n              showModalDelete: this.props.showModalDelete,\n              showModalEdit: this.props.showModalEdit\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), type === \"create\" && /*#__PURE__*/_jsxDEV(ModalAdd, {\n          visible: true,\n          closeModal: this.props.closeModal,\n          handleSubmitCreate: this.props.handleSubmitCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), type === \"delete\" && /*#__PURE__*/_jsxDEV(ModalDelete, {\n          id: id,\n          visible: true,\n          handleDelete: this.props.handleDelete,\n          closeModal: this.props.closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), type === \"edit\" && /*#__PURE__*/_jsxDEV(ModalEdit, {\n          visible: true,\n          closeModal: this.props.closeModal,\n          noteEdit: noteEdit,\n          handleSubmitEdit: this.handleSubmitEdit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  type: state.modal.type,\n  notes: state.notes.noteList,\n  loading: state.notes.isLoading,\n  noteEdit: state.modal.data,\n  id: state.modal.data.id\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getData: () => {\n      dispatch(getNoteList());\n    },\n    showModalAdd: () => {\n      dispatch(createModalNoteShowAction());\n    },\n    handleDelete: id => {\n      dispatch(deleteNoteById(id));\n    },\n    closeModal: () => {\n      dispatch(modalNoteCloseAction());\n    },\n    showModalDelete: id => {\n      dispatch(deleteModalNoteShowAction(id));\n    },\n    showModalEdit: id => {\n      dispatch(editModalNoteShowAction());\n      dispatch(getNoteForEdit(id));\n    },\n    handleSubmitEdit: (note, id) => {\n      dispatch(editNote(note, id));\n    },\n    handleSubmitCreate: values => {\n      dispatch(createNote(values));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","map":{"version":3,"sources":["E:/React-apps/notes-domain/src/pages/Notes/NoteList.js"],"names":["React","Component","Note","connect","Row","Button","Empty","ModalAdd","ModalDelete","ModalEdit","createModalNoteShowAction","deleteModalNoteShowAction","editModalNoteShowAction","modalNoteCloseAction","createNote","deleteNoteById","editNote","getNoteForEdit","getNoteList","NoteList","componentDidMount","props","getData","handleSubmitEdit","editValues","note","name","author","description","uuid","render","type","loading","notes","noteEdit","id","display","justifyContent","showModalAdd","length","map","index","showModalDelete","showModalEdit","closeModal","handleSubmitCreate","handleDelete","mapStateToProps","state","modal","noteList","isLoading","data","mapDispatchToProps","dispatch","values"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,QAAmC,MAAnC;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,WAAP,MAAwB,qCAAxB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SACEC,yBADF,EAEEC,yBAFF,EAGEC,uBAHF,EAIEC,oBAJF,QAKO,mCALP;AAMA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,QAArC,EAA+CC,cAA/C,EAA+DC,WAA/D,QAAkF,wBAAlF;;;;AAEA,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAC/BmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,OAAX;AACD;;AAEDC,EAAAA,gBAAgB,CAACC,UAAD,EAAa;AAC3B,UAAMC,IAAI,GAAG;AACXC,MAAAA,IAAI,EAAEF,UAAU,CAACE,IADN;AAEXC,MAAAA,MAAM,EAAEH,UAAU,CAACG,MAFR;AAGXC,MAAAA,WAAW,EAAEJ,UAAU,CAACI;AAHb,KAAb;AAKA,SAAKP,KAAL,CAAWE,gBAAX,CAA4BE,IAA5B,EAAkCD,UAAU,CAACK,IAA7C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA,KAAjB;AAAwBC,MAAAA,QAAxB;AAAkCC,MAAAA;AAAlC,QAAyC,KAAKd,KAApD;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,cAAc,EAAE;AAAnC,SAAZ;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,OAAO,EAAE,MAAM,KAAKhB,KAAL,CAAWiB,YAAX,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,MAAM,EAAE,EAAb;AAAiB,UAAA,KAAK,EAAE;AAAED,YAAAA,cAAc,EAAE;AAAlB,WAAxB;AAAA,qBACG,CAACJ,KAAK,CAACM,MAAP,iBAAiB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBADpB,EAEG,CAACP,OAAD,IACCC,KAAK,CAACO,GAAN,CAAU,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AACzB,gCACE,QAAC,IAAD;AAEE,cAAA,IAAI,EAAEhB,IAFR;AAGE,cAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWqB,eAH9B;AAIE,cAAA,aAAa,EAAE,KAAKrB,KAAL,CAAWsB;AAJ5B,eACOF,KADP;AAAA;AAAA;AAAA;AAAA,oBADF;AAQD,WATD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAgBGV,IAAI,KAAK,QAAT,iBACC,QAAC,QAAD;AACE,UAAA,OAAO,EAAE,IADX;AAEE,UAAA,UAAU,EAAE,KAAKV,KAAL,CAAWuB,UAFzB;AAGE,UAAA,kBAAkB,EAAE,KAAKvB,KAAL,CAAWwB;AAHjC;AAAA;AAAA;AAAA;AAAA,gBAjBJ,EAuBGd,IAAI,KAAK,QAAT,iBACC,QAAC,WAAD;AACE,UAAA,EAAE,EAAEI,EADN;AAEE,UAAA,OAAO,EAAE,IAFX;AAGE,UAAA,YAAY,EAAE,KAAKd,KAAL,CAAWyB,YAH3B;AAIE,UAAA,UAAU,EAAE,KAAKzB,KAAL,CAAWuB;AAJzB;AAAA;AAAA;AAAA;AAAA,gBAxBJ,EA+BGb,IAAI,KAAK,MAAT,iBACC,QAAC,SAAD;AACE,UAAA,OAAO,EAAE,IADX;AAEE,UAAA,UAAU,EAAE,KAAKV,KAAL,CAAWuB,UAFzB;AAGE,UAAA,QAAQ,EAAEV,QAHZ;AAIE,UAAA,gBAAgB,EAAE,KAAKX;AAJzB;AAAA;AAAA;AAAA;AAAA,gBAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAkDD;;AAlE8B;;AAqEjC,MAAMwB,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,IAAI,EAAEiB,KAAK,CAACC,KAAN,CAAYlB,IADgB;AAElCE,EAAAA,KAAK,EAAEe,KAAK,CAACf,KAAN,CAAYiB,QAFe;AAGlClB,EAAAA,OAAO,EAAEgB,KAAK,CAACf,KAAN,CAAYkB,SAHa;AAIlCjB,EAAAA,QAAQ,EAAEc,KAAK,CAACC,KAAN,CAAYG,IAJY;AAKlCjB,EAAAA,EAAE,EAAEa,KAAK,CAACC,KAAN,CAAYG,IAAZ,CAAiBjB;AALa,CAAZ,CAAxB;;AAQA,MAAMkB,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLhC,IAAAA,OAAO,EAAE,MAAM;AACbgC,MAAAA,QAAQ,CAACpC,WAAW,EAAZ,CAAR;AACD,KAHI;AAILoB,IAAAA,YAAY,EAAE,MAAM;AAClBgB,MAAAA,QAAQ,CAAC5C,yBAAyB,EAA1B,CAAR;AACD,KANI;AAOLoC,IAAAA,YAAY,EAAGX,EAAD,IAAQ;AACpBmB,MAAAA,QAAQ,CAACvC,cAAc,CAACoB,EAAD,CAAf,CAAR;AACD,KATI;AAULS,IAAAA,UAAU,EAAE,MAAM;AAChBU,MAAAA,QAAQ,CAACzC,oBAAoB,EAArB,CAAR;AACD,KAZI;AAaL6B,IAAAA,eAAe,EAAGP,EAAD,IAAQ;AACvBmB,MAAAA,QAAQ,CAAC3C,yBAAyB,CAACwB,EAAD,CAA1B,CAAR;AACD,KAfI;AAgBLQ,IAAAA,aAAa,EAAGR,EAAD,IAAQ;AACrBmB,MAAAA,QAAQ,CAAC1C,uBAAuB,EAAxB,CAAR;AACA0C,MAAAA,QAAQ,CAACrC,cAAc,CAACkB,EAAD,CAAf,CAAR;AACD,KAnBI;AAoBLZ,IAAAA,gBAAgB,EAAE,CAACE,IAAD,EAAOU,EAAP,KAAc;AAC9BmB,MAAAA,QAAQ,CAACtC,QAAQ,CAACS,IAAD,EAAOU,EAAP,CAAT,CAAR;AACD,KAtBI;AAuBLU,IAAAA,kBAAkB,EAAGU,MAAD,IAAY;AAC9BD,MAAAA,QAAQ,CAACxC,UAAU,CAACyC,MAAD,CAAX,CAAR;AACD;AAzBI,GAAP;AA2BD,CA5BD;;AA8BA,eAAepD,OAAO,CAAC4C,eAAD,EAAkBM,kBAAlB,CAAP,CAA6ClC,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Note from \"./Note\";\r\nimport { connect } from \"react-redux\";\r\nimport { Row, Button, Empty } from \"antd\";\r\nimport ModalAdd from \"../../components/Modals/modalCreate\";\r\nimport ModalDelete from \"../../components/Modals/modalDelete\";\r\nimport ModalEdit from \"../../components/Modals/modalEdit\";\r\nimport {\r\n  createModalNoteShowAction,\r\n  deleteModalNoteShowAction,\r\n  editModalNoteShowAction,\r\n  modalNoteCloseAction,\r\n} from \"../../store/reducers/modalReducer\";\r\nimport { createNote, deleteNoteById, editNote, getNoteForEdit, getNoteList } from \"../../store/notesThunk\";\r\n\r\nclass NoteList extends Component {\r\n  componentDidMount() {\r\n    this.props.getData();\r\n  }\r\n\r\n  handleSubmitEdit(editValues) {\r\n    const note = {\r\n      name: editValues.name,\r\n      author: editValues.author,\r\n      description: editValues.description,\r\n    };\r\n    this.props.handleSubmitEdit(note, editValues.uuid);\r\n  }\r\n\r\n  render() {\r\n    const { type, loading, notes, noteEdit, id } = this.props;\r\n    return (\r\n      <>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n          <h1>Notes</h1>\r\n          <Button type=\"primary\" onClick={() => this.props.showModalAdd()}>\r\n            Add New Note\r\n          </Button>\r\n        </div>\r\n        <div className=\"site-card-wrapper\">\r\n          <Row gutter={16} style={{ justifyContent: \"space-around\" }}>\r\n            {!notes.length && <Empty />}\r\n            {!loading &&\r\n              notes.map((note, index) => {\r\n                return (\r\n                  <Note\r\n                    key={index}\r\n                    note={note}\r\n                    showModalDelete={this.props.showModalDelete}\r\n                    showModalEdit={this.props.showModalEdit}\r\n                  />\r\n                );\r\n              })}\r\n          </Row>\r\n          {/* {loading && <Spinner>Loading...</Spinner>} */}\r\n          {type === \"create\" && (\r\n            <ModalAdd\r\n              visible={true}\r\n              closeModal={this.props.closeModal}\r\n              handleSubmitCreate={this.props.handleSubmitCreate}\r\n            />\r\n          )}\r\n          {type === \"delete\" && (\r\n            <ModalDelete\r\n              id={id}\r\n              visible={true}\r\n              handleDelete={this.props.handleDelete}\r\n              closeModal={this.props.closeModal}\r\n            />\r\n          )}\r\n          {type === \"edit\" && (\r\n            <ModalEdit\r\n              visible={true}\r\n              closeModal={this.props.closeModal}\r\n              noteEdit={noteEdit}\r\n              handleSubmitEdit={this.handleSubmitEdit}\r\n            />\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  type: state.modal.type,\r\n  notes: state.notes.noteList,\r\n  loading: state.notes.isLoading,\r\n  noteEdit: state.modal.data,\r\n  id: state.modal.data.id,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getData: () => {\r\n      dispatch(getNoteList());\r\n    },\r\n    showModalAdd: () => {\r\n      dispatch(createModalNoteShowAction());\r\n    },\r\n    handleDelete: (id) => {\r\n      dispatch(deleteNoteById(id));\r\n    },\r\n    closeModal: () => {\r\n      dispatch(modalNoteCloseAction());\r\n    },\r\n    showModalDelete: (id) => {\r\n      dispatch(deleteModalNoteShowAction(id));\r\n    },\r\n    showModalEdit: (id) => {\r\n      dispatch(editModalNoteShowAction());\r\n      dispatch(getNoteForEdit(id));\r\n    },\r\n    handleSubmitEdit: (note, id) => {\r\n      dispatch(editNote(note, id));\r\n    },\r\n    handleSubmitCreate: (values) => {\r\n      dispatch(createNote(values));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\r\n"]},"metadata":{},"sourceType":"module"}