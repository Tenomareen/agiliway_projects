{"ast":null,"code":"import { put, takeEvery, call } from 'redux-saga/effects';\nimport { deleteNote, getNoteById, getNotes, postNote, putNote } from '../../api/notes';\nimport { modalNoteProgressAction } from '../Notes/actions/actions';\n\nfunction* getNotesSaga() {\n  try {\n    const data = yield call(getNotes);\n    yield put({\n      type: 'GET_ALL_NOTES',\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: 'CLOSE_ALL_NOTES'\n    });\n  }\n}\n\nfunction* getNoteSaga(action) {\n  try {\n    const data = yield call(getNoteById, action.payload);\n    yield put({\n      type: 'NOTE_DETAIL_SUCCESS',\n      payload: data\n    });\n  } catch (error) {\n    yield put({\n      type: 'NOTE_DETAIL_CLOSE'\n    });\n  }\n}\n\nfunction* deleteNoteSaga(action) {\n  modalNoteProgressAction();\n\n  try {\n    yield call(deleteNote, action.payload);\n    yield put({\n      type: 'MODAL_NOTE_SUCCESS'\n    });\n  } catch (error) {\n    yield put({\n      type: 'MODAL_NOTE_CLOSE'\n    });\n  }\n\n  const data = yield call(getNotes);\n  yield put({\n    type: 'GET_ALL_NOTES',\n    payload: data\n  });\n}\n\nfunction* createNoteSaga(action) {\n  modalNoteProgressAction();\n\n  try {\n    yield call(postNote, action.payload);\n    yield put({\n      type: 'MODAL_NOTE_SUCCESS'\n    });\n  } catch (error) {\n    yield put({\n      type: 'MODAL_NOTE_CLOSE'\n    });\n  }\n\n  modalNoteProgressAction();\n  const data = yield call(getNotes);\n  yield put({\n    type: 'GET_ALL_NOTES',\n    payload: data\n  });\n}\n\nfunction* editNoteSaga(action) {\n  modalNoteProgressAction();\n\n  try {\n    yield call(putNote, action.payload.data, action.payload.id);\n    yield put({\n      type: 'MODAL_NOTE_SUCCESS'\n    });\n  } catch (error) {\n    yield put({\n      type: 'MODAL_NOTE_CLOSE'\n    });\n  }\n\n  const data = yield call(getNotes);\n  yield put({\n    type: 'GET_ALL_NOTES',\n    payload: data\n  });\n}\n\nfunction* getNoteForEditNoteSaga(action) {\n  console.log(action.payload.id);\n\n  try {\n    const data = yield call(getNoteById, action.payload.id);\n    yield put({\n      type: 'GET_NOTE_FOR_EDIT',\n      payload: data\n    });\n  } catch (error) {\n    console.log('hello');\n  }\n}\n\nexport function* watcherGetNotesSaga() {\n  yield takeEvery('GET_ALL_NOTES_IN_PROGRESS', getNotesSaga);\n}\nexport function* watcherGetNoteByIdSaga() {\n  yield takeEvery('NOTE_DETAIL_IN_PROGRESS', getNoteSaga);\n}\nexport function* watcherDeleteNoteByIdSaga() {\n  yield takeEvery('MODAL_NOTE_IN_PROGRESS', deleteNoteSaga);\n}\nexport function* watcherCreateNoteByIdSaga() {\n  yield takeEvery('MODAL_NOTE_CREATE_IN_PROGRESS', createNoteSaga);\n}\nexport function* watcherEditNoteByIdSaga() {\n  yield takeEvery('MODAL_NOTE_EDIT_START', editNoteSaga);\n}\nexport function* watcherGetNoteForEditNoteByIdSaga() {\n  yield takeEvery('GET_NOTE_FOR_EDIT', getNoteForEditNoteSaga);\n}","map":{"version":3,"sources":["E:/agiliway_projects/agiliway_projects/notes-domain/src/pages/sagas/notesSagas.js"],"names":["put","takeEvery","call","deleteNote","getNoteById","getNotes","postNote","putNote","modalNoteProgressAction","getNotesSaga","data","type","payload","error","getNoteSaga","action","deleteNoteSaga","createNoteSaga","editNoteSaga","id","getNoteForEditNoteSaga","console","log","watcherGetNotesSaga","watcherGetNoteByIdSaga","watcherDeleteNoteByIdSaga","watcherCreateNoteByIdSaga","watcherEditNoteByIdSaga","watcherGetNoteForEditNoteByIdSaga"],"mappings":"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","sourcesContent":["import { put, takeEvery, call } from 'redux-saga/effects';\nimport {\n  deleteNote, getNoteById, getNotes, postNote, putNote,\n} from '../../api/notes';\nimport { modalNoteProgressAction } from '../Notes/actions/actions';\n\nfunction* getNotesSaga() {\n  try {\n    const data = yield call(getNotes);\n    yield put({\n      type: 'GET_ALL_NOTES', payload: data,\n    });\n  } catch (error) {\n    yield put({\n      type: 'CLOSE_ALL_NOTES',\n    });\n  }\n}\n\nfunction* getNoteSaga(action) {\n  try {\n    const data = yield call(getNoteById, action.payload);\n    yield put({\n      type: 'NOTE_DETAIL_SUCCESS', payload: data,\n    });\n  } catch (error) {\n    yield put({\n      type: 'NOTE_DETAIL_CLOSE',\n    });\n  }\n}\n\nfunction* deleteNoteSaga(action) {\n  modalNoteProgressAction();\n  try {\n    yield call(deleteNote, action.payload);\n    yield put({\n      type: 'MODAL_NOTE_SUCCESS',\n    });\n  } catch (error) {\n    yield put({\n      type: 'MODAL_NOTE_CLOSE',\n    });\n  }\n  const data = yield call(getNotes);\n  yield put({\n    type: 'GET_ALL_NOTES', payload: data,\n  });\n}\n\nfunction* createNoteSaga(action) {\n  modalNoteProgressAction();\n  try {\n    yield call(postNote, action.payload);\n    yield put({\n      type: 'MODAL_NOTE_SUCCESS',\n    });\n  } catch (error) {\n    yield put({\n      type: 'MODAL_NOTE_CLOSE',\n    });\n  }\n  modalNoteProgressAction();\n  const data = yield call(getNotes);\n  yield put({\n    type: 'GET_ALL_NOTES', payload: data,\n  });\n}\n\nfunction* editNoteSaga(action) {\n  modalNoteProgressAction();\n  try {\n    yield call(putNote, action.payload.data, action.payload.id);\n    yield put({\n      type: 'MODAL_NOTE_SUCCESS',\n    });\n  } catch (error) {\n    yield put({\n      type: 'MODAL_NOTE_CLOSE',\n    });\n  }\n  const data = yield call(getNotes);\n  yield put({\n    type: 'GET_ALL_NOTES', payload: data,\n  });\n}\n\nfunction* getNoteForEditNoteSaga(action) {\n  console.log(action.payload.id);\n  try {\n    const data = yield call(getNoteById, action.payload.id);\n    yield put({\n      type: 'GET_NOTE_FOR_EDIT', payload: data,\n    });\n  } catch (error) {\n    console.log('hello');\n  }\n}\n\nexport function* watcherGetNotesSaga() {\n  yield takeEvery('GET_ALL_NOTES_IN_PROGRESS', getNotesSaga);\n}\n\nexport function* watcherGetNoteByIdSaga() {\n  yield takeEvery('NOTE_DETAIL_IN_PROGRESS', getNoteSaga);\n}\n\nexport function* watcherDeleteNoteByIdSaga() {\n  yield takeEvery('MODAL_NOTE_IN_PROGRESS', deleteNoteSaga);\n}\n\nexport function* watcherCreateNoteByIdSaga() {\n  yield takeEvery('MODAL_NOTE_CREATE_IN_PROGRESS', createNoteSaga);\n}\n\nexport function* watcherEditNoteByIdSaga() {\n  yield takeEvery('MODAL_NOTE_EDIT_START', editNoteSaga);\n}\n\nexport function* watcherGetNoteForEditNoteByIdSaga() {\n  yield takeEvery('GET_NOTE_FOR_EDIT', getNoteForEditNoteSaga);\n}\n"]},"metadata":{},"sourceType":"module"}