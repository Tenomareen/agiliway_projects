[{"E:\\React-apps\\notes-domain\\src\\index.js":"1","E:\\React-apps\\notes-domain\\src\\App.js":"2","E:\\React-apps\\notes-domain\\src\\reportWebVitals.js":"3","E:\\React-apps\\notes-domain\\src\\components\\NavBar\\Navbar.js":"4","E:\\React-apps\\notes-domain\\src\\pages\\Homepage\\HomePage.js":"5","E:\\React-apps\\notes-domain\\src\\components\\Footer\\footer.js":"6","E:\\React-apps\\notes-domain\\src\\pages\\Statistics\\Statistics.js":"7","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\NoteList.js":"8","E:\\React-apps\\notes-domain\\src\\api\\notes.js":"9","E:\\React-apps\\notes-domain\\src\\api\\client.js":"10","E:\\React-apps\\notes-domain\\src\\store\\store.js":"11","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Note.js":"12","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\NoteDetails.js":"13","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\reducers\\modalReducer.js":"14","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\reducers\\notesReducer.js":"15","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\reducers\\noteDetailsReducer.js":"16","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\thunks\\notesThunk.js":"17","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\thunks\\noteThunk.js":"18","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\actions\\actions.js":"19","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\action-types\\note.action-types.js":"20","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalDelete\\modalDelete.js":"21","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalAdd\\modalCreate.js":"22","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalEdit\\modalEdit.js":"23","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Form\\NoteForm.js":"24","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Form\\TextAreaField.js":"25","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Form\\InputField.js":"26","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalDelete\\ModalDelete.js":"27","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalAdd\\ModalCreate.js":"28","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalEdit\\ModalEdit.js":"29","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\selectors\\notesSelectors.js":"30","E:\\React-apps\\notes-domain\\src\\pages\\Notes\\selectors\\modalSelectors.js":"31","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\index.js":"32","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\reportWebVitals.js":"33","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\App.js":"34","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\store\\store.js":"35","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\reducers\\modalReducer.js":"36","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Homepage\\HomePage.js":"37","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\components\\NavBar\\Navbar.js":"38","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\components\\Footer\\footer.js":"39","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\reducers\\noteDetailsReducer.js":"40","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\reducers\\notesReducer.js":"41","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Statistics\\Statistics.js":"42","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\NoteList.js":"43","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\NoteDetails.js":"44","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Note.js":"45","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\action-types\\note.action-types.js":"46","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\selectors\\notesSelectors.js":"47","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\selectors\\modalSelectors.js":"48","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\actions\\actions.js":"49","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\thunks\\notesThunk.js":"50","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\thunks\\noteThunk.js":"51","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\ModalEdit\\ModalEdit.js":"52","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\ModalDelete\\ModalDelete.js":"53","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\ModalAdd\\ModalCreate.js":"54","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\api\\notes.js":"55","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Form\\NoteForm.js":"56","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\api\\client.js":"57","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Form\\TextAreaField.js":"58","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Form\\InputField.js":"59","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\sagas\\rootSaga.js":"60","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\sagas\\notesSagas.js":"61"},{"size":736,"mtime":1636582623186,"results":"62","hashOfConfig":"63"},{"size":994,"mtime":1637248773834,"results":"64","hashOfConfig":"63"},{"size":362,"mtime":499162500000,"results":"65","hashOfConfig":"63"},{"size":1387,"mtime":1636555974388,"results":"66","hashOfConfig":"63"},{"size":806,"mtime":1636636566905,"results":"67","hashOfConfig":"63"},{"size":864,"mtime":1636553802019,"results":"68","hashOfConfig":"63"},{"size":4327,"mtime":1637324386468,"results":"69","hashOfConfig":"63"},{"size":4092,"mtime":1637322909313,"results":"70","hashOfConfig":"63"},{"size":444,"mtime":1637157194762,"results":"71","hashOfConfig":"63"},{"size":266,"mtime":1636636549536,"results":"72","hashOfConfig":"63"},{"size":631,"mtime":1637232671182,"results":"73","hashOfConfig":"63"},{"size":1566,"mtime":1637323298719,"results":"74","hashOfConfig":"63"},{"size":1370,"mtime":1637323033480,"results":"75","hashOfConfig":"63"},{"size":849,"mtime":1637246809355,"results":"76","hashOfConfig":"63"},{"size":576,"mtime":1637318656493,"results":"77","hashOfConfig":"63"},{"size":818,"mtime":1637233928379,"results":"78","hashOfConfig":"63"},{"size":1702,"mtime":1637250308814,"results":"79","hashOfConfig":"63"},{"size":377,"mtime":1637234182526,"results":"80","hashOfConfig":"63"},{"size":1498,"mtime":1637248099446,"results":"81","hashOfConfig":"63"},{"size":688,"mtime":1637248059101,"results":"82","hashOfConfig":"63"},{"size":942,"mtime":1637250845859,"results":"83","hashOfConfig":"63"},{"size":1045,"mtime":1637250840187,"results":"84","hashOfConfig":"63"},{"size":1118,"mtime":1637250852608,"results":"85","hashOfConfig":"63"},{"size":1301,"mtime":1637250231716,"results":"86","hashOfConfig":"63"},{"size":282,"mtime":1637069162400,"results":"87","hashOfConfig":"63"},{"size":242,"mtime":1637069158248,"results":"88","hashOfConfig":"63"},{"size":942,"mtime":1637250845859,"results":"89","hashOfConfig":"63"},{"size":1045,"mtime":1637250840187,"results":"90","hashOfConfig":"63"},{"size":1118,"mtime":1637250852608,"results":"91","hashOfConfig":"63"},{"size":302,"mtime":1637319301602,"results":"92","hashOfConfig":"63"},{"size":497,"mtime":1637319292054,"results":"93","hashOfConfig":"63"},{"size":698,"mtime":1637676269728,"results":"94","hashOfConfig":"95"},{"size":414,"mtime":1637668319179,"results":"96","hashOfConfig":"97"},{"size":955,"mtime":1637593023391,"results":"98","hashOfConfig":"95"},{"size":853,"mtime":1637677471394,"results":"99","hashOfConfig":"95"},{"size":1386,"mtime":1637835817097,"results":"100","hashOfConfig":"95"},{"size":754,"mtime":1637592304985,"results":"101","hashOfConfig":"95"},{"size":1131,"mtime":1637593295661,"results":"102","hashOfConfig":"95"},{"size":793,"mtime":1637593257226,"results":"103","hashOfConfig":"95"},{"size":753,"mtime":1637698495930,"results":"104","hashOfConfig":"95"},{"size":653,"mtime":1637921592921,"results":"105","hashOfConfig":"95"},{"size":4394,"mtime":1637675927092,"results":"106","hashOfConfig":"95"},{"size":4994,"mtime":1637835786339,"results":"107","hashOfConfig":"95"},{"size":1798,"mtime":1637698116922,"results":"108","hashOfConfig":"95"},{"size":1853,"mtime":1637848796009,"results":"109","hashOfConfig":"95"},{"size":1072,"mtime":1637921525605,"results":"110","hashOfConfig":"95"},{"size":292,"mtime":1637592776490,"results":"111","hashOfConfig":"95"},{"size":478,"mtime":1637592769872,"results":"112","hashOfConfig":"95"},{"size":2779,"mtime":1637921576204,"results":"113","hashOfConfig":"95"},{"size":1544,"mtime":1637922986677,"results":"114","hashOfConfig":"95"},{"size":339,"mtime":1637592832065,"results":"115","hashOfConfig":"95"},{"size":1214,"mtime":1637593459401,"results":"116","hashOfConfig":"95"},{"size":952,"mtime":1637835752519,"results":"117","hashOfConfig":"95"},{"size":979,"mtime":1637592683839,"results":"118","hashOfConfig":"95"},{"size":478,"mtime":1637679585843,"results":"119","hashOfConfig":"95"},{"size":1309,"mtime":1637676414347,"results":"120","hashOfConfig":"95"},{"size":235,"mtime":1637596197103,"results":"121","hashOfConfig":"95"},{"size":292,"mtime":1637676483005,"results":"122","hashOfConfig":"95"},{"size":235,"mtime":1637676480446,"results":"123","hashOfConfig":"95"},{"size":462,"mtime":1637714816945,"results":"124","hashOfConfig":"95"},{"size":2734,"mtime":1637956032523,"results":"125","hashOfConfig":"95"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"q2rynv",{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},"hrptua",{"filePath":"194","messages":"195","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1pjpzib",{"filePath":"196","messages":"197","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"193"},{"filePath":"199","messages":"200","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"193"},{"filePath":"202","messages":"203","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"193"},{"filePath":"205","messages":"206","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"193"},{"filePath":"208","messages":"209","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"193"},{"filePath":"211","messages":"212","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"193"},{"filePath":"214","messages":"215","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"193"},{"filePath":"217","messages":"218","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"193"},{"filePath":"220","messages":"221","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"193"},{"filePath":"223","messages":"224","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"193"},{"filePath":"226","messages":"227","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"193"},{"filePath":"229","messages":"230","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"193"},{"filePath":"232","messages":"233","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"193"},{"filePath":"235","messages":"236","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"193"},{"filePath":"238","messages":"239","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"193"},{"filePath":"241","messages":"242","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"193"},{"filePath":"244","messages":"245","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"193"},{"filePath":"247","messages":"248","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"193"},{"filePath":"250","messages":"251","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"193"},{"filePath":"253","messages":"254","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"193"},{"filePath":"256","messages":"257","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"193"},{"filePath":"259","messages":"260","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"193"},{"filePath":"262","messages":"263","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"193"},{"filePath":"265","messages":"266","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"193"},{"filePath":"268","messages":"269","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"193"},{"filePath":"271","messages":"272","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"193"},{"filePath":"274","messages":"275","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"193"},{"filePath":"277","messages":"278","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"193"},"E:\\React-apps\\notes-domain\\src\\index.js",[],["280","281"],"E:\\React-apps\\notes-domain\\src\\App.js",[],"E:\\React-apps\\notes-domain\\src\\reportWebVitals.js",[],"E:\\React-apps\\notes-domain\\src\\components\\NavBar\\Navbar.js",["282","283","284"],"import { Layout, Menu, Breadcrumb } from \"antd\";\r\nimport { Header } from \"antd/lib/layout/layout\";\r\nimport { useImperativeHandle } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport notes from \"./notes.png\";\r\n\r\nconst LogoBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  font-size: 1.5em;\r\n  height: 100%;\r\n  vertical-align: center;\r\n  height: 62px;\r\n  line-height: 62px;\r\n  margin-right: 5px;\r\n`;\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <>\r\n      <Header style={{display: \"flex\"}}>\r\n          <NavLink key=\"home\" to=\"/\">\r\n            <LogoBlock>\r\n              <img src={notes} alt={\"ads\"} height={52}></img>\r\n              Note Book\r\n            </LogoBlock>\r\n          </NavLink>\r\n        <Menu\r\n          className=\"App-header\"\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          defaultSelectedKeys={[\"0\"]}\r\n          style={{flexGrow:\"1\",justifyContent: \"end\"}}\r\n        >\r\n          <Menu.Item key=\"1\">\r\n            <NavLink to=\"/home\">Home Page</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"2\">\r\n            <NavLink to=\"/notes\">Notes</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"3\">\r\n            <NavLink to=\"/statistics\">Statistics</NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","E:\\React-apps\\notes-domain\\src\\pages\\Homepage\\HomePage.js",[],"E:\\React-apps\\notes-domain\\src\\components\\Footer\\footer.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Statistics\\Statistics.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\NoteList.js",[],"E:\\React-apps\\notes-domain\\src\\api\\notes.js",[],"E:\\React-apps\\notes-domain\\src\\api\\client.js",[],"E:\\React-apps\\notes-domain\\src\\store\\store.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Note.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\NoteDetails.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\reducers\\modalReducer.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\reducers\\notesReducer.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\reducers\\noteDetailsReducer.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\thunks\\notesThunk.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\thunks\\noteThunk.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\actions\\actions.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\action-types\\note.action-types.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalDelete\\modalDelete.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalAdd\\modalCreate.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalEdit\\modalEdit.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Form\\NoteForm.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Form\\TextAreaField.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\Form\\InputField.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalDelete\\ModalDelete.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalAdd\\ModalCreate.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\ModalEdit\\ModalEdit.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\selectors\\notesSelectors.js",[],"E:\\React-apps\\notes-domain\\src\\pages\\Notes\\selectors\\modalSelectors.js",[],"E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\index.js",["285"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n// import reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport store from './store/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["286","287","288","289","290","291"],"E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\reportWebVitals.js",["292"],"E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\App.js",["293"],"import './App.css';\nimport { Layout } from 'antd';\nimport { Switch, Route } from 'react-router-dom';\nimport Navbar from './components/NavBar/Navbar';\nimport HomePage from './pages/Homepage/HomePage';\nimport Footer from './components/Footer/footer';\nimport NoteList from './pages/Notes/NoteList';\nimport Statistics from './pages/Statistics/Statistics';\nimport NoteDetails from './pages/Notes/NoteDetails';\n\nconst App = () => (\n  <div className=\"App\">\n    <Navbar />\n    <Layout.Content style={{ padding: '0 50px' }} className=\"container\">\n      <main>\n        <Switch>\n          <Route path=\"/home\" component={HomePage} exact />\n          <Route path=\"/notes\" component={NoteList} exact />\n          <Route path=\"/note/:id\" component={NoteDetails} exact />\n          <Route path=\"/statistics\" component={Statistics} exact />\n        </Switch>\n      </main>\n    </Layout.Content>\n    <footer>\n      <Footer />\n    </footer>\n  </div>\n);\n\nexport default App;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\store\\store.js",["294"],"import createSagaMiddleware from 'redux-saga';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport modalReducer from '../pages/Notes/reducers/modalReducer';\nimport noteDetailsReducer from '../pages/Notes/reducers/noteDetailsReducer';\nimport notesReducer from '../pages/Notes/reducers/notesReducer';\nimport rootSaga from '../pages/sagas/rootSaga';\n\nconst rootReducer = combineReducers({\n  notes: notesReducer,\n  noteDetails: noteDetailsReducer,\n  modal: modalReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware, thunk]\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware)), // was thunk\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\reducers\\modalReducer.js",["295"],"import {\n  GET_NOTE_FOR_EDIT, GET_NOTE_FOR_EDIT_SUCCESS, MODAL_NOTE_CLOSE, MODAL_NOTE_CREATE_START, MODAL_NOTE_DELETE_START, MODAL_NOTE_EDIT_IN_PROGRESS, MODAL_NOTE_EDIT_START, MODAL_NOTE_IN_PROGRESS, MODAL_NOTE_SHOW, MODAL_NOTE_SUCCESS,\n} from '../action-types/note.action-types';\n\nconst initialState = {\n  loading: false,\n  data: {},\n  type: '',\n};\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MODAL_NOTE_SHOW:\n      return {\n        ...state,\n        loading: false,\n        type: action.payload.type,\n        data: { id: action.payload.id },\n      };\n    case MODAL_NOTE_CREATE_START:\n      return { ...state, loading: true };\n    case MODAL_NOTE_DELETE_START:\n      return { ...state, loading: true };\n    case MODAL_NOTE_EDIT_IN_PROGRESS:\n      return { ...state, loading: true, data: action.payload };\n    case MODAL_NOTE_EDIT_START:\n      return { ...state, loading: true, data: { id: action.payload } };\n    case MODAL_NOTE_IN_PROGRESS:\n      return { ...state, loading: true };\n    case MODAL_NOTE_SUCCESS:\n      return initialState;\n    case MODAL_NOTE_CLOSE:\n      return initialState;\n    case GET_NOTE_FOR_EDIT_SUCCESS:\n      return { ...state, data: action.payload, loading: false };\n    case GET_NOTE_FOR_EDIT:\n      return { ...state, loading: true };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Homepage\\HomePage.js",["296"],"import { Card } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport React, { Component } from 'react';\n\nclass HomePage extends Component {\n  render() {\n    return (\n      <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n        <Card\n          hoverable\n          style={{ width: 240, flex: 'center' }}\n          cover={(\n            <img\n              alt=\"example\"\n              src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\n            />\n          )}\n        >\n          <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\n        </Card>\n        <div>\n          Name\n          <div> Hello World</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\components\\NavBar\\Navbar.js",["297"],"import { Menu } from 'antd';\nimport { Header } from 'antd/lib/layout/layout';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\nimport notes from './notes.png';\n\nconst LogoBlock = styled.div`\n  display: flex;\n  align-items: center;\n  color: white;\n  font-size: 1.5em;\n  height: 100%;\n  vertical-align: center;\n  height: 62px;\n  line-height: 62px;\n  margin-right: 5px;\n`;\n\nconst Navbar = () => (\n  <Header style={{ display: 'flex' }}>\n    <NavLink key=\"home\" to=\"/\">\n      <LogoBlock>\n        <img src={notes} alt=\"ads\" height={52} />\n        Note Book\n      </LogoBlock>\n    </NavLink>\n    <Menu\n      className=\"App-header\"\n      theme=\"dark\"\n      mode=\"horizontal\"\n      defaultSelectedKeys={['0']}\n      style={{ flexGrow: '1', justifyContent: 'end' }}\n    >\n      <Menu.Item key=\"1\">\n        <NavLink to=\"/home\">Home Page</NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"2\">\n        <NavLink to=\"/notes\">Notes</NavLink>\n      </Menu.Item>\n      <Menu.Item key=\"3\">\n        <NavLink to=\"/statistics\">Statistics</NavLink>\n      </Menu.Item>\n    </Menu>\n  </Header>\n);\n\nexport default Navbar;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\components\\Footer\\footer.js",["298"],"import { NavLink } from 'react-router-dom';\nimport { InstagramOutlined, GithubOutlined, GoogleOutlined } from '@ant-design/icons';\n\nconst Footer = () => (\n  <>\n    <NavLink\n      to={{ pathname: 'https://www.instagram.com/tenomareen/' }}\n      target=\"_blank\"\n    >\n      <InstagramOutlined style={{ fontSize: '40px', marginTop: '8px' }} />\n    </NavLink>\n    <NavLink\n      to={{ pathname: 'https://github.com/Tenomareen' }}\n      target=\"_blank\"\n    >\n      <GithubOutlined style={{ fontSize: '40px', marginTop: '8px', marginLeft: '15px' }} />\n    </NavLink>\n    <NavLink\n      to={{ pathname: 'https://www.google.com/' }}\n      target=\"_blank\"\n    >\n      <GoogleOutlined style={{ fontSize: '40px', marginTop: '8px', marginLeft: '15px' }} />\n    </NavLink>\n  </>\n);\n\nexport default Footer;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\reducers\\noteDetailsReducer.js",["299"],"import {\n  NOTE_DETAIL_CLOSE, NOTE_DETAIL_IN_PROGRESS, NOTE_DETAIL_SHOW, NOTE_DETAIL_SUCCESS,\n} from '../action-types/note.action-types';\n\nconst initialState = {\n  // visible: false,\n  loadingDetail: false,\n  note: {},\n};\n\nconst noteDetailsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NOTE_DETAIL_SHOW:\n      return { ...state, loadingDetail: false };\n    case NOTE_DETAIL_IN_PROGRESS:\n      return { ...state, loadingDetail: true, note: { id: action.payload } };\n    case NOTE_DETAIL_SUCCESS:\n      return { ...state, loadingDetail: false, note: action.payload };\n    case NOTE_DETAIL_CLOSE:\n      return { ...state, loadingDetail: false };\n    default:\n      return state;\n  }\n};\n\nexport default noteDetailsReducer;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\reducers\\notesReducer.js",["300"],"import {\n  CLOSE_ALL_NOTES,\n  GET_ALL_NOTES,\n  GET_ALL_NOTES_ERROR,\n  GET_ALL_NOTES_IN_PROGRESS,\n} from '../action-types/note.action-types';\n\nconst initialState = {\n  noteList: [],\n  isLoading: true,\n};\n\nconst notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_NOTES:\n      return { isLoading: false, noteList: action.payload.data };\n    case GET_ALL_NOTES_IN_PROGRESS:\n      return { ...state, isLoading: true };\n    case CLOSE_ALL_NOTES:\n      return initialState;\n    case GET_ALL_NOTES_ERROR:\n      return {...state, isLoading: false };\n    default:\n      return state;\n  }\n};\n\nexport default notesReducer;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Statistics\\Statistics.js",["301"],"import {\n  Table, Button, Space, Spin,\n} from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { closeNotes } from '../Notes/actions/actions';\nimport { loadingSelector, notesSelector } from '../Notes/selectors/notesSelectors';\nimport { getNoteList } from '../Notes/thunks/notesThunk';\n\nclass Statistics extends React.Component {\n  state = {\n    filteredInfo: null,\n    sortedInfo: null,\n  };\n\n  componentDidMount() {\n    const { getData } = this.props;\n    getData();\n  }\n\n  componentWillUnmount() {\n    const { closeNotes } = this.props;\n    closeNotes();\n  }\n\n  handleChange = (filters, sorter) => {\n    // console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  }\n\n  setAgeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'age',\n      },\n    });\n  }\n\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  }\n\n  clearFilters = () => {\n    this.setState({ filteredInfo: null });\n  }\n\n  render() {\n    const { data, loading } = this.props;\n    let { sortedInfo, filteredInfo } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        filters: [\n          { text: 'Joe', value: 'Joe' },\n          { text: 'Jim', value: 'Jim' },\n        ],\n        filteredValue: filteredInfo.name || null,\n        onFilter: (value, record) => record.name.includes(value),\n        sorter: (a, b) => a.name.length - b.name.length,\n        sortOrder: sortedInfo.columnKey === 'name' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Author',\n        dataIndex: 'author',\n        key: 'author',\n        sorter: (a, b) => a.author - b.author,\n        sortOrder: sortedInfo.columnKey === 'author' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description',\n        filters: [\n          { text: 'London', value: 'London' },\n          { text: 'New York', value: 'New York' },\n        ],\n        filteredValue: filteredInfo.description || null,\n        onFilter: (value, record) => record.description.includes(value),\n        sorter: (a, b) => a.description.length - b.description.length,\n        sortOrder: sortedInfo.columnKey === 'description' && sortedInfo.order,\n        ellipsis: true,\n      },\n      {\n        title: 'Creation Date',\n        dataIndex: 'createDate',\n        key: 'createDate',\n        filters: [\n          { text: 'London', value: 'London' },\n          { text: 'New York', value: 'New York' },\n        ],\n        filteredValue: filteredInfo.createDate || null,\n        onFilter: (value, record) => record.createDate.includes(value),\n        render: (text) => moment(text).format('MMMM Do YYYY'),\n        sorter: (a, b) => a.createDate.length - b.createDate.length,\n        sortOrder: sortedInfo.columnKey === 'createDate' && sortedInfo.order,\n        ellipsis: true,\n      },\n    ];\n    return (\n      <>\n        {loading && (\n          <div>\n            <Spin />\n            {' '}\n            Loading Statistics...\n          </div>\n        )}\n        <Space style={{ marginBottom: 16 }}>\n          <Button onClick={this.setAgeSort}>Sort age</Button>\n          <Button onClick={this.clearFilters}>Clear filters</Button>\n          <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n        </Space>\n        <Table\n          columns={columns}\n          dataSource={data}\n          onChange={this.handleChange}\n          rowKey={(data) => data.uuid}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  data: notesSelector(state),\n  loading: loadingSelector(state),\n});\n\nconst mapDispatchToProps = {\n  getData: getNoteList,\n  closeNotes,\n};\n\nStatistics.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  data: PropTypes.array,\n  loading: PropTypes.bool,\n  getData: PropTypes.func,\n  closeNotes: PropTypes.func,\n};\n\nStatistics.defaultProps = {\n  data: [],\n  loading: true,\n  getData: () => {},\n  closeNotes: () => {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\NoteList.js",["302"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Row, Button, Empty, Spin,\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport Note from './Note';\nimport ModalAdd from './ModalAdd/ModalCreate';\nimport ModalDelete from './ModalDelete/ModalDelete';\nimport ModalEdit from './ModalEdit/ModalEdit';\nimport {\n  closeNotes, createNoteStartAction, editNoteStartAction, getNoteForEditNoteStartAction, getNotesStartAction, modalNoteCloseAction, modalNoteDeleteStartAction, modalNoteShowAction,\n} from './actions/actions';\nimport {\n  createNote,\n  deleteNoteById,\n  editNote,\n  getNoteForEdit,\n  getNoteList,\n} from './thunks/notesThunk';\nimport { loadingSelector, notesSelector } from './selectors/notesSelectors';\nimport {\n  idSelector, modalLoadingSelector, noteEditSelector, typeSelector,\n} from './selectors/modalSelectors';\n\nclass NoteList extends Component {\n  componentDidMount() {\n    const { getNotesStart } = this.props;\n    getNotesStart();\n  }\n\n  componentWillUnmount() {\n    const { closeNotes } = this.props;\n    closeNotes();\n  }\n\n  handleSubmit = (editValues) => {\n    const { editNoteStart } = this.props;\n    const note = {\n      name: editValues.name,\n      author: editValues.author,\n      description: editValues.description,\n    };\n    editNoteStart(note, editValues.uuid);\n  }\n\n  render() {\n    const {\n      type, loading, notes, noteEdit, id, loadingModal, showModal, closeModal, deleteNoteStart, createNoteStart, getNoteForEditNoteStart,\n    } = this.props;\n    return (\n      <>\n        <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n          <h1>Notes</h1>\n          <Button type=\"primary\" onClick={() => showModal('create')}>\n            Add New Note\n          </Button>\n        </div>\n        <div className=\"site-card-wrapper\">\n          <Row gutter={16} style={{ justifyContent: 'space-around' }}>\n            {(!notes.length && !loading) && <Empty />}\n            {!loading\n              && notes.map((note, index) => (\n                <Note\n                  key={index}\n                  note={note}\n                  showModal={showModal}\n                  getNoteForEdit={getNoteForEditNoteStart}\n                />\n              ))}\n          </Row>\n          {loading && (\n          <div>\n            <Spin />\n            {' '}\n            Loading Note List...\n          </div>\n          )}\n          {type === 'create' && (\n            <ModalAdd\n              visible\n              closeModal={closeModal}\n              handleSubmitCreate={createNoteStart}\n              loading={loadingModal}\n            />\n          )}\n          {type === 'delete' && (\n            <ModalDelete\n              id={id}\n              visible\n              handleDelete={deleteNoteStart}\n              closeModal={closeModal}\n              loading={loadingModal}\n            />\n          )}\n          {type === 'edit' && (\n            <ModalEdit\n              visible\n              closeModal={closeModal}\n              noteEdit={noteEdit}\n              handleSubmitEdit={this.handleSubmit}\n              loading={loadingModal}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  type: typeSelector(state),\n  notes: notesSelector(state),\n  loading: loadingSelector(state),\n  noteEdit: noteEditSelector(state),\n  id: idSelector(state),\n  loadingModal: modalLoadingSelector(state),\n});\n\nconst mapDispatchToProps = {\n  getNoteForEditNoteStart: getNoteForEditNoteStartAction,\n  editNoteStart: editNoteStartAction,\n  createNoteStart: createNoteStartAction,\n  getNotesStart: getNotesStartAction,\n  getData: getNoteList,\n  showModal: modalNoteShowAction,\n  handleDelete: deleteNoteById,\n  closeModal: modalNoteCloseAction,\n  handleSubmitEdit: editNote,\n  handleSubmitCreate: createNote,\n  getNote: getNoteForEdit,\n  closeNotes,\n  deleteNoteStart: modalNoteDeleteStartAction,\n};\n\nNoteList.propTypes = {\n  getNoteForEditNoteStart: PropTypes.func,\n  editNoteStart: PropTypes.func,\n  createNoteStart: PropTypes.func,\n  type: PropTypes.string,\n  // eslint-disable-next-line react/forbid-prop-types\n  notes: PropTypes.array,\n  loading: PropTypes.bool,\n  noteEdit: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  id: PropTypes.string,\n  loadingModal: PropTypes.bool,\n  showModal: PropTypes.func,\n  closeModal: PropTypes.func,\n  closeNotes: PropTypes.func,\n  getNotesStart: PropTypes.func,\n  deleteNoteStart: PropTypes.func,\n};\n\nNoteList.defaultProps = {\n  type: '',\n  notes: [],\n  loading: true,\n  noteEdit: {},\n  id: '',\n  loadingModal: true,\n  showModal: () => {},\n  closeModal: () => {},\n  closeNotes: () => {},\n  getNotesStart: () => {},\n  deleteNoteStart: () => {},\n  createNoteStart: () => {},\n  editNoteStart: () => {},\n  getNoteForEditNoteStart: () => {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\NoteDetails.js",["303"],"import { Card } from 'antd';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getNoteDetails } from './thunks/noteThunk';\nimport { getNoteStartAction } from './actions/actions';\n\nclass NoteDetails extends Component {\n  componentDidMount() {\n    const { getNoteStart, match: { params } } = this.props;\n    getNoteStart(params.id);\n  }\n\n  render() {\n    const { noteDetails } = this.props;\n    return (\n      <div\n        style={{ display: 'flex', justifyContent: 'center', padding: '50px' }}\n      >\n        <Card\n          title={noteDetails.name}\n          extra={<NavLink to=\"/notes\">Back</NavLink>}\n          style={{ width: 500, fontSize: 'large' }}\n        >\n          <div>\n            <div style={{ fontWeight: 'bold' }}>Author : </div>\n            {noteDetails.author}\n          </div>\n          <div>\n            <div style={{ fontWeight: 'bold' }}>Description : </div>\n            {noteDetails.description}\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => ({\n  noteDetails: state.noteDetails.note,\n});\nconst mapDispatchToProps = {\n  getNoteStart: getNoteStartAction,\n  getNoteById: getNoteDetails,\n};\n\nNoteDetails.propTypes = {\n  noteDetails: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  getNoteStart: PropTypes.func,\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n};\n\nNoteDetails.defaultProps = {\n  noteDetails: {},\n  getNoteStart: () => {},\n  match: {},\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteDetails);\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Note.js",["304"],"import {\n  Col, Card, Menu, Dropdown,\n} from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst Note = ({ note, showModal, getNoteForEdit }) => {\n  const menu = (\n    <Menu destroyPopupOnHide>\n      <Menu.Item\n        key=\"0\"\n        onClick={() => {\n          showModal('edit')\n          getNoteForEdit(note.uuid);\n        }}\n      >\n        Edit\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <NavLink to={`/note/${note.uuid}`}>Details</NavLink>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        key=\"3\"\n        onClick={() => showModal('delete', note.uuid)}\n      >\n        Delete\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Col span={8}>\n      <Card\n        title={note.name}\n        bordered\n        style={{ marginBottom: '5px' }}\n      >\n        <div className=\"description\">{note.description}</div>\n        <div className=\"date\">{moment(note.createDate).format('MMMM Do YYYY')}</div>\n        {/* <div> */}\n        <Dropdown overlay={menu} trigger={['click']} destroyPopupOnHide>\n          <a\n            href=\"#/\"\n            className=\"ant-dropdown-link\"\n            onClick={(e) => {\n              e.preventDefault();\n            }}\n          >\n            Click me\n            {' '}\n            <DownOutlined />\n          </a>\n        </Dropdown>\n        {/* </div> */}\n      </Card>\n    </Col>\n  );\n};\n\nNote.propTypes = {\n  note: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  showModal: PropTypes.func,\n  getNoteForEdit: PropTypes.func,\n};\n\nNote.defaultProps = {\n  note: {},\n  showModal: () => {},\n  getNoteForEdit: () => {},\n};\n\nexport default Note;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\action-types\\note.action-types.js",["305"],"export const MODAL_NOTE_IN_PROGRESS = 'MODAL_NOTE_IN_PROGRESS';\nexport const MODAL_NOTE_CLOSE = 'MODAL_NOTE_CLOSE';\nexport const MODAL_NOTE_SUCCESS = 'MODAL_NOTE_SUCCESS';\nexport const GET_NOTE_FOR_EDIT = 'GET_NOTE_FOR_EDIT';\nexport const MODAL_NOTE_SHOW = 'MODAL_NOTE_SHOW';\n\nexport const NOTE_DETAIL_IN_PROGRESS = 'NOTE_DETAIL_IN_PROGRESS';\nexport const NOTE_DETAIL_SUCCESS = 'NOTE_DETAIL_SUCCESS';\nexport const NOTE_DETAIL_SHOW = 'NOTE_DETAIL_SHOW';\nexport const NOTE_DETAIL_CLOSE = 'NOTE_DETAIL_CLOSE';\n\nexport const GET_ALL_NOTES = 'GET_ALL_NOTES';\nexport const GET_ALL_NOTES_IN_PROGRESS = 'GET_ALL_NOTES_IN_PROGRESS';\n\nexport const CLOSE_ALL_NOTES = 'CLOSE_ALL_NOTES';\n\nexport const MODAL_NOTE_CREATE_START = 'MODAL_NOTE_CREATE_START';\nexport const MODAL_NOTE_EDIT_IN_PROGRESS = 'MODAL_NOTE_EDIT_IN_PROGRESS';\nexport const MODAL_NOTE_EDIT_START = 'MODAL_NOTE_EDIT_START';\nexport const GET_NOTE_FOR_EDIT_SUCCESS = 'GET_NOTE_FOR_EDIT_SUCCESS';\nexport const MODAL_NOTE_DELETE_START = 'MODAL_NOTE_DELETE_START';\nexport const GET_ALL_NOTES_ERROR = 'GET_ALL_NOTES_ERROR';\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\selectors\\notesSelectors.js",["306"],"import { createSelector } from 'reselect';\n\nexport const notesBaseState = (state) => state.notes;\n\nexport const notesSelector = createSelector(\n  notesBaseState,\n  (notes) => notes.noteList,\n);\nexport const loadingSelector = createSelector(\n  notesBaseState,\n  (notes) => notes.isLoading,\n);\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\selectors\\modalSelectors.js",["307"],"import { createSelector } from 'reselect';\n\nexport const modalBaseState = (state) => state.modal;\n\nexport const typeSelector = createSelector(\n  modalBaseState,\n  (modal) => modal.type,\n);\n\nexport const noteEditSelector = createSelector(\n  modalBaseState,\n  (modal) => modal.data,\n);\n\nexport const idSelector = createSelector(\n  modalBaseState,\n  (modal) => modal.data.id,\n);\n\nexport const modalLoadingSelector = createSelector(\n  modalBaseState,\n  (modal) => modal.loading,\n);\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\actions\\actions.js",["308"],"import {\n  CLOSE_ALL_NOTES,\n  GET_ALL_NOTES,\n  GET_ALL_NOTES_ERROR,\n  GET_ALL_NOTES_IN_PROGRESS,\n  GET_NOTE_FOR_EDIT,\n  GET_NOTE_FOR_EDIT_SUCCESS,\n  MODAL_NOTE_CLOSE,\n  MODAL_NOTE_CREATE_START,\n  MODAL_NOTE_DELETE_START,\n  MODAL_NOTE_EDIT_START,\n  MODAL_NOTE_IN_PROGRESS,\n  MODAL_NOTE_SHOW,\n  MODAL_NOTE_SUCCESS,\n  NOTE_DETAIL_CLOSE,\n  NOTE_DETAIL_IN_PROGRESS,\n  NOTE_DETAIL_SHOW,\n  NOTE_DETAIL_SUCCESS,\n} from '../action-types/note.action-types';\n\nexport const getNoteForEditAction = (payload) => ({\n  type: GET_NOTE_FOR_EDIT,\n  payload,\n});\n\nexport const modalNoteShowAction = (type, id) => ({\n  type: MODAL_NOTE_SHOW,\n  payload: { type, id },\n});\n\nexport const modalNoteCloseAction = () => ({\n  type: MODAL_NOTE_CLOSE,\n});\n\nexport const modalNoteProgressAction = () => ({\n  type: MODAL_NOTE_IN_PROGRESS,\n});\n\nexport const modalNoteSuccessAction = () => ({\n  type: MODAL_NOTE_SUCCESS,\n});\n\nexport const editNoteSuccessAction = (payload) => ({\n  type: GET_NOTE_FOR_EDIT,\n  payload,\n});\n\nexport const getNoteByIdShowAction = () => ({\n  type: NOTE_DETAIL_SHOW,\n});\n\nexport const getNoteByIdCloseAction = () => ({\n  type: NOTE_DETAIL_CLOSE,\n});\n\nexport const getNoteByIdProgressAction = () => ({\n  type: NOTE_DETAIL_IN_PROGRESS,\n});\n\nexport const getNoteByIdSuccessAction = (payload) => ({\n  type: NOTE_DETAIL_SUCCESS,\n  payload,\n});\n\nexport const getNotesAction = (payload) => ({ type: GET_ALL_NOTES, payload });\n\nexport const getNotesInProgressAction = () => ({\n  type: GET_ALL_NOTES_IN_PROGRESS,\n});\n\nexport const closeNotes = () => ({ type: CLOSE_ALL_NOTES });\n\nexport const getNotesStartAction = () => ({ type: GET_ALL_NOTES_IN_PROGRESS });\n\nexport const getNotesSuccessAction = () => ({ type: GET_ALL_NOTES });\n\nexport const getNotesErrorAction = () => ({ type: CLOSE_ALL_NOTES });\n\nexport const closeNote = () => ({ type: NOTE_DETAIL_CLOSE });\n\nexport const getNoteStartAction = (id) => ({ type: NOTE_DETAIL_IN_PROGRESS, payload: id });\n\nexport const getNoteSuccessAction = () => ({ type: NOTE_DETAIL_SUCCESS });\n\nexport const getNoteErrorAction = () => ({ type: NOTE_DETAIL_CLOSE });\n\nexport const deleteNoteStartAction = (id) => ({ type: MODAL_NOTE_IN_PROGRESS, payload: id });\n\nexport const createNoteStartAction = (payload) => ({ type: MODAL_NOTE_CREATE_START, payload });\n\nexport const editNoteStartAction = (data, id) => ({ type: MODAL_NOTE_EDIT_START, payload: { data, id } });\n\nexport const getNoteForEditNoteStartAction = (id) => ({ type: GET_NOTE_FOR_EDIT, payload: { id } });\n\nexport const getNoteForEditSuccessAction = (data) => ({ type: GET_NOTE_FOR_EDIT_SUCCESS, payload: data });\n\nexport const modalNoteDeleteStartAction = (id) => ({ type: MODAL_NOTE_DELETE_START, payload: id });\n\nexport const getNoteListErrorAction = () => ({ type: GET_ALL_NOTES_ERROR });\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\thunks\\notesThunk.js",["309"],"import { message } from 'antd';\nimport {\n  deleteNote,\n  getNoteById,\n  getNotes,\n  postNote,\n  putNote,\n} from '../../../api/notes';\nimport {\n  editNoteSuccessAction,\n  getNotesInProgressAction,\n  modalNoteProgressAction,\n  modalNoteShowAction,\n  modalNoteSuccessAction,\n  getNotesAction,\n  getNoteListErrorAction,\n} from '../actions/actions';\n\nexport const getNoteList = () => (dispatch) => {\n  dispatch(getNotesInProgressAction());\n  return getNotes().then((response) => {\n    dispatch(getNotesAction(response.data));\n  })\n    .catch(() => dispatch(getNoteListErrorAction()));\n};\n\nexport const createNote = (note) => (dispatch) => {\n  dispatch(modalNoteProgressAction());\n  postNote(note).then(() => {\n    dispatch(modalNoteSuccessAction());\n    message.success('New Note was added');\n    dispatch(getNoteList());\n  });\n};\n\nexport const deleteNoteById = (id) => (dispatch) => {\n  dispatch(modalNoteProgressAction());\n  deleteNote(id).then(() => {\n    dispatch(modalNoteSuccessAction());\n    message.success('Note was deleted');\n    dispatch(getNoteList());\n  });\n};\n\nexport const editNote = (note, id) => (dispatch) => {\n  dispatch(modalNoteProgressAction());\n  putNote(note, id).then(() => {\n    dispatch(modalNoteSuccessAction());\n    message.success('Note was edited');\n    dispatch(getNoteList());\n  });\n};\n\nexport const getNoteForEdit = (id) => (dispatch) => {\n  dispatch(modalNoteShowAction('edit'));\n  dispatch(modalNoteProgressAction());\n  getNoteById(id).then((response) => {\n    dispatch(editNoteSuccessAction(response));\n  });\n};\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\thunks\\noteThunk.js",["310"],"import { getNoteById } from '../../../api/notes';\nimport {\n  getNoteByIdProgressAction,\n  getNoteByIdSuccessAction,\n} from '../actions/actions';\n\nexport const getNoteDetails = (id) => (dispatch) => {\n  dispatch(getNoteByIdProgressAction());\n  getNoteById(id).then((response) => {\n    dispatch(getNoteByIdSuccessAction(response));\n  });\n};\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\ModalEdit\\ModalEdit.js",["311"],"import { Modal, Button } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NoteForm from '../Form/NoteForm';\n\nconst ModalEdit = ({\n  visible,\n  loading,\n  closeModal,\n  noteEdit,\n  handleSubmitEdit,\n}) => (\n  <Modal\n    visible={visible}\n    title=\"Edit\"\n        // onOk={handleOk}\n    onCancel={closeModal}\n    footer={[\n      <Button key=\"back\" onClick={closeModal}>\n        Return\n      </Button>,\n      <Button\n        key=\"submit\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        form=\"form\"\n        loading={loading}\n      >\n        Submit\n      </Button>,\n    ]}\n  >\n    <NoteForm handleSubmit={handleSubmitEdit} note={noteEdit} loading={loading} />\n  </Modal>\n);\n\nModalEdit.propTypes = {\n  visible: PropTypes.bool,\n  closeModal: PropTypes.func,\n  loading: PropTypes.bool,\n  noteEdit: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  handleSubmitEdit: PropTypes.func,\n};\n\nModalEdit.defaultProps = {\n  visible: false,\n  closeModal: () => {},\n  loading: true,\n  noteEdit: {},\n  handleSubmitEdit: () => {},\n};\n\nexport default ModalEdit;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\ModalDelete\\ModalDelete.js",["312"],"import { Modal, Button } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ModalDelete = ({\n  visible, id, handleDelete, closeModal, loading,\n}) => (\n  <Modal\n    visible={visible}\n    title=\"Title\"\n        // onOk={handleOk}\n    onCancel={closeModal}\n    footer={[\n      <Button key=\"back\" onClick={closeModal}>\n        Return\n      </Button>,\n      <Button\n        key=\"delete\"\n        type=\"primary\"\n        form=\"form\"\n        loading={loading}\n        onClick={() => handleDelete(id)}\n      >\n        Delete\n      </Button>,\n    ]}\n  >\n    Do your really want delete this?\n  </Modal>\n);\n\nModalDelete.propTypes = {\n  visible: PropTypes.bool,\n  id: PropTypes.string,\n  closeModal: PropTypes.func,\n  handleDelete: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nModalDelete.defaultProps = {\n  visible: false,\n  id: '',\n  closeModal: () => {},\n  handleDelete: () => {},\n  loading: true,\n};\n\nexport default ModalDelete;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\ModalAdd\\ModalCreate.js",["313"],"import { Modal, Button } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NoteForm from '../Form/NoteForm';\n\nconst ModalAdd = ({\n  visible, loading, closeModal, handleSubmitCreate,\n}) => (\n  <Modal\n    visible={visible}\n    title=\"Create\"\n        // onOk={handleOk}\n    onCancel={closeModal}\n    footer={[\n      <Button key=\"back\" onClick={closeModal}>\n        Return\n      </Button>,\n      <Button\n        key=\"submit\"\n        type=\"primary\"\n        htmlType=\"submit\"\n        form=\"form\"\n        loading={loading}\n      >\n        Submit\n      </Button>,\n    ]}\n  >\n    <NoteForm handleSubmit={handleSubmitCreate} loading={loading} />\n  </Modal>\n);\n\nModalAdd.propTypes = {\n  visible: PropTypes.bool,\n  closeModal: PropTypes.func,\n  loading: PropTypes.bool,\n  handleSubmitCreate: PropTypes.func,\n};\n\nModalAdd.defaultProps = {\n  visible: false,\n  closeModal: () => {},\n  loading: true,\n  handleSubmitCreate: () => {},\n};\n\nexport default ModalAdd;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\api\\notes.js",["314"],"import client from './client';\n\nexport const getNotes = () => client.get('/notes');\n// export const getNotes = () => { client.get('/notes').then((response) => response.data).catch((error) => { throw error; }) };\n\nexport const postNote = (note) => client.post('/notes', note);\n\nexport const deleteNote = (id) => client.delete(`/notes/${id}`);\n\nexport const getNoteById = (id) => client.get(`/notes/${id}`);\n\nexport const putNote = (note, id) => client.put(`/notes/${id}`, note);\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Form\\NoteForm.js",["315"],"import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport PropTypes from 'prop-types';\nimport { Spin } from 'antd';\nimport { InputField } from './InputField';\nimport { TextAreaField } from './TextAreaField';\n\nconst NoteForm = ({ handleSubmit, note, loading }) => (\n  <Spin spinning={loading}>\n    <Form\n      id=\"form\"\n      onSubmit={handleSubmit}\n      initialValues={note}\n      render={({\n        handleSubmit,\n      }) => (\n        <form onSubmit={handleSubmit} id=\"form\">\n          <label>Name</label>\n          <Field\n            name=\"name\"\n            component={InputField}\n          />\n          <label>Author</label>\n          <Field\n            name=\"author\"\n            component={InputField}\n          />\n          <label>Description</label>\n          <Field\n            name=\"description\"\n            component={TextAreaField}\n          />\n        </form>\n      )}\n    />\n  </Spin>\n);\n\nNoteForm.propTypes = {\n  note: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    author: PropTypes.string,\n    description: PropTypes.string,\n    createDate: PropTypes.string,\n  }),\n  handleSubmit: PropTypes.func,\n  loading: PropTypes.bool,\n};\n\nNoteForm.defaultProps = {\n  note: {},\n  handleSubmit: () => {},\n  loading: true,\n};\n\nexport default NoteForm;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\api\\client.js",["316"],"import axios from 'axios';\n\nexport const client = axios.create({\n  baseURL: 'http://localhost:4000/',\n});\n\nclient.interceptors.response.use(\n  (response) => response.data,\n  (error) => Promise.reject(error),\n);\n\nexport default client;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Form\\TextAreaField.js",["317"],"import React from 'react';\nimport { Input } from 'antd';\n\nexport const TextAreaField = (props) => {\n  const { TextArea } = Input;\n  // eslint-disable-next-line react/destructuring-assignment,react/prop-types\n  return <TextArea rows={4} {...props.input} placeholder={props.placeholder} />;\n};\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\Notes\\Form\\InputField.js",["318"],"import React from 'react';\nimport { Input } from 'antd';\n\nexport const InputField = (props) =>\n  // eslint-disable-next-line react/destructuring-assignment,react/prop-types\n  <Input {...props.input} placeholder={props.placeholder} />;\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\sagas\\rootSaga.js",["319"],"import { all } from 'redux-saga/effects';\nimport {\n  watcherGetNotesSaga, watcherGetNoteByIdSaga, watcherDeleteNoteByIdSaga, watcherCreateNoteByIdSaga, watcherEditNoteByIdSaga, watcherGetNoteForEditNoteByIdSaga,\n} from './notesSagas';\n\nexport default function* rootSaga() {\n  yield all([watcherGetNotesSaga(), watcherGetNoteByIdSaga(), watcherDeleteNoteByIdSaga(), watcherCreateNoteByIdSaga(), watcherEditNoteByIdSaga(), watcherGetNoteForEditNoteByIdSaga()]);\n}\n","E:\\agiliway_projects\\agiliway_projects\\notes-domain\\src\\pages\\sagas\\notesSagas.js",["320"],"import { put, takeEvery, call } from 'redux-saga/effects';\nimport {\n  deleteNote, getNoteById, getNotes, postNote, putNote,\n} from '../../api/notes';\nimport {\n  GET_ALL_NOTES_IN_PROGRESS, GET_NOTE_FOR_EDIT, MODAL_NOTE_CREATE_START, MODAL_NOTE_DELETE_START, MODAL_NOTE_EDIT_START, NOTE_DETAIL_IN_PROGRESS,\n} from '../Notes/action-types/note.action-types';\nimport {\n  closeNotes, getNoteForEditSuccessAction, getNotesAction, getNotesInProgressAction, modalNoteCloseAction, modalNoteProgressAction, modalNoteSuccessAction,\n} from '../Notes/actions/actions';\n\nexport function* getNotesSaga() {\n  try {\n    const data = yield call(getNotes);\n    yield put(getNotesAction(data));\n  } catch (error) {\n    yield put(closeNotes());\n  }\n}\n\nfunction* getNoteSaga(action) {\n  try {\n    const data = yield call(getNoteById, action.payload);\n    yield put({\n      type: 'NOTE_DETAIL_SUCCESS', payload: data,\n    });\n  } catch (error) {\n    yield put({\n      type: 'NOTE_DETAIL_CLOSE',\n    });\n  }\n}\n\nfunction* deleteNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n  try {\n    yield call(deleteNote, action.payload);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* createNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n  try {\n    yield call(postNote, action.payload);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* editNoteSaga(action) {\n  yield put(modalNoteProgressAction());\n  try {\n    yield call(putNote, action.payload.data, action.payload.id);\n    yield put(modalNoteSuccessAction());\n    yield put(getNotesInProgressAction());\n  } catch (error) {\n    yield put(modalNoteCloseAction());\n  }\n}\n\nfunction* getNoteForEditNoteSaga(action) {\n  console.log(action.payload.id);\n  try {\n    const data = yield call(getNoteById, action.payload.id);\n    yield put(getNoteForEditSuccessAction(data));\n  } catch (error) {\n    console.log('hello');\n  }\n}\n\nexport function* watcherGetNotesSaga() {\n  yield takeEvery(GET_ALL_NOTES_IN_PROGRESS, getNotesSaga);\n}\n\nexport function* watcherGetNoteByIdSaga() {\n  yield takeEvery(NOTE_DETAIL_IN_PROGRESS, getNoteSaga);\n}\n\nexport function* watcherDeleteNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_DELETE_START, deleteNoteSaga);\n}\n\nexport function* watcherCreateNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_CREATE_START, createNoteSaga);\n}\n\nexport function* watcherEditNoteByIdSaga() {\n  yield takeEvery(MODAL_NOTE_EDIT_START, editNoteSaga);\n}\n\nexport function* watcherGetNoteForEditNoteByIdSaga() {\n  yield takeEvery(GET_NOTE_FOR_EDIT, getNoteForEditNoteSaga);\n}\n",{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","severity":1,"message":"326","line":1,"column":10,"nodeType":"327","messageId":"328","endLine":1,"endColumn":16},{"ruleId":"325","severity":1,"message":"329","line":1,"column":24,"nodeType":"327","messageId":"328","endLine":1,"endColumn":34},{"ruleId":"325","severity":1,"message":"330","line":3,"column":10,"nodeType":"327","messageId":"328","endLine":3,"endColumn":29},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"334","replacedBy":"335"},{"ruleId":"336","replacedBy":"337"},{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","replacedBy":"343"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},{"ruleId":null,"fatal":true,"severity":2,"message":"331"},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"no-unused-vars","'Layout' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'useImperativeHandle' is defined but never used.","Parsing error: Must use import to load ES Module: E:\\agiliway_projects\\agiliway_projects\\notes-domain\\node_modules\\eslint\\node_modules\\eslint-scope\\lib\\definition.js\nrequire() of ES modules is not supported.\nrequire() of E:\\agiliway_projects\\agiliway_projects\\notes-domain\\node_modules\\eslint\\node_modules\\eslint-scope\\lib\\definition.js from E:\\agiliway_projects\\agiliway_projects\\notes-domain\\node_modules\\babel-eslint\\lib\\require-from-eslint.js is an ES module file as it is a .js file whose nearest parent package.json contains \"type\": \"module\" which defines all .js files in that package scope as ES modules.\nInstead rename definition.js to end in .cjs, change the requiring code to use import(), or remove \"type\": \"module\" from E:\\agiliway_projects\\agiliway_projects\\notes-domain\\node_modules\\eslint\\node_modules\\eslint-scope\\package.json.","lines-around-directive",["346"],"no-spaced-func",["347"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-global-assign","no-unsafe-negation","padding-line-between-statements","func-call-spacing"]