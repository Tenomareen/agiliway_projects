{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\todo-redux\\\\src\\\\components\\\\Todo\\\\Todo.js\";\nimport React from \"react\";\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todoText: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.statetodoText);\n    const {\n      todoText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo Add Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const {\n              todoText\n            } = this.state;\n            const {\n              addTodo\n            } = this.props;\n            addTodo({\n              text: todoText\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => this.setState({\n              todoText: event.target.value\n            }),\n            value: todoText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), todoText.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 39\n          }, this), todoText.length > 15 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field contains too much symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: todoText.length === 0 || todoText.length > 15,\n            type: \"submit\",\n            children: \"Add todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), this.props.todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              this.props.removeTodo(index);\n            },\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList\n  };\n};\n\nconst mapDispatchToProps = {\n  addTodo: addTodoAction,\n  removeTodo: removeTodoAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["E:/React-apps/todo-redux/src/components/Todo/Todo.js"],"names":["React","addTodoAction","removeTodoAction","connect","TodoList","Component","state","todoText","render","console","log","statetodoText","width","e","preventDefault","addTodo","props","text","event","setState","target","value","length","todos","map","todo","index","removeTodo","mapStateToProps","todoList","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,gBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD6B;AAAA;;AAKrCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,aAAjB;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE;AAAA,8BACE;AAAI,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACfA,YAAAA,CAAC,CAACC,cAAF;AACA,kBAAM;AAAEP,cAAAA;AAAF,gBAAe,KAAKD,KAA1B;AACA,kBAAM;AAAES,cAAAA;AAAF,gBAAc,KAAKC,KAAzB;AACAD,YAAAA,OAAO,CAAC;AAAEE,cAAAA,IAAI,EAAEV;AAAR,aAAD,CAAP;AACD,WANH;AAAA,kCAQE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,QAAQ,EAAGW,KAAD,IACR,KAAKC,QAAL,CAAc;AAAEZ,cAAAA,QAAQ,EAAEW,KAAK,CAACE,MAAN,CAAaC;AAAzB,aAAd,CAHJ;AAKE,YAAA,KAAK,EAAEd;AALT;AAAA;AAAA;AAAA;AAAA,kBARF,EAeGA,QAAQ,CAACe,MAAT,KAAoB,CAApB,iBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAf5B,EAgBGf,QAAQ,CAACe,MAAT,GAAkB,EAAlB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ,eAmBE;AACE,YAAA,QAAQ,EAAEf,QAAQ,CAACe,MAAT,KAAoB,CAApB,IAAyBf,QAAQ,CAACe,MAAT,GAAkB,EADvD;AAEE,YAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EA4BG,KAAKN,KAAL,CAAWO,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACpB;AAAA,kCACE;AAAA,sBAAOD,IAAI,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,OAAO,EAAE,MAAM;AACb,mBAAKD,KAAL,CAAWW,UAAX,CAAsBD,KAAtB;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,CA5BH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AA8CD;;AAvDoC;;AA0DvC,MAAME,eAAe,GAAItB,KAAD,IAAW;AACjC,SAAO;AACLuB,IAAAA,QAAQ,EAAEvB,KAAK,CAACuB;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAG;AACzBf,EAAAA,OAAO,EAAEd,aADgB;AAEzB0B,EAAAA,UAAU,EAAEzB;AAFa,CAA3B;AAKA,eAAeC,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C1B,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    todoText: \"\",\r\n  };\r\n\r\n  render() {\r\n    console.log(this.statetodoText);\r\n    const { todoText } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <hr style={{ width: \"100%\" }} />\r\n        <div>\r\n          <div>Todo Add Form</div>\r\n          <form\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              const { todoText } = this.state;\r\n              const { addTodo } = this.props;\r\n              addTodo({ text: todoText });\r\n            }}\r\n          >\r\n            <input\r\n              type=\"text\"\r\n              onChange={(event) =>\r\n                this.setState({ todoText: event.target.value })\r\n              }\r\n              value={todoText}\r\n            />\r\n            {todoText.length === 0 && <span>Field can't be empty</span>}\r\n            {todoText.length > 15 && (\r\n              <span>Field contains too much symbols</span>\r\n            )}\r\n            <button\r\n              disabled={todoText.length === 0 || todoText.length > 15}\r\n              type=\"submit\"\r\n            >\r\n              Add todo\r\n            </button>\r\n          </form>\r\n          {this.props.todos.map((todo, index) => (\r\n            <div>\r\n              <span>{todo.text}</span>\r\n              <span\r\n                onClick={() => {\r\n                  this.props.removeTodo(index);\r\n                }}\r\n              >\r\n                ‚ùå\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todoList: state.todoList,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo: addTodoAction,\r\n  removeTodo: removeTodoAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n"]},"metadata":{},"sourceType":"module"}