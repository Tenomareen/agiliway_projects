{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\todo-redux\\\\src\\\\components\\\\Todo\\\\Todo.js\";\nimport React from \"react\";\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todoText: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state.todoText);\n    const {\n      todoText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Todo Add Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          const {\n            todoText\n          } = this.state;\n          const {\n            addTodo\n          } = this.props;\n          addTodo({\n            text: todoText\n          });\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => this.setState({\n            todoText: event.target.value\n          }),\n          value: todoText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), todoText.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Field can't be empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 37\n        }, this), todoText.length > 15 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Field contains too much symbols\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: todoText.length === 0 || todoText.length > 15,\n          type: \"submit\",\n          children: \"Add todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), this.props.todoList.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => {\n            this.props.removeTodo(index);\n          },\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  todoList: state.todoList\n});\n\nconst mapDispatchToProps = {\n  addTodo: addTodoAction,\n  removeTodo: removeTodoAction\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["E:/React-apps/todo-redux/src/components/Todo/Todo.js"],"names":["React","addTodoAction","removeTodoAction","connect","TodoList","Component","state","todoText","render","console","log","e","preventDefault","addTodo","props","text","event","setState","target","value","length","todoList","map","todo","index","removeTodo","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,gBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD6B;AAAA;;AAKrCC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,QAAvB;AACA,UAAM;AAAEA,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,QAAQ,EAAGK,CAAD,IAAO;AACfA,UAAAA,CAAC,CAACC,cAAF;AACA,gBAAM;AAAEL,YAAAA;AAAF,cAAe,KAAKD,KAA1B;AACA,gBAAM;AAAEO,YAAAA;AAAF,cAAc,KAAKC,KAAzB;AACAD,UAAAA,OAAO,CAAC;AAAEE,YAAAA,IAAI,EAAER;AAAR,WAAD,CAAP;AACD,SANH;AAAA,gCAQE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,QAAQ,EAAGS,KAAD,IACR,KAAKC,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAES,KAAK,CAACE,MAAN,CAAaC;AAAzB,WAAd,CAHJ;AAKE,UAAA,KAAK,EAAEZ;AALT;AAAA;AAAA;AAAA;AAAA,gBARF,EAeGA,QAAQ,CAACa,MAAT,KAAoB,CAApB,iBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAf5B,EAgBGb,QAAQ,CAACa,MAAT,GAAkB,EAAlB,iBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhB3B,eAiBE;AACE,UAAA,QAAQ,EAAEb,QAAQ,CAACa,MAAT,KAAoB,CAApB,IAAyBb,QAAQ,CAACa,MAAT,GAAkB,EADvD;AAEE,UAAA,IAAI,EAAC,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EA2BG,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,kBACvB;AAAA,gCACE;AAAA,oBAAOD,IAAI,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,iBAAKD,KAAL,CAAWW,UAAX,CAAsBD,KAAtB;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CA3BH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0CD;;AAnDoC;;AAsDvC,MAAME,eAAe,GAAIpB,KAAD,KAAY;AAClCe,EAAAA,QAAQ,EAAEf,KAAK,CAACe;AADkB,CAAZ,CAAxB;;AAIA,MAAMM,kBAAkB,GAAG;AACzBd,EAAAA,OAAO,EAAEZ,aADgB;AAEzBwB,EAAAA,UAAU,EAAEvB;AAFa,CAA3B;AAKA,eAAeC,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvB,QAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass TodoList extends React.Component {\r\n  state = {\r\n    todoText: \"\",\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.todoText);\r\n    const { todoText } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>Todo Add Form</div>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            const { todoText } = this.state;\r\n            const { addTodo } = this.props;\r\n            addTodo({ text: todoText });\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            onChange={(event) =>\r\n              this.setState({ todoText: event.target.value })\r\n            }\r\n            value={todoText}\r\n          />\r\n          {todoText.length === 0 && <span>Field can't be empty</span>}\r\n          {todoText.length > 15 && <span>Field contains too much symbols</span>}\r\n          <button\r\n            disabled={todoText.length === 0 || todoText.length > 15}\r\n            type=\"submit\"\r\n          >\r\n            Add todo\r\n          </button>\r\n        </form>\r\n        {/* <hr style={{ width: \"100%\" }} /> */}\r\n        {this.props.todoList.map((todo, index) => (\r\n          <div>\r\n            <span>{todo.text}</span>\r\n            <span\r\n              onClick={() => {\r\n                this.props.removeTodo(index);\r\n              }}\r\n            >\r\n              ‚ùå\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todoList: state.todoList,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo: addTodoAction,\r\n  removeTodo: removeTodoAction,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n"]},"metadata":{},"sourceType":"module"}