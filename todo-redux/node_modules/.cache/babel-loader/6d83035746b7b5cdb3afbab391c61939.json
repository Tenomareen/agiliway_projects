{"ast":null,"code":"import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport const TODO_INPUT = \"TODO_INPUT\";\nexport const TODO_REMOVE = \"TODO_REMOVE\";\nexport const addTodoAction = todo => ({\n  type: TODO_INPUT,\n  payload: todo\n});\nexport const removeTodoAction = todoId => ({\n  type: TODO_REMOVE,\n  payload: todoId\n});\nconst initialState = {\n  todoList: []\n};\n/*\r\n  type: \"\"\r\n  payload: {} \r\n  error: {}\r\n*/\n\nfunction todoReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TODO_INPUT:\n      {\n        return { ...state,\n          todoList: [...this.todoList, action.payload]\n        };\n      }\n\n    case TODO_REMOVE:\n      {\n        const todoIndex = action.payload;\n        const updatedTodos = state.todoList.filter((todo, index) => index !== todoIndex);\n        return { ...state,\n          todoList: updatedTodos\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(todoReducer, composeWithDevTools() // other store enhancers if any\n);","map":{"version":3,"sources":["E:/React-apps/todo-redux/src/components/store/store.js"],"names":["createStore","composeWithDevTools","TODO_INPUT","TODO_REMOVE","addTodoAction","todo","type","payload","removeTodoAction","todoId","initialState","todoList","todoReducer","state","action","todoIndex","updatedTodos","filter","index","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACtCC,EAAAA,IAAI,EAAEJ,UADgC;AAEtCK,EAAAA,OAAO,EAAEF;AAF6B,CAAX,CAAtB;AAIP,OAAO,MAAMG,gBAAgB,GAAIC,MAAD,KAAa;AAC3CH,EAAAA,IAAI,EAAEH,WADqC;AAE3CI,EAAAA,OAAO,EAAEE;AAFkC,CAAb,CAAzB;AAKP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIA;AACA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACjD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKJ,UAAL;AAAiB;AACf,eAAO,EAAE,GAAGW,KAAL;AAAYF,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKA,QAAT,EAAmBG,MAAM,CAACP,OAA1B;AAAtB,SAAP;AACD;;AACD,SAAKJ,WAAL;AAAkB;AAChB,cAAMY,SAAS,GAAGD,MAAM,CAACP,OAAzB;AACA,cAAMS,YAAY,GAAGH,KAAK,CAACF,QAAN,CAAeM,MAAf,CACnB,CAACZ,IAAD,EAAOa,KAAP,KAAiBA,KAAK,KAAKH,SADR,CAArB;AAGA,eAAO,EAAE,GAAGF,KAAL;AAAYF,UAAAA,QAAQ,EAAEK;AAAtB,SAAP;AACD;;AACD;AACE,aAAOH,KAAP;AAZJ;AAcD;;AAED,OAAO,MAAMM,KAAK,GAAGnB,WAAW,CAC9BY,WAD8B,EAE9BX,mBAAmB,EAFW,CAG9B;AAH8B,CAAzB","sourcesContent":["import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const TODO_INPUT = \"TODO_INPUT\";\r\nexport const TODO_REMOVE = \"TODO_REMOVE\";\r\n\r\nexport const addTodoAction = (todo) => ({\r\n  type: TODO_INPUT,\r\n  payload: todo,\r\n});\r\nexport const removeTodoAction = (todoId) => ({\r\n  type: TODO_REMOVE,\r\n  payload: todoId\r\n});\r\n\r\nconst initialState = {\r\n  todoList: [],\r\n};\r\n\r\n/*\r\n  type: \"\"\r\n  payload: {} \r\n  error: {}\r\n*/\r\n\r\nfunction todoReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TODO_INPUT: {\r\n      return { ...state, todoList: [...this.todoList, action.payload] };\r\n    }\r\n    case TODO_REMOVE: {\r\n      const todoIndex = action.payload;\r\n      const updatedTodos = state.todoList.filter(\r\n        (todo, index) => index !== todoIndex\r\n      );\r\n      return { ...state, todoList: updatedTodos };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const store = createStore(\r\n  todoReducer,\r\n  composeWithDevTools()\r\n  // other store enhancers if any\r\n);\r\n"]},"metadata":{},"sourceType":"module"}