{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\todo-redux\\\\src\\\\components\\\\Todo\\\\Todo.js\";\nimport React from \"react\";\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TodoList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      fields: {\n        todoText: {\n          name: \"todoText\",\n          label: \"Todo text\",\n          value: \"\",\n          error: null,\n          validator: function () {\n            let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n            return value ? false : \"Required\";\n          }\n        }\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      const currentField = this.state.fields[name];\n      this.setState({\n        fields: { ...this.state.fields,\n          [name]: { ...currentField,\n            value\n          }\n        }\n      }); //  console.log(this.state.fields.todoText.value);\n    };\n\n    this.mapStateToProps = state => {\n      return {\n        todoList: state.todoList\n      };\n    };\n\n    this.mapDispatchToProps = dispatch => {\n      return {\n        addTodo: () => {\n          dispatch(addTodoAction(this.state.fields.todoText));\n          console.log(this.state.fields.todoText.value);\n        },\n        removeTodo: () => {\n          dispatch(removeTodoAction());\n        }\n      };\n    };\n  }\n\n  // handleAdding = (event) => {\n  //     let todoItem = {\n  //         value : \"\"\n  //     }\n  //     const { todoList, value } = this.state;\n  //     todoItem.value = this.state.fields.todoText.value;\n  //     event.preventDefault();\n  //     this.setState({\n  //         todoList : [...todoList,todoItem],\n  //         fields: {\n  //             todoText: {\n  //                 name: \"todoText\",\n  //                 label: \"Todo text\",\n  //                 value: \"\",\n  //     }}});\n  //     console.log(value);\n  //    // this.state.fields.todoText.value = \"\";\n  // }\n  render() {\n    console.log(this.props);\n    const {\n      fields: {\n        todoText\n      }\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo Add Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              paddingRight: \"20px\"\n            },\n            htmlFor: todoText.name,\n            children: todoText.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: this.handleChange,\n            value: todoText.value,\n            name: todoText.name,\n            id: todoText.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), todoText.value.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 45\n          }, this), todoText.value.length > 15 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field contains too much symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: todoText.value.length === 0 || todoText.value.length > 15,\n            style: {\n              marginLeft: \"20px\"\n            },\n            onClick: this.addTodo,\n            children: \"Add todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.removeTodo,\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport default TodoList;","map":{"version":3,"sources":["E:/React-apps/todo-redux/src/components/Todo/Todo.js"],"names":["React","addTodoAction","removeTodoAction","TodoList","Component","state","fields","todoText","name","label","value","error","validator","handleSubmit","event","preventDefault","handleChange","target","currentField","setState","mapStateToProps","todoList","mapDispatchToProps","dispatch","addTodo","console","log","removeTodo","render","props","width","paddingRight","length","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\r\n\r\nexport class TodoList extends React.Component {\r\n  state = {\r\n    fields: {\r\n      todoText: {\r\n        name: \"todoText\",\r\n        label: \"Todo text\",\r\n        value: \"\",\r\n        error: null,\r\n        validator: (value = \"\") => {\r\n          return value ? false : \"Required\";\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n    const currentField = this.state.fields[name];\r\n    this.setState({\r\n      fields: {\r\n        ...this.state.fields,\r\n        [name]: { ...currentField, value },\r\n      },\r\n    });\r\n    //  console.log(this.state.fields.todoText.value);\r\n  };\r\n\r\n  // handleAdding = (event) => {\r\n  //     let todoItem = {\r\n  //         value : \"\"\r\n  //     }\r\n  //     const { todoList, value } = this.state;\r\n  //     todoItem.value = this.state.fields.todoText.value;\r\n  //     event.preventDefault();\r\n  //     this.setState({\r\n  //         todoList : [...todoList,todoItem],\r\n  //         fields: {\r\n  //             todoText: {\r\n  //                 name: \"todoText\",\r\n  //                 label: \"Todo text\",\r\n  //                 value: \"\",\r\n  //     }}});\r\n  //     console.log(value);\r\n  //    // this.state.fields.todoText.value = \"\";\r\n  // }\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    const {\r\n      fields: { todoText },\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {/* <div>\r\n                    <div>Todo List</div>\r\n                    {todoList.map((todo) => (\r\n                        <div>{todo.value}</div>\r\n                    ))}\r\n                </div> */}\r\n        <hr style={{ width: \"100%\" }} />\r\n        <div>\r\n          <div>Todo Add Form</div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <label style={{ paddingRight: \"20px\" }} htmlFor={todoText.name}>\r\n              {todoText.label}\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.handleChange}\r\n              value={todoText.value}\r\n              name={todoText.name}\r\n              id={todoText.name}\r\n            />\r\n            {todoText.value.length === 0 && <span>Field can't be empty</span>}\r\n            {todoText.value.length > 15 && (\r\n              <span>Field contains too much symbols</span>\r\n            )}\r\n            <button\r\n              disabled={\r\n                todoText.value.length === 0 || todoText.value.length > 15\r\n              }\r\n              style={{ marginLeft: \"20px\" }}\r\n              onClick={this.addTodo}\r\n            >\r\n              Add todo\r\n            </button>\r\n            {/* disabled={this.state.todoList.length === 0}  || todoList.length === 9  */}\r\n            <button onClick={this.removeTodo}>Remove</button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  mapStateToProps = (state) => {\r\n    return {\r\n      todoList: state.todoList,\r\n    };\r\n  };\r\n\r\n  mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addTodo: () => {\r\n        dispatch(addTodoAction(this.state.fields.todoText));\r\n        console.log(this.state.fields.todoText.value);\r\n      },\r\n      removeTodo: () => {\r\n        dispatch(removeTodoAction());\r\n      },\r\n    };\r\n  };\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}