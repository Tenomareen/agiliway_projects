{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\todo-redux\\\\src\\\\components\\\\Todo\\\\Todo.js\";\nimport React from \"react\";\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class TodoList extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      todoText: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state.fields.todoText.value);\n    const {\n      todoText\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Todo Add Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => {\n            e.preventDefault();\n            const {\n              todoText\n            } = this.state;\n            const {\n              addTodo\n            } = this.props;\n            addTodo({\n              text: todoText\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: event => this.setState({\n              todoText: event.target.value\n            }),\n            value: todoText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), todoText.length === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 39\n          }, this), todoText.length > 15 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Field contains too much symbols\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: todoText.length === 0 || todoText.length > 15,\n            type: \"submit\",\n            children: \"Add todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), this.props.todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => {\n              this.props.removeTodo(index);\n            },\n            children: \"\\u274C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 50\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    todoList: state.todoList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTodo: () => {\n      dispatch(addTodoAction(this.state.fields.todoText));\n      console.log(this.state.fields.todoText.value);\n    },\n    removeTodo: () => {\n      dispatch(removeTodoAction());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","map":{"version":3,"sources":["E:/React-apps/todo-redux/src/components/Todo/Todo.js"],"names":["React","addTodoAction","removeTodoAction","connect","TodoList","Component","state","todoText","render","console","log","fields","value","width","e","preventDefault","addTodo","props","text","event","setState","target","length","todos","map","todo","index","removeTodo","mapStateToProps","todoList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { addTodoAction, removeTodoAction } from \"../store/store\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class TodoList extends React.Component {\r\n  state = {\r\n    todoText: \"\",\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.fields.todoText.value);\r\n    const { todoText } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <hr style={{ width: \"100%\" }} />\r\n        <div>\r\n          <div>Todo Add Form</div>\r\n          <form onSubmit={e => {\r\n          e.preventDefault();\r\n          const { todoText } = this.state;\r\n          const { addTodo } = this.props;\r\n          addTodo({ text: todoText });\r\n        }}>\r\n            <input\r\n              type=\"text\"\r\n              onChange={(event) => this.setState({ todoText: event.target.value })}\r\n              value={todoText}\r\n            />\r\n            {todoText.length === 0 && <span>Field can't be empty</span>}\r\n            {todoText.length > 15 && (\r\n              <span>Field contains too much symbols</span>\r\n            )}\r\n            <button\r\n              disabled={\r\n                todoText.length === 0 || todoText.length > 15\r\n              }\r\n              type=\"submit\"\r\n            >\r\n              Add todo\r\n            </button>\r\n          </form>\r\n          {this.props.todos.map((todo, index) => <div>\r\n          <span>{todo.text}</span>\r\n          <span onClick={() => {this.props.removeTodo(index)}}>‚ùå</span>\r\n        </div>)}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      todoList: state.todoList,\r\n    };\r\n  };\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      addTodo: () => {\r\n        dispatch(addTodoAction(this.state.fields.todoText));\r\n        console.log(this.state.fields.todoText.value);\r\n      },\r\n      removeTodo: () => {\r\n        dispatch(removeTodoAction());\r\n      },\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\r\n"]},"metadata":{},"sourceType":"module"}