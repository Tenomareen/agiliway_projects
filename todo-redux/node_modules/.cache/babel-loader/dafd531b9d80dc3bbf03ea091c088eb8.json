{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nexport const TODO_INPUT = \"TODO_INPUT\";\nexport const TODO_REMOVE = \"TODO_REMOVE\";\nexport const addTodoAction = todo => ({\n  type: TODO_INPUT,\n  payload: todo\n});\nexport const removeTodoAction = () => ({\n  type: TODO_REMOVE\n});\nconst initialState = {\n  isModalOpen: false,\n  todoList: []\n};\n/*\r\n  type: \"\"\r\n  payload: {} \r\n  error: {}\r\n*/\n\nfunction modalReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TODO_INPUT:\n      {\n        return { ...state,\n          todoList: [...this.todoList, action.payload]\n        };\n      }\n\n    case TODO_REMOVE:\n      {\n        return { ...state,\n          todoList: [...this.todoList.splice(1, this.todoList.length)]\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(modalReducer, composeWithDevTools() // other store enhancers if any\n);","map":{"version":3,"sources":["E:/React-apps/todo-redux/src/components/store/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","TODO_INPUT","TODO_REMOVE","addTodoAction","todo","type","payload","removeTodoAction","initialState","isModalOpen","todoList","modalReducer","state","action","splice","length","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,aAAa,GAAIC,IAAD,KAAW;AACpCC,EAAAA,IAAI,EAAEJ,UAD8B;AAEpCK,EAAAA,OAAO,EAAEF;AAF2B,CAAX,CAAtB;AAIP,OAAO,MAAMG,gBAAgB,GAAG,OAAO;AACnCF,EAAAA,IAAI,EAAEH;AAD6B,CAAP,CAAzB;AAIP,MAAMM,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,KADM;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;AAMA;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAClD,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKJ,UAAL;AAAiB;AACf,eAAO,EAAE,GAAGW,KAAL;AAAYF,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKA,QAAT,EAAmBG,MAAM,CAACP,OAA1B;AAAtB,SAAP;AACC;;AACH,SAAKJ,WAAL;AAAkB;AAChB,eAAO,EAAE,GAAGU,KAAL;AAAYF,UAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKA,QAAL,CAAcI,MAAd,CAAqB,CAArB,EAAwB,KAAKJ,QAAL,CAAcK,MAAtC,CAAJ;AAAtB,SAAP;AACG;;AACL;AACE,aAAOH,KAAP;AARJ;AAUD;;AAED,OAAO,MAAMI,KAAK,GAAGlB,WAAW,CAC9Ba,YAD8B,EAE9BX,mBAAmB,EAFW,CAG9B;AAH8B,CAAzB","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const TODO_INPUT = \"TODO_INPUT\";\r\nexport const TODO_REMOVE = \"TODO_REMOVE\";\r\n\r\nexport const addTodoAction = (todo) => ({\r\n    type: TODO_INPUT,\r\n    payload: todo\r\n});\r\nexport const removeTodoAction = () => ({\r\n    type: TODO_REMOVE,\r\n});\r\n\r\nconst initialState = {\r\n  isModalOpen: false,\r\n  todoList: [], \r\n  \r\n};\r\n\r\n/*\r\n  type: \"\"\r\n  payload: {} \r\n  error: {}\r\n*/\r\n\r\nfunction modalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TODO_INPUT: {\r\n      return { ...state, todoList: [...this.todoList, action.payload] };\r\n      }\r\n    case TODO_REMOVE: {\r\n      return { ...state, todoList: [...this.todoList.splice(1, this.todoList.length)] };\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const store = createStore(\r\n  modalReducer,\r\n  composeWithDevTools()\r\n  // other store enhancers if any\r\n);\r\n"]},"metadata":{},"sourceType":"module"}