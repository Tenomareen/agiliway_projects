{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\modal-redux\\\\src\\\\components\\\\ModalRedux.js\";\nimport { showModalAction, SHOW_MODAL, hideModalAction, modalReducer } from \"./store/store\";\nimport { connect } from \"react-redux\";\nimport MyModal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalRedux(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.openModal,\n      children: \"Modal Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      onClose: props.hideModal,\n      isOpen: props.isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ModalRedux;\n\nconst mapStateToProps = state => {\n  return {\n    isOpen: state.isModalOpen\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    openModal: () => {\n      dispatch(showModalAction(true));\n    },\n    closeModal: () => {\n      dispatch(showModalAction(false));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalRedux);\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalRedux\");","map":{"version":3,"sources":["E:/React-apps/modal-redux/src/components/ModalRedux.js"],"names":["showModalAction","SHOW_MODAL","hideModalAction","modalReducer","connect","MyModal","ModalRedux","props","console","log","openModal","hideModal","isOpen","mapStateToProps","state","isModalOpen","mapDispatchToProps","dispatch","closeModal"],"mappings":";AAAA,SACEA,eADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,YAJF,QAKO,eALP;AAMA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEA,KAAK,CAACG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEH,KAAK,CAACI,SAAxB;AAAmC,MAAA,MAAM,EAAEJ,KAAK,CAACK;AAAjD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;KARQN,U;;AAUT,MAAMO,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,MAAM,EAAEE,KAAK,CAACC;AADT,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLP,IAAAA,SAAS,EAAE,MAAM;AACfO,MAAAA,QAAQ,CAACjB,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,KAHI;AAILkB,IAAAA,UAAU,EAAE,MAAM;AAChBD,MAAAA,QAAQ,CAACjB,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD;AANI,GAAP;AAQD,CATD;;AAWA,eAAeI,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,UAA7C,CAAf","sourcesContent":["import {\r\n  showModalAction,\r\n  SHOW_MODAL,\r\n  hideModalAction,\r\n  modalReducer,\r\n} from \"./store/store\";\r\nimport { connect } from \"react-redux\";\r\nimport MyModal from \"./Modal\";\r\n\r\nfunction ModalRedux(props) {\r\n  console.log(props);\r\n  return (\r\n    <>\r\n      <button onClick={props.openModal}>Modal Redux</button>\r\n      <MyModal onClose={props.hideModal} isOpen={props.isOpen} />\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isOpen: state.isModalOpen,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    openModal: () => {\r\n      dispatch(showModalAction(true));\r\n    },\r\n    closeModal: () => {\r\n      dispatch(showModalAction(false));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalRedux);\r\n"]},"metadata":{},"sourceType":"module"}