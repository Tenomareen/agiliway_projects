{"ast":null,"code":"var _jsxFileName = \"E:\\\\React-apps\\\\modal-redux\\\\src\\\\components\\\\ModalReact.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport MyModal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ModalReact() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShow(true),\n      children: \" Modal React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      onClose: () => {\n        setShow(false);\n      },\n      show: show\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ModalReact, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = ModalReact;\nexport default ModalReact;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalReact\");","map":{"version":3,"sources":["E:/React-apps/modal-redux/src/components/ModalReact.js"],"names":["React","Component","useState","MyModal","ModalReact","show","setShow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,SAApB;;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AAEI,sBACI;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAE,MAAMI,OAAO,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,OAAD;AACA,MAAA,OAAO,EAAE,MAAM;AAACA,QAAAA,OAAO,CAAC,KAAD,CAAP;AAAe,OAD/B;AAEA,MAAA,IAAI,EAAED;AAFN;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAQH;;GAXID,U;;KAAAA,U;AAaT,eAAeA,UAAf","sourcesContent":["import React, { Component, useState } from \"react\";\r\nimport MyModal from \"./Modal\";\r\n\r\nfunction ModalReact() {\r\n    const [show, setShow] = useState(false)\r\n\r\n        return (\r\n            <>\r\n            <button onClick={() => setShow(true)}> Modal React</button>\r\n            <MyModal \r\n            onClose={() => {setShow(false)}}\r\n            show={show}/>\r\n            </>\r\n            );\r\n    }\r\n\r\nexport default ModalReact;"]},"metadata":{},"sourceType":"module"}